(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    449565,       8861]
NotebookOptionsPosition[    424417,       8452]
NotebookOutlinePosition[    426205,       8498]
CellTagsIndexPosition[    425925,       8488]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Unit 1 - Getting Started with ",
  FontWeight->"Plain"],
 StyleBox["Mathematica",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontWeight->"Plain"]
}], "Title",
 CellChangeTimes->{{3.6403904600229807`*^9, 3.6403905201946287`*^9}, {
   3.6403941995439835`*^9, 3.640394207302406*^9}, {3.6405042759081044`*^9, 
   3.6405042930845957`*^9}, {3.641997026688299*^9, 3.641997052348578*^9}, {
   3.642069857830206*^9, 3.642069873004301*^9}, {3.6421044112282*^9, 
   3.642104421760852*^9}, {3.642191345797497*^9, 3.6421913527672763`*^9}, 
   3.6426032250020328`*^9, {3.644838373397315*^9, 3.644838392890437*^9}, {
   3.644838586166432*^9, 3.644838603579973*^9}, {3.6449346599218035`*^9, 
   3.6449346776743746`*^9}},
 FontSize->44,
 FontColor->RGBColor[
  0.8, 0.043, 0.008],ExpressionUUID->"1a388429-f445-48ad-a844-f8e70e7fcf97"],

Cell["This unit covers the following topics.", "Text",
 CellChangeTimes->{{3.640390540296621*^9, 3.6403906586221704`*^9}, {
   3.6403906941461816`*^9, 3.6403909373284364`*^9}, {3.640391015337858*^9, 
   3.6403911033362556`*^9}, {3.6420002196390877`*^9, 3.64200023717304*^9}, {
   3.6420070585680447`*^9, 3.642007073024333*^9}, {3.642069997161542*^9, 
   3.64207008443631*^9}, {3.6420701281057014`*^9, 3.6420701824656734`*^9}, {
   3.6420702164495354`*^9, 3.6420705289847054`*^9}, {3.6421044542985477`*^9, 
   3.642104723801575*^9}, {3.642105208823357*^9, 3.642105209925382*^9}, {
   3.64210578401422*^9, 3.6421057914533834`*^9}, {3.6421921601821194`*^9, 
   3.642192357940322*^9}, {3.6421924065708237`*^9, 3.642192442294801*^9}, {
   3.6421925384462566`*^9, 3.642192727937997*^9}, {3.642192765379671*^9, 
   3.642192768348917*^9}, {3.6421928834103127`*^9, 3.642192917867707*^9}, {
   3.6421929931846013`*^9, 3.642193063038967*^9}, {3.6421930989808474`*^9, 
   3.6421931107791*^9}, 3.6421949652238665`*^9, {3.6421950198057027`*^9, 
   3.6421950395345907`*^9}, {3.6421951932257247`*^9, 3.642195199070527*^9}, {
   3.642195233551323*^9, 3.642195300037068*^9}, {3.642195357534947*^9, 
   3.64219541373487*^9}, {3.642196504411894*^9, 3.6421965318396873`*^9}, {
   3.6423678365719385`*^9, 3.642368141648304*^9}, {3.642368172247405*^9, 
   3.642368710142162*^9}, {3.6423687527727776`*^9, 3.6423688326284924`*^9}, {
   3.642370962892834*^9, 3.6423710062587056`*^9}, {3.642371157484006*^9, 
   3.6423711725639515`*^9}, {3.6424584366700697`*^9, 3.6424584398892446`*^9}, 
   3.642461648833167*^9, {3.6425141704260798`*^9, 3.6425143603733854`*^9}, 
   3.642537778182909*^9, {3.64267734051062*^9, 3.642677412222028*^9}, {
   3.642677568104925*^9, 3.6426775972334576`*^9}, {3.642678664582131*^9, 
   3.642678664972769*^9}, {3.642715659008841*^9, 3.6427160569013777`*^9}, {
   3.6427262059014564`*^9, 3.6427262119363585`*^9}, {3.642726242007606*^9, 
   3.642726242957693*^9}, {3.6434527497328615`*^9, 3.643452749982937*^9}, {
   3.6434528924593973`*^9, 3.6434528942878695`*^9}, {3.6436445123232794`*^9, 
   3.6436445125888414`*^9}, {3.643644567865652*^9, 3.6436445682562633`*^9}, {
   3.6436447530238705`*^9, 3.643644757572235*^9}, {3.643654735193631*^9, 
   3.643654750961423*^9}},ExpressionUUID->"d4ce0e78-3089-4f80-90fc-\
0e50a8cf6dac"],

Cell[TextData[ButtonBox["Basic introduction",
 BaseStyle->"Hyperlink",
 ButtonData->"Basic introduction"]], "ItemNumbered",
 CellChangeTimes->{{3.642677431943365*^9, 3.6426774325215034`*^9}, {
   3.6426780363636484`*^9, 3.642678050130965*^9}, 3.6426780918388395`*^9, {
   3.6427208053168197`*^9, 3.642720808973836*^9}, {3.642725216097347*^9, 
   3.642725219856002*^9}, {3.6428544218606577`*^9, 3.6428544218606577`*^9}, {
   3.643452821323948*^9, 3.6434528402953897`*^9}, {3.6434537893203697`*^9, 
   3.643453792648978*^9}, 3.643464382891264*^9, 3.6434644945648537`*^9, {
   3.643595559943232*^9, 3.6435955610155325`*^9}, {3.6436445791015034`*^9, 
   3.6436446543766513`*^9}, {3.643645044274838*^9, 3.6436450450095077`*^9}, 
   3.6436451530873156`*^9, {3.6436481764365396`*^9, 3.643648214926756*^9}, 
   3.6436482573444514`*^9, {3.6727869919540005`*^9, 
   3.6727869919540005`*^9}},ExpressionUUID->"93c14b48-6d46-41ea-9dc1-\
ea8f323dd4e4"],

Cell[TextData[ButtonBox["Some tricks, good and bad",
 BaseStyle->"Hyperlink",
 ButtonData->"Some tricks"]], "ItemNumbered",
 CellChangeTimes->{
  3.6428544221732197`*^9, {3.6428794431071887`*^9, 3.642879443994235*^9}, {
   3.643452851015731*^9, 3.6434528629706078`*^9}, 3.6436446652530293`*^9, 
   3.6436448235364466`*^9, 3.6436450581048927`*^9, 3.643645170214759*^9, 
   3.643648193079655*^9, {3.6727870193680735`*^9, 
   3.6727870193680735`*^9}},ExpressionUUID->"37576309-38e0-4fd7-af74-\
773c36b76359"],

Cell[TextData[ButtonBox["Assigning values to variables",
 BaseStyle->"Hyperlink",
 ButtonData->"Assigning values to variables"]], "ItemNumbered",
 CellChangeTimes->{{3.642726254279675*^9, 3.6427262667855496`*^9}, {
   3.64345286658064*^9, 3.6434528739412537`*^9}, {3.643494730561987*^9, 
   3.6434947305775456`*^9}, {3.643495504547664*^9, 3.643495504547664*^9}, 
   3.643644680348627*^9, 3.643644836835409*^9, {3.6436449285211873`*^9, 
   3.6436449315060873`*^9}, 3.6436450701067095`*^9, 3.643645180450613*^9, 
   3.6436482687367907`*^9, {3.643648348436821*^9, 3.643648348780884*^9}, {
   3.672787044192442*^9, 
   3.672787044192442*^9}},ExpressionUUID->"502359d6-d6de-4d9f-a3b8-\
530c09f947f1"],

Cell[TextData[ButtonBox["Adding comments",
 BaseStyle->"Hyperlink",
 ButtonData->"Adding comments"]], "ItemNumbered",
 CellChangeTimes->{{3.6436451121279516`*^9, 3.643645129818669*^9}, 
   3.643645213770769*^9, 3.6436482920688143`*^9, {3.643648420305047*^9, 
   3.6436484254932785`*^9}, {3.643649638979856*^9, 3.6436496394954824`*^9}, {
   3.6727870691746798`*^9, 
   3.6727870691746798`*^9}},ExpressionUUID->"208ed25e-b16c-4a27-821a-\
a1e730fad9d5"],

Cell[TextData[ButtonBox["More about palettes",
 BaseStyle->"Hyperlink",
 ButtonData->"More about palettes"]], "ItemNumbered",
 CellChangeTimes->{{3.6436453014085016`*^9, 3.643645327086566*^9}, {
  3.6436483221201534`*^9, 3.643648335559968*^9}, {3.643649706159777*^9, 
  3.6436497066753893`*^9}, {3.6727870925439034`*^9, 
  3.6727870925439034`*^9}},ExpressionUUID->"887a933c-d67a-48d7-92e7-\
ea25f178b348"],

Cell[TextData[ButtonBox["Symbolic computing",
 BaseStyle->"Hyperlink",
 ButtonData->"Symbolic computing"]], "ItemNumbered",
 CellChangeTimes->{
  3.643648335856844*^9, {3.672787120455016*^9, 
   3.672787120455016*^9}},ExpressionUUID->"47d24f7c-9c97-4e9d-b2ea-\
1535eaa474d9"],

Cell[CellGroupData[{

Cell["Basic introduction", "Subtitle",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6436481346791105`*^9, 3.6436481579329853`*^9}, {
  3.6436482050187798`*^9, 3.6436482102230315`*^9}, {3.6436482514998116`*^9, 
  3.643648253312327*^9}},
 CellTags->
  "Basic introduction",ExpressionUUID->"1c59bec7-601a-467f-8fe4-e6666507d408"],

Cell[TextData[{
 "First of all, ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "is a calculator which everyone can use without reading its \
\[OpenCurlyDoubleQuote]user\[CloseCurlyQuote]s \
manual\[CloseCurlyDoubleQuote]. Type a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command, then, hold down the key \[ShiftKey] and press the key \[EnterKey] \
to execute the command. For example, type ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "+", "2"}], TraditionalForm]],ExpressionUUID->
  "aacd21f8-9576-4424-a8bb-f49d275e2b09"],
 ",",
 " ",
 "press \[EnterKey] while holding down \[ShiftKey], and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " outputs 3 as the result of the evaluation."
}], "Text",
 CellChangeTimes->{{3.640390540296621*^9, 3.6403906586221704`*^9}, {
   3.6403906941461816`*^9, 3.6403909373284364`*^9}, {3.640391015337858*^9, 
   3.6403911033362556`*^9}, {3.6420002196390877`*^9, 3.64200023717304*^9}, {
   3.6420070585680447`*^9, 3.642007073024333*^9}, 3.6424585190835333`*^9, {
   3.6436638146272306`*^9, 3.643663903632062*^9}, {3.643664697423129*^9, 
   3.643664697718145*^9}, {3.648298203266348*^9, 
   3.6482982233999453`*^9}},ExpressionUUID->"9d2f6944-0781-4adf-b2ae-\
0ffb3e17cdee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "2"}]], "Input",
 CellChangeTimes->{{3.6403909400322113`*^9, 
  3.6403909407202506`*^9}},ExpressionUUID->"8ee96925-05ac-4f7d-b134-\
67837e7d5850"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.6403910525562773`*^9, 3.648416869570298*^9, 
  3.648416900449277*^9, 3.6484171579641776`*^9, 
  3.6484173222763567`*^9},ExpressionUUID->"207e4d9c-72f5-42f3-b6cf-\
270349c59c2a"]
}, Open  ]],

Cell[TextData[{
 "It is that simple. Please play with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " for a while."
}], "Text",
 CellChangeTimes->{{3.643663939070981*^9, 3.6436640384783792`*^9}, {
   3.643664122158921*^9, 3.6436641700705223`*^9}, {3.6436642217503257`*^9, 
   3.6436642225103683`*^9}, {3.6436643507843246`*^9, 3.643664513086133*^9}, {
   3.6436645691341705`*^9, 3.643664672837795*^9}, {3.6449229474544463`*^9, 
   3.6449230032156568`*^9}, 3.648298227229089*^9, {3.856948856349948*^9, 
   3.85694888923212*^9}, {3.8570259003295307`*^9, 
   3.857025932392543*^9}},ExpressionUUID->"ab78c85e-7636-4422-90fa-\
53f3e375cdd5"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a very powerful computing tool. Its commands can be so simple, as shown \
in the example, that it seems no study is needed. But they can also be so \
complicated and look so strange at first that it takes many days and weeks \
for new users to get used to the system.",
 " ",
 "This section as well as this unit is to give you some basic and important \
introduction about using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{
  3.6449230103271055`*^9, {3.6449230484725647`*^9, 3.644923050316688*^9}, {
   3.6449230803359118`*^9, 3.644923121028524*^9}, {3.648298230370777*^9, 
   3.648298236528017*^9}},ExpressionUUID->"758460c8-698a-439a-92e9-\
03bddcc937d1"],

Cell["\<\
You may also execute the command in a cell by right-clicking the cell and \
choosing Evaluate Cell on the pop-up menu.\
\>", "Text",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{{3.8569489485038834`*^9, 3.8569490321032777`*^9}, {
  3.856949067766605*^9, 3.8569491194830103`*^9}, {3.8569491589704876`*^9, 
  3.856949175113022*^9}, {3.856949266546759*^9, 3.856949285827326*^9}, {
  3.8569493429501886`*^9, 3.856949376735268*^9}, {3.856949408784008*^9, 
  3.856949415198782*^9}, {3.856949555906077*^9, 3.856949577887146*^9}, {
  3.8569497131251507`*^9, 
  3.8569497155043693`*^9}},ExpressionUUID->"18d8479c-293a-4b3c-88e9-\
5233a2882d25"],

Cell["\<\
It is unnecessary to move the cursor to the end of the command in a cell to \
execute the command. The cursor can be at any position in the cell.\
\>", "Text",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{{3.8569489485038834`*^9, 3.8569490321032777`*^9}, {
   3.856949067766605*^9, 3.8569491194830103`*^9}, {3.8569491589704876`*^9, 
   3.856949234354185*^9}, {3.8569671787441573`*^9, 3.8569672011858425`*^9}, {
   3.8569674545800743`*^9, 3.856967473985505*^9}, {3.8569675049230127`*^9, 
   3.856967509197468*^9}, 
   3.85696756217013*^9},ExpressionUUID->"ef2ab1fe-7b3f-4617-bedd-\
95887bbd05ed"],

Cell[TextData[{
 "Two basic concepts, a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session and the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " workspace\n",
 StyleBox["A ",
  FontWeight->"Bold"],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" session",
  FontWeight->"Bold"],
 " is the time period of running ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " from starting the software to terminating it.\n\n",
 StyleBox["The ",
  FontWeight->"Bold"],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" workspace",
  FontWeight->"Bold"],
 " refers to the status of a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session, consisting of the variables you have created and their present \
values assigned as well as the functions you have defined during the session. \
It also contains built-in variables and their present values, such as ",
 Cell[BoxData[
  FormBox["%", TraditionalForm]],ExpressionUUID->
  "5bd57605-2343-4746-b391-3808af171295"],
 " that refers to the most recent computing result."
}], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.646209349023877*^9, 3.6462095147357144`*^9}, {
  3.646209575990982*^9, 3.6462096067276187`*^9}, {3.646209696680419*^9, 
  3.6462099244465704`*^9}, {3.6462100445519805`*^9, 3.646210062052918*^9}, {
  3.646210134982809*^9, 3.646210150830654*^9}, {3.8569510263914256`*^9, 
  3.8569510477280264`*^9}, {3.8569511125533614`*^9, 3.8569511297485256`*^9}, {
  3.8569511598309216`*^9, 3.8569511768860807`*^9}, {3.856951229875341*^9, 
  3.856951280569676*^9}, {3.8569513424000864`*^9, 3.8569514320881834`*^9}, {
  3.856951480396037*^9, 3.8569514958569593`*^9}, {3.8569516379418573`*^9, 
  3.8569516394356513`*^9}, {3.8569516771417456`*^9, 3.856951689104456*^9}, {
  3.8569518295360403`*^9, 
  3.856951865303419*^9}},ExpressionUUID->"aacec43a-6e98-40ea-b45a-\
246f853e98b4"],

Cell[TextData[{
 "Front end of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.6483085564233756`*^9, 3.648308568317276*^9}, 
   3.648312654251623*^9},ExpressionUUID->"2ae67036-604b-4968-83a8-\
e64389aa7b66"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
MdGRIyND42n2jkqvxJ891ZaWcjTVcTFQgIvySH/3ew9f/xUU/mBruD5AU0/k
GzVZmLvNm2B7Y2ctMVXBJ3Az1+6x1fOtvtYgNR3RpxLPnuopyruaatuqS6gK
PZfn+05BVMhCV9PNSMVY4qkC/3NpTef2/rmzpfpSR0lFgaeqcvLB/t5p4S4+
+hKyL75TFZVvaCptK4jzUhaFizxVFeExUFe2swvq7Wqdrokz4vlKSeBlzLtS
PGFruSzcQfBPCvzf6aopub4xdNGBafD+TpKPz8U/a3djeiDOzui7/6UgJmpv
aZUZ6R9uoawv+CcRPklrlxQ8cgtai3RvqCn0NtYQlvYJiO6pKxmoLe6pLOws
yx3ubMXjsceYhUZrTVMdm7KBjRsu1JhIyxVXNp8fYeaKw5yEX9gampQXF463
FpUEvzGQkzYy81tYWLw6pNytuLkH1NSE2ugISbh7hXdWFw/Xl/ZWFfVWFnSU
loy09B0SUFekyRo/M50n31mb2VaVVU00Fed4msIFv5WTVQvPaGVhMPimMA/5
V+7OPgtL4325cT6qEoov+W2NHJtrWyl3npr7TT/7BDVLAG0X3ZZoqyIm+uKV
rZVbRXnNaPW7OCMVlWewrKx65s5oW4ielriIq2fUYGfPVE1qjLGkqbzcu4pu
FpWGbkoMhosY6lpkZRSOtlRVRnpYiAjbGLoMTcyi+3N8DWQEvnmqLiHr4+Re
8K6o/X1apImqykseEw3z0rxy9M7ug3hqyv2ttARlvHxiuqvLh2rLeytKu0oL
RtrasCj8BQk5meZmI8WnrGIcn5TVU1NUFGhjJfYCrmpRVj93gkLMp7nYwHil
+ISMNPUjI5I7m/om0928lHmkX4sHeEZ01VTVRrlaw4SkX7y2tHApKasaqsiI
0JeX+0oqMbbilIPdbskyEhbWlDcvyKtdHulqS/G3lBZTVvLs7RknL/YVetkZ
C75WE1YK942bnpg/odHuATVU0Ja72BhoCjEykFcuqO5lU5h3a2c+JeBOTzo+
OEOudEdYWClK2zsENlQ1DlfmJlgbwl+Jh0fmEYjo5fo0+weHGhBeKARyT5a/
tpS1te/0MhbguqXOkJuE+entiQn07AxucYmwtM7Bkq5RM/0ZHir84CNOwFhF
OzIko7sotyZAW01MxtsrZrB7YKmlOMNOU0dCMjy9gYhjHo2UZluIy796qa+q
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
4RpCH6Bm9Ro9OZgAN5B+JsYn6+8eMD7cj1mdnki1tZV9/jnU1LqqGr/6nbKu
fWld525PppfSK8nvvnF19e3v69ma6Roti49zNrIxcW5sGTnYGmwL1NCVfPUR
ahCdmXY/CjWiFu0tDUMFQTp//p2yqKBf9LvV5SXsVF2Bt4EizxNVcYWG1q7L
K/ZOXUqg6B+VhXgMLZwKiupRu9Mz1TFmr75REX4Vm1uxNdNRH2Qo85c/KotK
x8ZkTPV1Duf6eyp9xf/tU00tv4GSqBgXFd4//d7cwKBtaIyMmOpPdXdUeCbK
J2nvlEREbj8U1KjIaCeW9F7QuD6RuwSEO0+N02dQE6JlIi1XUt3GRo1WvzXQ
EpVMzSjDo9FgI5/s9DRHO/ka2A4Mjp+zqQ8ANcGWGuIKQUll2NVF2s4yeW0e
FGllnrK+fohD0yfL4kwlVMXkMt7VE5HIczoS+/+x9xbwcSR5vmfv3Wfv9nP7
3u17e3s7u3tv9s2+2ZnpnpmenuZuM8jcpna32ZahzXZbZpKZLYMM3QbJQluS
GcVkSxZjgYqZGbJQWPePzKpSVQkssmW34ze/yc6MjIyMjCxVxddBObHHF4eN
GzXlIDWm5gFAzZcR6/ZJNGqXrP7u2unf/3Xc8cNJRpmoGYFJP9bf9K5TkxNF
Tul8g4Qa4ZNTq6YOD4WamVNOnYmV1mTf3bNg9dKNmelFDovF06wVpl/aNOLr
ycPXP8vJzz67cdHIoXtPXhOwBR67qVVelxO9fd+6tcl3M1lPL2757tuTJy6b
UfsI1VIjyj+4cvFfhmz58aKEzW3scoqAXk7pvH3ptNGzTsTkutRqdBf/WYvW
xSu5smLqjK/HHDp+nc/iOlRiVfmT2NVTp38ydN+hG0p2Ven55cvCViZfKwiC
mnGLL54KgpppU9fdeBQENYePXuGVZ99cPWr2yDHxadmNNpdHy6tNPrV9wvAZ
o1ZlPi73eNzSjIRDo76aHbY+4+ELu17b2k+oQcimV7+4f/K7sHF/GLZ9c1RV
SZ1NqWrTKoy04uzobQuGfvbd3I25lSx9bc6ZuWELZi5MvJVr0Rk9Fo2+Ij0m
YvG+PVFVtXTavfOopSZmQKFGS62bKa6+emTlp59OHjor5uotEYPTqFG1KoSK
0qe3962f/acPx74/PDb2gVVakxEVEf7Nwtz8shbU68/IvXFh56dfLlp6jEET
eZoshrqclN3Lvx82atW2qzyO0lV2++fwEdNGDI/c+zOzht1sUhtr0hO2zJ7y
9dDIM2lKuZLxU2QI1Dw9uem74VN2Rz/S8BtQ97NZyxPSaQ5W8Z0N06b/edTe
yMtigaTVoFE/v39u/tDRn0y/fCr6YfSORTOWxSdnGBQaT7PLWJAYNfOz70dP
zcgvbzINBNTsWD596DcHolLhR0DHoqvra9W0WlVtrbqOToikqAO/WVmddCZi
3CdzJo+f+PmEK5duELYmd3V26sqR3389/FrCEzfghppbnxy1e/zQ6cOWPblb
AtzshZoE1FJTf3brmq+Hbtp5VcoSNMr5vNSLe6aPDBv13dGTN2mp8E08bPai
bUXlUHfV2xhFj46sn//V0L07Tijkeo9KIH18Zs2ksXt3HRNxJc1qiXdMzfYo
AV/Cu3X+xyEfz5+++n5ajl4stQtoFbFHto38eOboxU+fVBiL4y8t/GbltyeF
tdwgqBm4lpp7katnfjV5b9QDi1CGFhXyR0DLgKpcFWknl4SNHzsr4U4Jmsxc
0VAVd/THsOE/fL+6pobu4BedXTJj3ZJNlfUCVeGdQ5OHLJq1/PadArta79HJ
FDmpl1bMORB5prZa5pHWvLi0ecGY8deuJGuhkmbUa/Junwn76rsvFt+Nz7Gb
jLqC29fmj5sxan7s5Yc6idpj0hme30/avPLHlQcLU65c374qfObahw+LHCqd
x2KUpBzfNvT9xd+Eo/mWNQMBNTpx2bl9Gz78j+G/+3j6hM0l+VWoYm8xavLv
//TN11P/8Lshf5j889k0O5pqXt/Iqbm3PABqdsxaPHpj1q2SAKiZt2TEygdJ
L/T5iVETv5r6ybTLV25r+KJWuZBz++fD076c9dVXp86nagTCivM7wz/68IeF
u56lF1vEYqKhIu/4xpWffTjvmw0l+dXAOK6Sh6kbpo393fuj3v/iwsXbZpmw
8tqRBX/4X+M++PPcBYde5NSjVzaAUDN08fUzGejbxr9OjbT+8b713302cd/J
B3omix29eeXXw1cuOUQrZrTBWxazai4d2Dn3h+jo+6qinOQ5U1b5oIZ/7+cN
X349c9T8GzGPdHx5s4jDhj+Z0Z9P/uu8m9eAoLsYU4OhBkPNQEMN1QNNUley
aclswJbxn/+pm8aasE8/OLRpFa+iEM3qPBBQQ3CenFow7qt/+vXmiANynczK
y78UPn7y+//y+Z9G7dkdY1Y3qJ+dWzf9yw9+9b927DjOYZWX/7xu1dg/D/n9
B/NnzNq5ev7qiR9P/eL3I//8m4mzVqY8rfJoaPSb21dP+GjkB//++W/+ec7s
RbcepeefWrpsxO9GTf/h5uMST6PBJSlPXjvu2w/+cczUxXGPSh3Cyvwjy9aF
fTjij7+dMuLzRd8Mm/Lhf4R9+vGcxTuzC2huTu79bROmfPHB9B/2F5UxPS1i
xpPoxZ/8bsTvf73j2Fm2GH6aayqTtkz9+i+ffTrvweMsfva1/eM+CfvLH8JG
jt28OnzT7PGTP/ztsPd/E/b5lz8n3jLbDIrsuFMzPp/44W+G/vE3n381OyHx
Ztmt47M/+PcxH71/6FKCXCViP74aOXXo1I9/N+KPf50/9utZw/887E//Oe/7
+VdTnkoqHyRELhj/l9+M//rT5QsWRC6fNT/sk5Ef/vqLP322eMl+PqdhIKCm
+Mq6meOGTj4Rn9UJ1Eiqb62evPi7pTdzmR7hcwDMWV+NvJp0r8mt5KRf2TJx
xDcfD9u3Y9eDpPMXNsye9+nHa5dsqamtbbXp0Lvu35ia1Mhl497/48yZ807u
2nJu9+aT2388tX3jsY1rzuzel19Y7lCzi2IOLvnss5lfTzl59Pitq8cPLZg6
/Xe/Dhs+fve5B0YENfs3jPp41Q+7RGp1k5KVu2fZwo8++nbcnISYZIVUgirz
/YQadtaJOeOnhC1MelwNUCN4dDw87LO1247RvVAjlGZFr5gYdujoZSWnNO9U
+NKxX8yfu/zi6ejH104cXzVr5vDx6zb9xGLw1fnXo+d9NXvU11u27E67dilh
z9Ifxn32w4otuc9K+JlQeR5/4MA5g8Hgbakxyiov7Fz7+UffDJ0effISj8Nt
NenaF/HsI9RUxkXMn/DV5CNXs4KghlxQvkUjoscf2Df1kxljxm7dui/p3LET
yyfOHvZF+Or9OS/4reL6klOL5o4Ij7uSR0IN0SbnVF36IXzknDMnHqGFbKwa
gpl5eNb4SRN+SH5UTUKNXFN4bf2UCbsiz4uZFblHloQP/2TF4rXxF6/cPLpt
67cjpn351zGfTDx0IlmhMuiKH16YOXrKX0asX7q9MO+F3eBfsrOvNltaZZyG
W6d2zZs0+k9Dln2/KuGnK4+uRl/asmTG8GETh357/adbhNnaJOOUn9u4acyH
c6Z8G3Xi/IOLJ6KWTpkzatT+Y9dFIn5tatSykaPOXHmg0xnoF3dvDBu/++wT
S3+hhlqqRt/MK0k/v2P+8CFT/zoycvOetJhrDy8eObjou++/GLJg3OiJH4/+
+VKaRVrz5Nia78fOfJpZ3GxGa7Yqc9POTB817Yvx+3cevh8TfXbd4gWffzTl
479+P2vtw6xyaeHNmFWTJ3025LsREw7u3H879uKFtfPmffzBigVL859VuglD
1ekt68dOiLzwhPBBzaMj66Z9NmbH2QdqHjN/+4Kl38y/fK/GoxGIH57ZM2fs
xBFTdm0/9vDymXNr5kCtP3zL+eoXL6qSj84bOWziyFknDx5/dP3ShTXzF3/x
+frwrdWV9BaTcSBaapaN/88PZ01feGrbtnM7tp7cHHFq66Zj69ed3XkgP6eS
XDjJZiy+G7v0y7HvfxA2fF32wzJPk6uxoSzvUHj4kI+Wz10Rd+6nm4e3bps5
bMbnfxn9l7EHDiUoBA3lcQeXDB9x6foTg1IrvXvuwNhPv/1q0qmDx9LOHN77
3Yxvf//baaOnHoy6xc9OPPfDtElDw7ZtOXDnp6ift4QvGjd85O//sOCbpQ+B
BZRCTc7PmyYNmTVi3MmjVyqeVyqKUrdPHLkl4iiLr7dV5z6MmLn064/mTJ9/
9khUQuS6jWFANN8cPJUi42tdz66dnj1u0bQj/BoOCTWEpSj56pLxc8ftrn5G
GxCoubV96ZSPRu86cdccAjUqtEppMys/dc+S6V9+vWzxjwnR524e/HHjjLDR
7/9h2teTfjqbIq/MiFo4ZeXctSU1Mhe7+vnBZWuHfDBvynfRx6PvR+0/Mnv0
7BGjj5+Kl/B1HhmtOmbnwi8/Wjp97qXoFD5dZC7NvD573LTff7Fi1trsR88I
AZ2RePjHSSPGDpm+b+uxJ5dOHl/27aQvw1ZsjKYVZGRGbZry1y9mhM3/6XjU
g4unTsydMuejz/esPyxg8Nv6v1oNghqD9N7F45PeH/bhl4t/vMSr4aIvQIPV
XVeUuX3mzL+8P+Tr5beSn5Gr7urdnOpb4VPCpy6/+YTVxsh7tHna90PXPE0t
Ri9Ib2livMiLnDXnyyUpsUUeeX3pxe3LRsMn/7sTkccenN57YOHUsX/8YPyf
Pzp59oZCrDcWpMUvHjPvi0/CZ6+4fOxUzOZFK4Z9+O3EedGXH+t5MtR8LK5+
fmHLlP98f9QfJ95NzW5zWkW3ruz5+LcTPvjr3qOJIqYMvcR+Eg0FNWjxzXnz
P5975dST4MU36x7uWjn9jyN2H7pj4kiaqx4n/Dh78l+HzJu5PjkqOu1gxPKR
w8aPXhJ/87m+JCdh5pjw77amZzABagQPrkZ88fnE/3x/wTcLLxw4e+forgPT
hs/8asyWHVcY5Xw075z0rViCU9bB7ybUvG6uGWCoITR2Be9x4uWFU0aP+uh3
E7/8EAwIM+6zP4JhBw4BdoBovg8bknMrvrVnfc96AjV2fk7MpoWzPxt+7FC0
SqduUrEqLkZsn/n1/MXrbz584dELdCXX96+aOfGL0SePXFCphOb6pwmb56yY
8NXciSMXfDPph++/2xE+ZcX0kYtXbrufWeaxKaDWlLh57qqJX80Y8enGDRsf
Z+WUXtm6a+7oRWt2PM6r9Lh0jbLqpwfD10/8ZOnqzfeyKqBG2iQoyjr946YZ
I78fN2zu+KFzJ4xet2pLZlah22Z2swuzjy1eOXPc2j1nqmtZniapIC9u97TR
C8KGnrl8XSSHn+Z6+r0jq7+bOPPb9VnZJa3qqqKYXaunjp4TNmzhpNHL5k5Z
vnDq/AnDwqdP+Ck+VanUtMkqnl3bs3Ha6Lljh86cuub+7QeMjMvbJwxdMiXs
5+TbKrWmzcBiP7pwdNH4heOGzJ0wfPbYr36YNz8uLk2lELZZpbynP51eNXXu
hBHzJ41eNGX8hkWT184bM2v0hM0r9jHp9DarilwUtR9Qo6q8vX/1qrlL4+4V
NumDoYbQuGV1WQeW7diw7XERyyMtL764esN3C+/cS29ymdvUTMbds/vmTgyf
OHLJtLFzx4zfuGxbTu4Ll1ZGrr/Z5ymdlQhq9LTsc7vXjh6y6JuwJdPGL53q
9aLxw1fNnZ18P8+k0bXKKgvO74kYP2rxxLHhU8evWLBozbcz185ddC4+wyKT
GvIuHFk0c//O00o1mvVanZd4dvWcGV8N3bt1D0cgaDNr+7dOjdIleB7/4+J1
4REP8+o8BpEyP2bH4hmHT/7EFyo8FoNHJ1I9ux65ZMmF6HibVWem597ev3b1
9InzJ41fCiA0bfr2HcfKymlNaEV4ET89Jnr5jCVTxi2eMn7RhJHrl6+///C5
S8XXFifsXbr0YnS82aBH44CMqBOapeJRws7l3w8bsSF8TXl1XTPcq59TOqvr
HxzeuOb7pddSCxs1aoRO7XE05JrynNqbZw4t+GbBxPGLJ41fPHHcprV7c7Mq
Wmy2Ngmz6vK2zYu2300rQv3WzJY2JZ+ZvHdH+Mb4mGwEdxatnfP8yprF63/Y
lVlAR+uwGxT6kpuHli8/czLWoldpi+9fXvX9DxPGLJw0IXzGgk0/bIjaOG/l
jIlz1xzPKua3yZkVMYc3TJv8/agpiQm3zUZT+9D+Po+sMRnbVCLO49jjS2Yv
HD06fMqkJZPHL5o0YcnCtck30o1ScniLUdsoqimM3r1j5sQFE+ETPm7J5MkH
9pyrq2C32eTMB1ci58xLSsk26Q285KhjS8LPxuYSclVv5vjqur3GaGgS1ZXE
HIucNiF8XNjiyROXTgybN3X2rp1HMm5c2hO+Oinmrk1Be3Z5/8aF6woLK5pN
aG33ZlF9SRwU1KT5YWMht+uWrTi4Zcv+78f/8M2kM9fuld2/emXVrEXfrIje
tmLT/BmLJo6fPyZs/eINDx8+c6jRIlB1V44cWhwenZRrV6rRp9fILbi0f+O3
Cy4l5hqEnPKoiN2rNt4AeLcY2hScuuTTe9EKRGHhE8PCp0zdFHG08FlNq8Xq
YpXnnN0ZMWXi4vHjl34zccGYSRHLdmQ+LXW+fJ2aDkTTEWpU9KwTu9cOGwaZ
XwJl4vOisSNXz5l3826hUab1WCweYVXJz9tXTJu2c38st16EpkTQyrTP711Z
+d2KsJELx48LnzonYuna0xvmrJ46bs4PR7PySxvuXoC3mXo7z6zUt4krCs7u
Wjd69KKwMUsmTti2fsuptcsPLl1yKSHXwGVxbpw6MHfK3DFjF4WNXzlt5tm9
23eHz/7205mndiY4VBJXQ378hvBlX38evnBjXGqeovTh+WXzzhz5ic9F6/xa
qvPu7l61dlLY/LHjFo0ZsWzKrNNH4sR0fpuFsD6/GRexdPvaixIaD9WoDRZb
6YNb25Zt/iGKWcZEHUH7CTUqRvbxbeu+mXf+6lNCTA6iCYwDtX2tQpaRdHX1
94vHjl0YNi48bMLRTT8e3/jDvK8nRcw9xMh/lLB1xaEf99bUSeC9uFnFmYd+
3Dx5zIKxYYvHjFw6cfLxfZcayplter1HLZJnJ534fkr4sKHLVx3IzGa0iRoY
8Se2TZv07RdjrpyNMWkNzbz68ssHN8+cAii0NGz0wglTN0ccLyuqa9XqreVZ
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
O5xOsJPc+u30hThd7Qrcpw67Cul46k0QQM2LBwlyIZewO6AEqcKE0oWihtch
l8tlMplEIhEHSERK6JPAJ36AeJ2J2ydxsLCwsLCwsLCwKEHViM3msFiwZXPQ
plca7Ny/uepbNbXTGm9gldhfT/bXnKmKdGDVGmraUN8GXIK6t1ar1VOA44Ub
r0i+QWTjl9UnwidbgOzBcnQt5y9FADXsqmKtSmG2Er6mGR0UKZQtlD98+JlM
Jo1Gqw9QHalan2p8qg5QVQdV9kAVWFhYWFhYWFhY3aiqqvxFcUluVumL4hcl
JcW9VFlZGa5x9Vw9qb52rPQGVon99WR/zZmqSAdWraGmDfVtACuoe0MNXK1W
k603eoprKHWKNiFcYwtWD7lmsFlkwARQo5GJ9TotlBqUHuAhcCJwJbAnkKNG
o6HK09BB+l5Kh4WFhYWFhYWF1U9BbQ3qZwp5J0MCeiCo6Q32A/zS1NsqccdK
NVXTBpaBujegDdTDlUqlzsc1frTp2GpjDVB/Gmt+GWgDUGM06ClGgdLzEw0U
JpSPy+Vqbm5uaWlpDlALFhYWFhYWFhbWYKm1taW1DbataLd3GuysY3kVUrWG
LdS6oe4NVXGKa1QqlZ+YQtprKK4Jaa8hAvRudkIDqPH3OgNCFIlEUJJQjBTO
wHawM4iFhYX1ZsjlduKvRCwsLCysVyO32w11b9hRKpVsNlssFnfsh4ahphsB
1Pj7hsnlch6PB2UIhdDY2DjYWcPCwsJ6YwTf+ITV7nTaXS70IwG/FMFt/Dan
E207CMJ+GT8WWFhYWFivQVADByoRiURQJ4eaub+HW6fja17KNe9UDzSAGp1v
xmaqmQYOneQEby+9tuNcan3LQ6fTsg1UUn1LBwsLC6tdLrfDRljEQkIpJ8xG
NL+mxWy2WpBhB21MFoMebclJNyGcFAo3mYzwQzPYD4CFhYWF9XYI6q7AF1At
hzq5WCymquidco3Zp0655h1srPFDjVqt5nK5bDYbysHtdg92vrCwsLDeFLnc
jXYbYWqguwqzWmhVLrPR6aL+DQVOudxNTU0abXN9faPB4G5uppZOczc2uuGU
22UlAWewnwALCwsL660R1MMBT1gsFp/Ph/q5f26HjvMGdOSa/jTWDPZz91cA
NRQDqlQqIBooQHje7qEGfsghDpSkUqkUiUTULNywA4cQCKd63j4CBQjlD3eX
SqUCgYDH41Fz2cGL69W/bVJZgresUCiEQiE1QzjVFxGy9At4TVhYWIMpl8sB
XzJGQ0tJvqcou0mjaHQ4WqTyFhar0WRudjg9ZRWetDstbHZjW1tzo7tZrW7S
64F1mlpaCMLaCdR00ZT8KhqYX1GbdV+TxQ3oWFhYWC8R1MMBSRoaGjgcDgU1
gVzjb7LpOL6mnzOhDfZz91doSmdyfj9AEiAaJpMJD94V1FA/RlBKQEDADgBB
DQGCQwiEwocUnD3owAalBy9FIpFwuVy4dWA6QCWANvCaXpoOdRZeH+SfWljH
nw6kCR8GyBI8IGQJ90bDwsLqq+Crw2GHbySFjBDyrDp1o83mqaW1JSS3PMlo
raj0FBa1lpa3Fr9oodFbc/JaHjxyCwTupqbGlhZq/efg1Bw2q9mg0xnMhN3h
nXvA5XQ5HHarSW80ma02h7MH31UvjYL6MDjtVqPBZLYQPUqyx3LZLfAFbTBD
Tns+eYLL7bTbbRajCX5d3/rfTiwsLKxXJqqlhsFgQLWWghqoyoZMHw1VaFOA
ess1v8jGGgpqQAAFAAJQgN1DDZQPxATogHKmGmiotVCpJhuKRwB5IFr3BAHl
Bm8EroJLAGqAR6gFVWEL+xBC9SSkuKYbUdPfyeVy6hIqS1Q6VJMNlSX4SPSq
CQkLCwurXe5GB2E1cZgWDtOslJnthMvtaqMxPD9d9Zy94IlPbCkobJJK2x48
gn3PmfOtcYkuudzp8bg8HisBTGMOTAxQw6JXiThsvkimtxJO8vsWAYjNqpMJ
xDKV1uLo/t9ynDaTUQe/cRa7vTu2ITtmE3qpUKlUm+wD+fXndhEamVwmVlp6
CDUulxt1xyMMGpVEJDcAY+FvYywsLKwuREENnU5nsVhQqQ5cYCgQavrTWPML
hhqo8ysUCiaTCQXYDdRAIUCRAj5Qk6RJpVKgCSUp2IFDCIRTEAGidV8yUOzU
AkOAHhJSYp+oQ6rZBdLsvh8aZAleN6Tjz5I/KSodavYDgB14+2/7y8LCwhoU
udxuh91uEfKcuU+aSwoaVQq3QtFWWu5JueVJSEbtNWm3W56mtwHRXI0Ft95/
6ObznQThtNusZmNISw0kZtYp+bR6Oo0ulGvNNiAkqPQD1Fh0Io5AolBbHG5v
+w2E++XDAHej06pWiPgcno6ww5GPDlztsalmaQQ1dkIn5sDXu8nR6A46GfB0
6OYu/6lg2AhI091+DvBEJZGKBDIf1KBYLneXoIKapswGrUom5HIaWGKdmXBA
/P69FCwsLKxfqhobG6H2S6PRGhoaoI4NtfSQhVO7GlzzjvdAA6hRk4JfPQaD
AQXYFdTA7xlFIlQ3M4oXABaYpKgxLBBIdUuDfWrtzk7TgUKj5iUAEqEYRBQs
KikqQjezsUEgvEHqjlQDTafpUHwkk8le2n6EhYWF1blQSwrRVFfV+iy/pai4
JSe3LTvPc/tu263brRlZbQ8etV2Pb3381JN6G9Cm+dGjpoKCxufPnXV1ZqXc
YiMCmzMAaiw6pYhBZ9IZdIZIoTY7yDkFENRIOEKpQuOHGqfDbiPH5FishM3f
Vc1pMyqlADVCtdFM+HLn8ka2+uKSkENCDVpM2WhzopPoZy647xdc6HBQN7Fa
Q8+hRnU7laY/UeoiQi2RSQQKCmpQPPjlQDE6/CCSJwmjQizgMJkMOr2hgS3V
W2xODDVYWFhYXYiCmvr6eqhgQ/2cqqj7uSZkMrSXrlzTq8aawX70fgmgRkVK
LpfT6XSAmq5mP4NAKD0OhwOsAbAAjAD8+PDhw2OkYIfFYkEgnKJ6gkHkrtKB
kgyBI2GwKEIBGKHSdHYBNZAUvFmqgxnVOtNpOlRjDcSBN44ndsPCwuq1XG4A
BqtSTqhVTgG/KS+vOTfPJRK15OU3J990lZW7WWx3fr6Lx2198Lg5MRlYxs1g
tNy+A4FmqaQj1Jg0CjG7QSQW8VhsnlCutQLWBEMNVPkddqtBqxDwefA9yOLx
hUq9mYDfG4dFrxDzmAwQi8OVqA1WGxARgINJq5JweBw2i8WXyDQmq50K1kt5
MplEoVTIBCwOG/4nUaiNhN3hbZWB6/QqsZDPamjg8vgSpcZADunxnjPrVDIe
D416ZAlEEo0BaIRq2fFDjQvQx2E1qsQCiVCqM1MDKoPKDhGPWa+CDMil8K3M
YqNouKUGCwsLqyv5oQa+6KF+TlXUQ6AmpL0msLHmHYcapVIJ7ABEAwXYFdRA
CUNhAjMCawApwCU5OTmRkZGrSe3duzc3NxcC4RTVfAORO13BExKHUqWmj/aP
xwEAEfhEwQgVDtwEIVDInUINpE81MMEl/nT8SfnT8WcJ3jteVBQLC6u3QlM6
E1YTk+YoKXTxWYhrCgsb8/JaU1KbU1MbCwoac3Pdt285XxS3PnjYnJjoTM9w
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
zk320/t8lYJoamwxGVxxV+j1NVryLGrKAYpxk37xXJEUy3C52v85u8/dz0pL
S6Fa/lKoMZMCrsFQQ0GNWCx+K6AGire1Ywl3HtobueRVtyK/+vj3v/63X/3T
P30wd32MuLU/yXk01bHH5/7mP/7tX371//7TP/7j//PP//o/Ji1YVaxqann5
pT69BqJZ+Z5nZcarSpxK3zsUZSVJNL7D0JuSp4ZEv8KcDIgw1GBhYWFhYb2T
AmyRiq2P7nJzMkRuVzMwS/J1Jq1W2zFmdYX6RhxzAKEG6udQS+90qRp/S41/
AjQMNRTU8Pn88vLywYYal5ijLHqutDWGQkWb21KXVXn1UllGmY5Cgya9Qa21
2zweh0pVmPD8agKtVuroI4u4Vezc8/NmTvrT3/zte+/9l9HzLgr6BTWOZ5fW
/OG9997752kRJ8+fjhj3p//rvf/t159ufiQmetgPbWCIJoAjQkxhxQBCTcbK
UFqBkE7gpdOWGgw1WFhYWFhYWG+6xELLgzvc3AyRWGhOjGHQ63Qd41SUql4D
1MBZDDUd9YZBjaXwUc2xA3VqeyhUtFhkl7Y+2rOjuIxjbfM0myTyx+dzY+/x
G5wet9FYcqNg9w8P7r1Q2/t221a3y6Jg1Vde/u6j//neP4xdENt9S42Jm114
+/ijaonJ1el5d83tCysmf7squlwOH2rp7Q1h//rerz6dcaXO4O5BZl5FGw2C
jg5AMTBQ01UTTAYZGHjTweh+1umD900YarCwsLCwsN5tAc6kPxSkJTVciKpm
Mw0dI7xSqPGvv0lBDTWrcw+hhuIaDDWvUeaslMrIiEqpziLlqOtLONmP6x9l
iTlah9MgOb6uMDEJvetGqyYzNmPR+CtrztRVWtBlFqkicf2Dh4VypcHAZ8ho
ssY+vYbG0uPDP3zv70fPiRF1DzU5+w9O/+fZCbWKLqI5NCJRfbnQivZtVZcW
//Wf/ubfPlpzT2h9aUvNK+p19uqgJnoImTKJNp2kRiHPSt8+hhosLCwsLCys
t1gqhe3BLe65k1WDCDVU9zMMNSF606AmP6325K4qvlAYe+TJ7o23d+1IW7r6
0YEEllQqvLin9NYtBUSyaxWPY/JXz7y+6zK9nkCXWeWa29ueZpSoRDxuRuqL
+AK9VqbnMFU0mqqBqaLXq1hso8Xd+pJ306IvPPD1n977L6Pmxgg7pZW2Zqta
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
57n+8szt3KHuGPvaIvQmsEfXZKrnTHy+0Pn0EZAaAAAAALi3MZucZUXC1ARG
fY0s8nQrpVXVPQ1IzSAymFLjUV+9UDBtVvLhOHpts6SxgLR5yaVluypJKo+n
S0q31Uit3RZNySdLa5Kr18worqIZHG6vTSVJOZC5bkVeHNVma/fa9YrErZlH
d1cwbraJBYtnEfhgTtsxe8xfXw6rFBpuexf7yoQJ/RYZoCepud5nLKdTlR7z
gs5GcAOv6WYN180iaD4+s7v74AKV0/njtcL07CPdd6rTHgUXu+dMejo4fQGk
BgAAAADuecxmZx1JFh3eenhPHYOq7Z4ApGYQGUSpMVNqD+xOnXuMJjT6JcZj
aY3P3bwlc2eKkEFsrWPqFC6fUyylN1CLm3iXtyWM/+Livks1kdGN25Y3qe1I
QqzkItKy8Wf+MzU9lmzxj+1vrwwri95dTu0qRX3EQc+PWj519CvPvv/eW2E0
pf0Ws7kFXn8dqzOPG4c12dwmfel+dr2en9O5raQv1f5eW2puQKh15wZ3WrsZ
qQmWr+sJQGoAAAAAALhTuF3elgblmeNNlFZ196UgNYPIIEoNLzX/5PHCWHpQ
s4qClnSpbNHmmtLT6bFEMd3hsze15scWRpbz009nL1uYEZ3dkhTXvHtNs9KC
1nJIGKILP19dt/BqAs3ilwFv1dnKxGNlJL4s90Lt5QjSxQs1F89VXrzcUkw2
2t03OjXtdmpezPqJwx976M9/enVdvdg8cOcS1ZmffbZ/vOampKZLT7Br052T
mm4O5eubj4SUmuCU+I7k9JpJyHz6CEgNAAAAANzb0MiajFR2YQ4/I4V16nAj
jaLpngakZhAZRKlhxOVFh5dmyIJmGVhpKVWLNlSVnEiLq5IwXT5nU3NOTNGl
JpWYUr//IrWULGm42rRzVaPUdO1q4STWnl6UdplqsWKf3JXhxIRjZVU8aUY0
6XxYeWREZeSp0sjzjfktBtsNpQZpklGrYNSeXvXVh28/uzypWT6QoZ37y2tu
QWpuTlBuQ2pCbg4r8C211IDUAAAAAAAwULQ1q5LiGOnJ7OQ4xqlDDSA1Q41B
lBpVccnxvZmHc3WB4SyGStLpI4UbwttKwlIji8Xsdl97c1v2uYK4BqWwqWbf
BVoJRdZFalpjK44ES82Z8stHiPVKU3MVj1TKIhLZxGIGsUpEEdmdPXcmc1iM
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
lnOnmiNPtxzZV5sYS7XbXPhfegdManpvrAmEC7gpqfF0brgZ+moDUhOMXcEm
pV84tnPblq1HwiLzqAqLu2OR227mN1dXlRTm55c00XimjjNz6+fVY7fKmaSS
0tyc/JIaMktiwYyjbw00t/wVxPTFbZYxm4gZKZfOX07OqaRLTU5Pey9W4O4F
v6BYeKQzH77/ypjluyrF/iMSvArapMdl14vINcWpSRfOx6UV1nKVNhd2M+gt
41422d7utBpElOr81MsXI6PjsstbhFrML241w75vGTsWNqNaRKvKy8y6WtSm
sjq8nfcWAAAAAIB7BFSVMRpsZUW86PDmKqJIIjaolNbcLHb02RZkMD6f15/G
i+QCCQiyDGQWqI6Nat1FRUW41wRARoNe0XxUIb9DUtM9vDMieHduKDX9ZTd3
rhoPUtNBu0PdsnrBxDf+/tRjv3vw179+6E/PvXaulGzpWGyV0RNmf/TxP5//
21/emrE6mn/tnHScoI6p4+MNbAdb1avll536eNRrzz73/KsTNxwuk+NZ9i4y
tyA1gasVbdaupRSf/O7H0W+8+Jennnjiz3/5x+sfffVDehPX6m/s6PZ97Wo1
Hv8UABXYoW5K3zzseQLil89M3plMNvn3wRPYolladXXPmC9GvfLCM39+4omn
/vrSW99MmVvMUtn97UM3ef/A/uJh4uQkbhj53qt/e/rJ/3v8iaeef/WDqYsj
WxV2N1oWKj+Pu7dd6Jq2lw27TIr6y0umfTli2GsvvvjGR19vJUlMbh9YDQAA
AADco6AqgEJmLCngpSbSeFwtqgE11kkvRLbejtSgtVBKZC5EIhHVzHGpCX5U
jVgsxr0Gf1oN8hr8aTW41yCpMfnpi9S4gnD30AOtF4aa1wwxqXHKReq2Vo3N
1W28icvCqaOlJbVVUYzoo1ujbK3m1FG1SDra9dr6zMa0HC5L6bidw+ThX3nz
hUcIf3jjm6V7Dx86cPTooTqOxNGx1MIjnRr90NP/HDV2zu5LqdU6X9/OTLfz
eP0y8Fo13IoTh3cv+/7NV76dNjtVjPdu6qU5pqfRK3374qGV3ZLGuKnPIgF5
7NXPZi6eOe7NR9H7+745lE0zYK2onVfw9rhTfhlBO+HRULIOfz3iz4QPJsxa
v/SHl1564dXJW8t5BqcHG6njwnJwMvKPfv4w2sozo8bPXTj5X//4LYHw28dn
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
+s4lCev31NSxhckxZQuWFlW30Y5sqU1OFHudTqvBYkaVaqu68FDm6hWFFykW
nUieikmNVKzVsqjiBoqKllN5ZEf2hg3Zu3dkb1yTve9APVnl6Kmfltdh0Iqb
qlN2vPrXR177dl5CPY3B5sr09uBhJQGpiQ9IDX4ivG6rTVPVHP/DkR9/cWDC
rw/MnZCTUi5Xq61W1w3Pu394vjRzdUip6TS+pd3XbpPTso/P/mzcu6On70sk
SV1oy3gQMZugJjclKizs7Llz586eOxt+NiwsIrm8jmvyev2iEXzFXuvipqiK
XPD1c//z28eeG7MutllsdLe3d67Au9wOpCyqmrbkKUcn/mrv97/aN/2r1Iu5
ArHcoLdi3wIstQuPp+buWNXtf4qLp1NOePNGu42Xf+jH0U/+7sE/vjlhfyZH
jRwksEVkIEhH9I3JhzcvnvjDzDmz58yZM3PGrAk/Lt4dk0vV+eMJXM/S31Lj
tClaE8J2L/z+388/8us/vfLp6SqhwYE363Qkw3bBarSIrpaeGr33G8K+CQ8e
WriwOLdGrtSZTTaHv/yocO0eYd3ViM2zvv3x2ycfeeiB37/19qhvF23ZcbaE
a7S6rmsXvn+41MTORlLzzIvLcjlGf/vWLd3+AAAAAAD4LwLVVVClgFQhPH+u
2Wi09qPUMJnMQAC0wCM4AzHQgp/C2VNjDU6XoAGI4PL30ALVI/1rN/1iEUNQ
ag5sqKVRaTuXF15OxYav8CuoR+emFdSSd26qTY4X+pM5WQUVe9YkrV9fmlEq
Vzq8BpE0cXVGVrlYhSqpHq/L7tBxRfVV7LIydlUlu7yUXVMrU9t6bqrBkaS9
/9qTHyw+wA+10MSrjMCkZn9nqcEXeni0pO8Pjyfs+Yawd82mJua1dXpoowlc
D12kxl9d94Zs/kO64PO5LSpeeXJiTEJZi8DQ7h8V71cfh4zRWlWSm4O1XxaW
FBcU5+YUlrcxRSa8BSXogvVbnYGVsXTav5793bMvvrP0VFolU6Ez220OzFIc
13FiG/Q5RfT0qUd+uG/nF4SdSxYQ6/E997qCU/YKtkWvU9oUO+WrYU8+8Pdh
YzeeL2jiawwWO+5FeCJswIpDX3N+18opX3z2/YQfJ0yY8P34Hz7/bPq68PQG
dbtfzQI5doz+d1vNejUrc83E137x+N8nnKoWY6P2PcGb9jdk6UkVZz7Y/Tlh
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
zcVxW76f/MNXS3eculpSTSq+Grl7xfRJP+yISG4UqcilsYcXfzN16oqjF9JL
qysyY/as+2nSzFmHM0g0oaA+fs+6yd/NWnzwQlZRWVlO/JZV8z6evmZDLJEn
FQhZVYeXbA8/ldTGqk8+u33GrNlrDl8srqeLJCJ05xUGEAhEQj6LRWtsamFw
+diwIgmnPvfswZWTp62PzqhiyBWSEDd9AACAoQG6jTEYDKQJarXaYDCYOgio
TU9DbG7Wa26hyaZL3f7elJrbaabpY6yz7kYT3N8MNxqjH3SF6HQ6dM1QqVQu
l4tOB78bXINBevas9f/+LyA1Rf/8x+cdUvMJgZD81+euS81jj8r27uPq9fzu
WYkUfDZNmvKhLa1vUpPyMZ/DxNbqjIAv0Iu0++qO31f0z75IzUMFr11oiTOI
dN13DQCAuwOBgCsUiCltjvwMV1uDvZrkio93X4y1X75sptPsFIo7IcGRmGAh
t1q5bNeVRPfRo9YriUZKm9Fq0Rr0YrEI/dDgGaGKvlTccmH32vVLNmW2Chit
pVHzpk76ds3xqy2UqrQLm6ZtCk8rownbUg6vXzxj+uErVW1YZEixiEO8snfD
4knz9l8ltdGZpSfXrdq27lAhFy0Sslpyw1ZNW7JoXVRRE53BZNJaiQn7Zk1f
sGJXahOtvuDizz9NWHcgoqBZisUpEJCr0k8unTR51dHLJaS087t++mnq/gsF
DXSBRCqR8Boyz+5ZOnHugUsFxPyYHQuWzl0WXtDK4YslYgGnqej8uiVLZ68J
r+Nweezq08u3HFy/fc/+jVNnzd58NoXYwsJaoQQsWltDVVVlVVUVqbKyurap
jcZBd3is365IJGC3lacc3zZ//IwZK89k1JB5YolokE8sAABAL6B6KZ1OZzKZ
KpVKr9cbO+jSZIPbTS9e01M8tNvshxZcvb/XpObGOhNKavrYRoM7TdcuZ92M
JtBAY/Cjx4amatFZoFAoHA4HXT+8bnA0GjGqObz6aqD7mXLkiPDHHv+CQBhH
IBz930dEw4Zh3c/GfeIbOdz64j8lYafRKrzuWQmkPDZNkjXRlv6rG3Q/KyfY
0n4lyZrMYzOxtTrD5/HVAtXphqg/lbx3o+5nnxCaR71Q8nFSa5pGqOq+awAA
3B3w+RwWk0shyxk0C5Hoiopxnz7jOn/Bfu6cNSHBmplpra+ztLZYMjPsycnO
6Gh32Gn7ieOm81H6lmaNUiGSSrhcLp6RQMCXiJrP71q7duGa5AYuT8ilZEQt
mjJtxqZTaVfjYndP2xyRVkplVxzfsn7qwm3J9Sy+SC4RiWRKfn3SmT2rpqy/
Ut5I5xBPb1i3c/3xEr5MLuYz61OPrZw97esfZi1Zvmzp0qXLli5e8NOXn0xb
tSGB1FyVe2nd9A1nkvIpIrVUJJLKhZyW0qit0386dDIsLurUzp9m781pYAll
MrFAIFMrycUJp1ZNW3XqSkrcwU1zf163NZ8rlfiNRKxEKrVt8ZS5azOb6CxG
dczq5XM++2LcuI9Gf/PTxqgiMkeklEvFrNqchBNz5syePn3G7BnTl+0Mjy+l
iTAr47WWpx7bser7WbNnbzkYm17ehm6uQvT7e+24AAAADEFQvZRGozEYDKVS
qdPpDB307jVduqL18mjO2x9fE6jkg9T0pHt48utS4/UGz/cERwbATgw66Gi+
1+102m1BbTR27ETi6Rw2a5cGGtxodFjAHA0uNdhTF7hcTjfYcrkgL0//3Xe+
l1/2/ftf/kABHyuHj8h74fnsF56XIKP5BDMd30cf+l55xfDZ58KUVLQKp3tW
PBGHzRCVbrWm/Z+voNdAAfkEa9qTotLtHDYLW6szXA5XxpOmtmV8UDmBUI8H
Chh3LVBAwGjwQAGMDwi1b39VObuYWirnSbvvGgAAdwd8PptC5pYVqavKLbXV
diLRnpXlSEx0JF2xJyZazseYigstFUTbuXO2hAR7XLwDvSYlWVJTDA11WrlU
2DHUFN0/UDVeJGiK2bl2zcJVV6rpHKFIKiAnh29dvGDmzEULViz6aUPE1Qoa
s+r45rXTF25IqWfwhMg3hBIVry4ufOeCn1bFldRS6MXH1q7Zuu5YCU8iFfHo
tSmHV8xYNHP+zlPnwk6ePHnixKmwk0cPnL2cVNHaVpF1fu20ZaeuZLYKVchb
JHI+o7HwzNqpC46cOp8SfWLbpNmbM+ppPAnWZiJVyZrz448smopFIIjb+/Oc
jeu3FnCkWMdygVCkYJae2LZi2ryfc1oYDHrlmeWzls1ZcuDE4R0bl0xcuCki
q5ohkMq4rZVFaagIR48ePX7saHhcRnETT8Ch1GVF7Fm9cuGyDVvOxqfVUHkS
OfZM0BD3ewAAgCEEqpfiUqNQKLRaLaq4BntNF6np/emcfYkbAFLTd250SFxm
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
Z4iai+EiRQ02Dd04UYPN54w9UxMWNZGL1KCoIRAIZWVlExk1Qx2EvUkVa0tU
Fs/JXWWmUVP2VS88wCXntVRT5L2OYZdQ1FmNz8ULj68p/Oad5C3H8cnZ3VuW
dUvVVgWuec/+lvR2nVKi6qb0krhDFp+XntGRsQVHN7qH9Fa91qI/+bPNZPP6
xomUQU7Tzn8/+8RDDz4y6dHJk+5/8I9//HZ/m9jmha4BAAAAAIjg8fhMRpfR
4NSqrYW5guK8nov9TE1+fn5LS0to1KBL2eCszlGjBjlt1CAQNWfo4kUNOhan
jRpsx5551FRVVU1Y1PSX4JL3Nxb0h6SDqb++rP2HVR1Ne0ozW8Qsx7CbxW1M
rU8hKWiNhM2J+PzWXnxld/yKbonKKq6oWv998rT5ZatXFS1cVFlA0lqH/YyM
jrwdTW0CUfrW+q2xFZs312xeWbY5riWjVWN0jJkofvuQktXa1NjW0cns7u7M
WDrlXw/8YUEabQCWIQUAAAAAiKBW2TJPcJIPMTOS2bsSOsuLLvpIDRY16BcU
CiVyqZqwqMGWqhk/aoJdA1Fzhi521GBFc55Rg3b7xEeNtByXcqA+q8ftCW5S
CyoLW+ds6mreW5rXNsB1DnvY3MaUhvQurZzXtTuLXUNTsOq641cyRDJD15Hy
jUsrDlSIOvDMwsNVS/dzmQobN4+clYDr1BiZnWJyWw+B0EdoFRBIAxyJzek9
02/MhDu48ZW7X4+rpulgqAYAAAAAIJzd5unhD/LYegF3sDCbP2EjNRckarBZ
nY0jIGrO3MRETeTsZ1GjJrhIzeUQNXYW5cCG4uX7RMbRLdKy9qTV1XH5vbgj
xbtK+5iodjiCqj01mRS1hEHZmcWrZanZ9d1xK7pFUiM7tTzuELnejD7OPdTV
+r91XY08g6CQkpvYTBCpSo+Sju1sOXgQfzAJd+gwtYJisLjGKhSf02ZSywet
o3HVnb7mk6dvf2d7HWcIogYAAAAAYDx4nHQCpnQeJ2pCl6oZJ2qwroGoOWcQ
NWOyqZvTmlZML9+X0l1SzikuICcsrkhIZHRJhnoam+atath8vDs9vmLV7OI0
slbOpq7f3LCroLuyOPBMjUxrN/fQDm2v3bCLVpRPOrK1fHVaH1/r5OZR8nc0
43vleTtbd29q3LGjZcemuqSdHQXEQdOYT/77Bnvb0pd9O2/e8nXxiYlxyz9+
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
hiQCYklFVWVlaVFBbnZWdm5eeV2jUG2yOd1w+xkAAAAAALiyQNRMdNScNQe1
grjku7LDxf0qc9ijCi4RmbFzfuGO3V1izzD2r+NnsPjmyfU3o/C5nQ47TBQA
AAAAAACuLBA1l33UePUicVU+JbNSpDCd8n36fU4hnpWfQW3o0llHb/g5s6gJ
wPaVexTajWhnOkZB1AAAAAAAgCsFRM1lHzVnB6IGAAAAAABcbVDUpB5lshgQ
NT8REDUAAAAAAOBqYzI5M0+wOSxdcAtEzRUNogYAAAAAAFxtrBZ3Vamwr3co
uAWi5ooGUQMAAAAAAK42ZpMrL5PH5+iDWyBqrmgQNQAAAAAA4GpjMjpTjsAz
NRA1EDUAAAAAAOBKBbOfQdRA1AAAAAAAgCsaRA1EDUQNAAAAAAC4DHk8PpfL
63R4TEaX0eBEP1C8OByeyHdC1EDUQNQAAAAAAIDLkEJuoXWqmuvFGcnslCPM
1KOsw3vozfUDke+EqIGogai5RHw2dS+XL+xXRe4Bj3Ggu7m+pp7co7P6Qra7
LYNauXgA/bWRBH5S6k0uly/iowEAAAAAfhIGdfbaiv60Y0wSXt7DHxRwB3NS
uXmZPL8//J0QNRA1EDUTzqbh1iyb893H/3r3vXk7jnUMnvqqidOcNvOzN979
5L0/vPnh/J15XCO23e/Tdx1JXPjRB2+9hrz62muvv5VQ0D7gmvjvHwAAAABg
IqDL+f7eoapSIa5hwGYNXLETW2UF2QKIGoiaqzxqfMYhegO3JK87t1RA6zNH
uSPz5Pv8w4G/LD774CCP2k+gqORKtAssWp15UG8xmu0Wq13Fk3QSRMx+s/2s
x0pMyu6CKV/957U/3HH/e1MWVOtCX7P3VMRNeyHmmdenbVj//YdPTv79x0uO
CR0j35O3P+e9F9+47a5/fP7ZZ59/jn767GAlSf7TOXkBAAAAAKKQDJhK8gV1
lf2Dentrk6QwB6IGouZqjhrvoEpRm968enb+7O8Lpk7PX7kNX9ulN3sj3+kb
tmoZfUalyTpA7IqfX5JwgI6r7W4s78wp7Cou6MzL7MzM5TVltu1ahl5iiF3D
EX+xTvOdDA+jPW+XlMyYsWrBnDJNyEse9rEFn/1l8stH6TLX8LA45csX3vz7
W0miwDfp80ly33lh6xfT6eezFwAAAAAArjgKmbm0oKe5TpyTxi0t6I18A0QN
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
/n4/kvCn7UJXzpqY7Xlj/YC+qmoaYydMHD921MiR45Ysv+KKIgvf7tYIdzqv
MmzEL7p+Hdr+DpAzXt9Y2k91yPwjz1JqOptl2ZaMrkTWkFc6bVmi2nvZVlvU
20FHRYHdvl+XLvj1YUw63GbujNEb77rnl8U8OfbrxNm6cdU0GjbLy1zv5P7D
Wlqae49sGqWmApt+wiCG2NLSnOtzRUVVFbZSzylfOQjFrg41+rXf0N4rHwWV
c8gplkdmwGADYPOOXja29vayO3Z0F3SRjRw/yygSknsxDYN0f6R9ZEtrPR+p
pjpQdcDAX36/FFb7btmOrNLl/i7Y0Ik7LFJwb/VXwSHUZAa8fhMTEeKitWuZ
yuhfVppHY2j81iBuBF8jLUhi+qn8clrfxNb1teXFHZvHDxkyYd6GJ2nVHWNq
iFk1cVZXTxxev2nfwYP79x84fPToqYsXj86eOVZpSaPm7XiaTOJ24hcyDjnz
9ZU9U1WGjZu+3TC4qH1MR8LA5Yc6u4XFZVQQcQURVsfmD1DRmPQwppjXwg67
slMdNnzmPpeytuwufXPtj5E9xs4/411Cf3sVAqkBAADdmpSEhk4DBQCp+dZS
I+dhMwutdYPPavlrnY9yCK1p5Hbaf1G0CAXNLJFEJiQUYFwex73wKGtgsCkE
Uh6yKgNZjSrA1ZJYhVG5dibx7tHvb3F3QWqUmzYGuxiOHbNR1z4E00ioK3hx
ZueysUus07BNrR3xbPNTeitn6nsnpaGKivPRuSVVFcRmtnIVDZPRVBUTGOjt
F4Our8+NfaW3btiiY3dt0xpYTST8jy81XvlWD3LLSstNrqVEJSg1BZtU5nw5
HI4qNdTLiQwjtG0nbmaEXwm0cinBtLQ0pWFcz/u/QjZTlR9QGeifZR7eKjUG
0RHw+raIQgqplEuklBU15uXhCgtx6DxccTGVIfgkHsE7WJWIJ0fGD1+6/Yyp
e7C/3xu/yIScEgKrwx6sGrjZlHHDxx4wi6xucyMOMe3Zz5OHwkbvuRKKbdtI
Uun5xxINGGz5DtPs1j1piNvzJk9Yffx5cfvHiAVS5bMo2v/qXGoYKIOzt/7Y
a5pUUY2txmSFWKxZMArqps351QzNelcz6z2N9/VQm7zDKv1dZ6+FU5P4ZPtY
9QFHnodBWSnId72zoKf64IOv0xv/cqSmHQEOY+3iqGFgNfSe7e5AdB7ts6RG
SifUoDMQGaj8v7jD3X4gaq7j1U3D+8AWnnyY9EkHXsHABfm7zza0GXDHaq1r
clTDx9OtRDxadWFWRlpKUR3lL2alKWTcfH8bo6vaJy9ehrh04fylU6duPwvJ
qH5XvSW0JPOd8+ZPWaJt5e3n6+sdFAZHljbSOsaXZmee3fkzbPLvd6PxnTVJ
Imp9eW5aYlZBKYH7lydNTH19+Q81tbU69196B/n5+wXFpxfVNPE7rLmnpXtc
VVUbufSWP5ra6Sdkul5ZPKB//xWnrLMaPloiImOS6woykzJy8mqb/6KWv0Va
abdliUrv5dttUO8qQbnjwY1rlq5/mpyV9GLerLFaNiFkUqaV5sYZi6/FFme9
Pr5rwahJ63Ya+CQkx4W8vLBq5ID5WvpR0NVGU0rNIFXY/Osvs5SCyioPuL+q
/9Dev5qF1nFJcPP9Y2A9h/TYcMPYxScmMsjD65Wp8YPbt81iSkkCdpHxhdsb
dz1KLIfqeWlW6JN1i0bDYH1nrn6EehcGsAXn/Wg/VM+3Wqa8j5Agl0oFzRUJ
dnt/naX+y+6rtr5BsaEegTm4JqiqEL3uHe4P66k6eK++zeuAyNBAXw97C0PD
B8aOidXUjg2bmN2AcDK5eeW49sUrVy5dunxN97qe4b3zC+ZNgpym39i5p15l
0QSfxvGpjbxyfIW6yuipc265xKAqG4h0HqdVTBUyiYjHl7RdoLhEq8OTBw8f
cSe0gN0iz7c+sRz207hFV+OIyqrFSHt2dNFPw2aveplD4b89ApAaAADQrUmG
A6n5EaSGnRKece1ikNGL3NCI0nBPxK2rAfftCko7CQslkuBKXobXZmObCsOz
bp2Ij8shc1iNb14g7l6PfmGbYO+SkVzBaMQ2eN0Ne2qeBfV8FW+L729HaqAX
mVVlaN/ALByrtQ8n8DQ/MWHCJOO4cmprtyPH/JTh9uW2Bc2cd70QCZ/FZDGY
DHpzE5nSxGAq+zn8hizPE+PnHbn5OB7Lae4WUpNndT+rDFPx+EZOaqqyU1SX
WhmoHw7PK31w573U8ClNgZcCnr4qLpK3SMoqwsz8HkSSG6EOQkWekw38UVwz
jdjUUWpa+Py6lGwro5hbN2OMH8bo34gxMc4paPyzkRoROdfTYOP4Qb1/3nnW
LBRVWtshcoGC3ViMhPt5O9jc3T1i6IC+Gtu0L9qGx6cWE+iMGvjVGWP79Bg6
a/81t8RcJDzo2fZfRvSDDV+i+QzROsQjIkScnz2tp+rPuy56hoe5P7u3d+sf
Rx/7IQnt/ZbOpaYpQXvbil4Dlx19mlDD5PGJyde3zlfGWVrxAM0Wy6EyTozy
fnH31IYpMBV1jUN6Fq+8I5LycSxWE9Jfb9pw1d4/zdQyDsxGxdjdWKbao0+f
CSefhlW/jRbQ6fSzFkFTFjL9tqPbQmv3STbBewwd1zx2/cMdbo9uIHaI9PZX
UiOqNTW4sGTe7K1HTsY28P/66pVLuIQKpPnm6at2nXyS32HQQcYuL0KZunr/
au0y9kXIVhOXDcbOa5yjTNMqKljvnhMqyE70WLl0wbzZMx4HJnc2Uevdacm4
VEIDFmrdoOqPhZq4mqqqOjyNxW/fR9pcEnpvw3QVtSmLdewjkvLq6e8XYin4
LHxRTLCfh+mZtTOGwNRnL7v61O1NYCyygsJ6n29SRvGVM4cWz515+Ioesvkv
hmo41VGPjs8dPlB19VlDp7jiOhK746w+XEFmgq+D6e0Di3oOUB286bz+S7ew
uPSCOkbHj1BOP7u3Q+PCC9/sevZHT9ORNVo9ur50/pwNuw+EVX3y7M4OCNnU
0tTIIPfH6+eO/6nHxPnr9TxCopNLiU0NhT6n144dOnb+xoeWFlfGTVBfpH3f
P8xNf++iMTOWP3SwPzVpwk+w4av2v8rGliODzA9PGtRDZcrOG36VLB4pz1N7
eu8+PdQnbtTSPHzq1JKZY1V79eyx/klguVTY6HJ3mzKs4GJNY48INCo7Pdzu
5vGjq9bcjcRQW3hZ53au7Km65LAFvJrOE5BSb+xcCNXzmUsN8lgiuRCXg4j2
eWGgs2EqTGX4yAN3zJy9IhJzq5qkLVJGVaLD4d9n9e0Bm77jnN2b5xbnVi3e
8TKpHNIeUbbDtVUwWK/+U3QeuyXkoHPSo55ePrx3zQZ9nwJ8x4ZNLhUxiLja
mkpl/aipwdbW1lShAoxXTx8AGzn/tGVYBYkt+bB2SZowfmcPLldVRpOYtHCx
pd1zvaMHDjzwisFB75GKk3yeWL7yDEpBF2SHP772+5h+/YeoGcaVQfWbn21/
ecVQWN/pv+i6BkT43tJepdan34xld7Po759+C6QGAAB0a4DU/AhSI6wrsjIN
PvoAVdQ231pIT7YP1b0TaZ1AaSjGVjRy6NBXaBMNV1WPrmyMsg46cDDAKjDf
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
nbEm1hzCwE4hvkT79MXQF5Hd3cwNJ94IAwA4BRA1iJoPjxr3mzU2i0KlLeuY
uRDcFF88xBdu6nU6kjWIGgBP1JBD4u4/JlUY4spYVyK6GvqXLTacxvlAkAXb
wlj9Mqo7qmh8Q6rz9nAAAODAIWoQNXuKGovZRH4trW8+ek67FNLU0j9r0Ou0
Wg2iBuADT+nc2L98PrQzomBcrjYdyrhOKZXOHFcycS6ko4q2SA6B3h4OAAAc
rFMSNY5rZ7b+JPHVq/avyJ+TEDUfFzVkIdvcV6jRl7ROnw1oiM4f3BDLtBoN
WSmIGjjl3hs15EC7ItQEZg1fj6b1MDcOcWinFGNadDO+90k6Y35dhbMxAACc
bEcvanrV//4MuTdTEaJmP+1j1Lj/MRkXVqVP03ouBbvfrNGo1TqtGlEDp9x7
o8ZicxS08s4Gd6TXTmv0+AL7gdMbrblNXLLAs5s4Jovd28MBAIADdOSiJu/s
1pmzxnNnts4XIWr20T5GzctFbTSbjBUd7M+e1odm0/nCTZ1Wo1QoETVwmnmi
hhw9dpzqcLpmluW3Evu+SexlzUkPeWyn1syS/F5yv098L2te5nDgzRoAgBPr
qEWN9OyZrbMF64Xnts6cVyJq9s8+R43RHTXcRVFgRs+V0KbWAZ5MrtBq1Iga
OM3IoYlCoRQXF5PjG9nm35oqU5uSq6Yuh1OraIsG08k5thxxZqujjr58Kawr
vowlVeGoAgBwYh2xqMk1nDljKFhbXy80nTljCx18V9Toon9KHtHzyxk7813U
NH75+vatnyXYETXf2t+ocYekuyX1tV2cz5/WB7/omV8RGvQaRA2cZlqtNiws
zMfH5969e6WlpW9+iYMcaQamhV9G0fxeDC1uqL04yFNo+eX3mK5GdPexNsiK
8PZwAADgQOxL1CzfukUiwviTn6zduMHKy/v4qMn9fOvMWdnLEwUozp/Z+g+h
mztFjTbqP26d+al50vNODdv205/aXmaNOe5nW2e+tL56p4bn+Jk7ZOyImpf2
PWoMBr3NYmLPC/zTei6HNLb0cWUyuUqlRNTAqaVSqUJDQ2tra8kGTwL/zUlr
Ym1EwRh5XU0d49sdTm+N8HRyOF005gZZ+CE5IysiXBgIAOBk2peoGauqsv/2
b3/3FsmZM9Yf/cj5Z3/m+vM/J79Lfv5zzq9+tXzt2hiVumvUdCn/3Zmts3mv
zn5WdH7rzH/QDW2PmgnzfzzjiJ7c9vGzBseZM47GNz5+1nRt68yfOGYRNW77
HjVkyRsNerVG09jHPRtQH5jePTO/btSrETVwanm+U0M247duJxXTPLhyOYwa
XcyUKg1eGdspt6k0xZVOXAqj1vcvWe24NhAAwAm0L1FDsFNSjD/5yZtds/3X
AoWyW9R0+VvPnDHkvT6lc5HpzBl76NDbUTMRSeLFVrPtOzUzcc4dHhRR88pB
RI1Op7NZDLPLQr/UrnMBdfU0tkqlkMsRNXBKvevsZ/N81ZN0xvUY2ihX7MDb
NN7gcLjGZ6U+cT0Png9wVxTeHg4AAOy/fYkaVl6e8zd+43VK6P/lv9T/8R87
bt92BQfbAwI2rl7l/OpXs48f7/7xM77/v9sphS6o9hI133unBicKeMMBRY3R
oJMrVE29nAtB9QFp3dOzaxq1ElEDp9OOUWO2OoraZs8Gd6TWTBnNJ+eQcuyY
LPbM+hmyIvKauVgRAAAnz75Ezer16yRA1P/233Li4xk02kd9p4bq/uzZ57nf
u/hm8Xlyt+bStz5+VmU9886PnznjuYiaHR1Q1Oi0WqNBv7wu8U+jfeZXU97O
UqkUMhmiBk6jHaNmYn7zbhLdN2VgelGOyz96k2uLt6p8nMa4ldg3whF7ezQA
ALDPjsrZz7I/c7/Fk7v0vagRFJvPnNm6ULqXEwX8zM594zs17ztRgOsr90fU
tpYQNR8ZNWQVGPTuN2vqu2cuBdcHpHXNzPHdn0CTShE1cNp4ooZsw69vMZhs
z6unPg9qL2qfdeIiKd5G/qar6Jo/G9yRWD6pM1i9PRwAANhPRyRqRJ+RuPhM
svRW1AiUF9yfQNN88CmdLfE/29MpnRE1nx41Wo1Gp9WsbYhDXtD+8XF1UdO4
TLZJsgZRA6eNJ2rIsY7sR2S3studDLb4ZkJfQObQ7JrS26MDt2WhJjRv9EZc
Tw9zA2cMAAA4SY5I1Ly++OZbUbNfF9/0eP26/c3X8/j42SdGDVkROh35TVXf
zb4YWPcoqWOKtyqVSiQSMaIGThXPdWp8fX1J2rQ0N8jUxtiyyQuhnU0DKzY7
zg9wJNgdzvbhtYthnaG5IxIFzkQHAHByIGoQNZ8eNRqNWqNWra5LovL6fv2o
Mqd2hKw6hVyKqIFThewJFAolLi6OHPH6BxnUMf616J7wgrENqc7bQ4PviOX6
mBLm5XBqC2PVZLF7ezgAALA/EDWImk+PGjWhUhn1mlY652JA7a3oZub0omzT
fa4ARA2cHp6Pn42OjpA/C+QW/8yha1HdA9NCB75Nc5SQo98wR3w9tudxOmNh
XeXt4QAAwP5A1CBq9iVqXq4U1dKqMLFo4DO/6oyKwcUVvnxTcjSjxqnXr7AF
zNGNsSmpSPXutfxqv3BadDrhqmyZrzPZPDc5XXa71f7t9C27UaWVbBrM7n93
GaTK1UWZQG624ZXsKeOJGsbggN25VdO7dCG0M7lyUq42eXtc8DaFxpxRxz4f
2llGnTdb8M0aAICTAFGDqNmXqFG+pNeqaEOzl4Prr1Ea6KM8xVGMGpdJKx+u
Gwz6quLK2fJzX9bFFXG44h0/g+J06TWrYqPBYlgeYMY+aEosmBNoSMk4tSsC
7vgKb9P5ci6nYmGlo6wvq5DZOaHUWswrtLGEhw1JRbPC/d58yOogy5yso32+
349CNgCyPXh7FG5k+ySLxXUETpdMdgFKaOjI0OCi2HQ/pf9WQt/Uouz9sx0M
squSdeStR38T2WLdF+o9GodTz98X5A+8VeWdJPrtZ/SJuU1vDwoAAPYBogZR
s19RQ9aOTqNaXBEklw58/qTqeWn/3MKqRCw6WlFjk9Vkd1y+VpdSPc+cEjA7
hvy/KfWNGWEqnG/tBC67XjkzGpQ/28cTDZYPP/qyb2xJZ3U49RJBVWTTkwfU
6oWX24eG/yKq9bFfS3J6151bzbVjMrlG2RLTnhjUxzFtfdzr7He9Pic7S1JS
Etkj9jrj7i/4P2Iq2U6ys7M7Ozs/4j4/btIuUxkMRlpaGtkm3zXX/i6WXeYi
hyYKJbS9s7u6b/0ChZrdxNUbbR8y7y6D3P0Rd5lEdqK8vDyyd+9pro+eustc
5Ej+7NkzcoTf64wfPc5dJpWVlVVXV2+5L4rqLGyfvUjpzGrkaF+e3vkodDEA
AHw0RA2iZh+j5uUKUjAm5r8Kq78cXNNOn1JsigVHKGpcOvZIRFjDzbR5keHl
iz2bgVXcEhDSHl2/vjg4M7akltm3rHzBLGuWNrFc7F/+y78vSawaz8qaCH84
rXZ/M0I/2cH45ucvfvllS/WyzWJzSrv64p/Rcwc3+QtLjWn1j/MWuBo7t2w4
L6SH/VHvY5DVUVtb++a1Tl4j2+TDhw/JwtxxRrLRVlVVkXX31u1klZWXl5OF
vONcZBcrKioi+9qOU8lOSl4Ebl8X5FEoFArZr3eci2wM5D53fBFLAoS8pHzX
m03Nzc1dXV07TiJjICMh49k+qb293d/fn2yNO85IpVLJ5rT9drlcTgZJtskd
5yKbaHFxMdmwt09qbGwkR7Md59Jq1GEUSkRK2cOM8Udpg0sbmjenksMaeUSJ
RLJ9RpKHbW1tO94n2QcrKyvJ3rF9EjlylpSUkB1wxxkLCwsjIyO3Rw1ZUGQu
cuDdcS5y+CWDJIfcHaeSLZAMhhwT3rqdHCLIxkCm7jgXWci+vr5kT98+qbe3
t6GhYce5yDGqrq6O/P2y41TyrMmzIEtg+ySyI5BBvuvonZSUlJGR4fnzmlj3
JINxLZo2NquQbUpLSorI3zs7zgUAAEcfogZRs49RQ14oajXKtXXR87KBXz0s
i8vvWVhcFQkERyVqXK7l6o7ktN6KxTde6Yk4ZUX020HD/ZlNxUPiJeuWaWyy
vZSWS19tSG29/U1zCZVdWTQZ85SttJKX4uaN2fW8Jw1Pbrc2btj0RtNQcH1i
KmvA/bUJjXiMfjeNO8w3zlePV8T1DK1JOkuZZdnDxcVjxdmM4tKprmm1wfr+
/xocERFRWfmqF9589U8WWnBwMFnOO85FXmyHhoZuv52sU/Ka/12xQFYNecFJ
1s6OU/v6+p4+fbrjjpCQkEAaZMe5yMbw4MEDso9vn1RTU0NqaMe5iGfPnuXm
5u44iYyBjISMZ/skcggiS2zHtySIrKys5OTk7beTbZUMkmyBO87l6UeyeW+f
FBcXV1BQsONcToc9Ijz813cybqWyWkdEb00lxzeyqIVC4fYZX7x48fz58x3v
kyArfccuI4fTR48eveszZmRRkxfw228ne9aTJ0/I0XjHuci+SQb5rncDW1tb
yWB2nBQYGPiuLiMH8KCgIPL0t08i5RgbG7vjXERUVBTp8R0nkWdNnvuOrdfU
1BQSEvKu+8zOzia59/pfO8YlV2MGMlr4o6y5Bw98V1d2jlwAADj6EDWImv2N
GoWCrKjNsanFW1GNF/yr67uYUrFwY2P9iETNbHF7bs5g+5sfolfNV1UN3fEb
pKc3lI1KVmxbljFmS2FvxbRsY2Y8qmh2aE44UsOKfDy1aXpVGPPFQ2m3m2s3
rGT767xdGxczxjCQeFCLJkf8s+aZ6/rZytHyWNrQmqi1aLQwvT83l5Gb2peb
z2xnqfTviBqy7ZHXhO0v3b9/PyIinErtbGvraGlt6+qikj8T5PX5119/TV7m
de4kOjr6zp075GXnW7eT2Pnmm28SExN3nKuoqOjGjRvkVfqOU8mrYjJvQ0PD
W7eTod67dy8yMnLHuSorK8k4yQv17ZPILHfv3iWz7zjj48ePyavfHSeRMZCR
kPFsn0RSiEwiT3PHGcmLbfIafvvt5KBEBkkW6Y5zpaenk6nV1dXbJ5HYIa+Z
t99OVlF7a/PjRw9/ccXvRkBmVmGNZ629lp+fTxZ1SUnJ9nlJdfr5+e04ErIv
3L59m7zy3z4pLS3Nx8eHxMuOM5J4JBtSR0fHW7fX1taSuUhD7TgXiUoyyNLS
0h2nkqAjgyEx+9bt5JZbt26RqTvORe6N3Ce55+2TSIaTtNxxLjJyMv6wsLAd
p5JnTZ4FWU3bJ8XExJAdgSy3HWckG0NAQIDnz2QF5RbXXnuSdjMoOzox4/r1
60WFBZ6nQ47/78pkAAA4mhA1iJr9jRqymlRKOVlv6RWDP79fSsnomFtcIVGz
trbq/ajZckm7aIlR7Snd331iR9nHSHnWG/hiujejPocu5pM6GZ9szqFVTW6u
TYxEFM0z5sXDr6Lm1YscVi498VZzDd+mN5nHo2tjno/2uP9juVbQ3+ebPjsq
MM5VjpTG9I5LtdMja8O9CwMDywM98wODfM6a6V1nWiLbW3BwMHkJFxERQV7B
kkIJDqH43PW7fOPhwydB4eHk5oioqCgyiXRBxE7ILGTq9tvJz3vucMe5PFPJ
Pe9ynzs+4sfd57sG6RHz0i73ueMj7jLIXe5z9ye+y6J+1x2GR0T6+Qf5+Ny8
fe9BaFhEdNTb837EfXq864nvvj2QO9xle/iIJx6x6+r7uO3h45747ve5p22M
rCZKWPgT/+CAIApZYJ47JI1JQuyInJEDAAA+EKIGUbPvUUP+kUolI1Pz9+Ob
LvhXVbaNudcpf+0IRM2WfYP7IrDh3sNR1ppOuqmXioSVQc1hocMtrHVGceOD
jBnqrI5T3p8W0l4zKeOPDwelTbZNrNEqWFFPpmTfRs1Edm+cT2Plst1ks0va
OiixPel9GglnuT253r9wcUZp5VWMVif29HFXUu83PbxadedO/Z0vKu7e60xv
31SZd36nhixz07c8y1woVeU0TF4ObctumBTL1J7lTyZ51sJ2nm1+x0meO9xx
0iHf5y536Jn6rvvc5RE/7j53f+K7P4Xtd0h+UqExVXdM3Ln/JDW3alWk3T7v
Xu/ztXc98feuu/194qaD2R52eeK7TN2vbYzcA1+kGJrm81akRtN3hzjyMwdx
/AEAgIODqEHU7HvUbLqRlSbJqWX84n6xX1Irm7t4RKJmy2ndGJ1O96v84mrN
zTv1N66W33pKbx7XGG1m8fTEvRvVl7+s+uKz/K8f0FoXdGIe68mdqqgCRlrm
ZIzftMLyaj+ZLqanPWqpW7JZXVtO3XpldNvNX5Zcu1zpc7OHPq8jP8UqGi6J
6GWpLCK+an1Fyeer+CsKPl8jVdvse/lIyxxfezeZcTtpkL2MSwQedQKF/Wl6
75WvH/T373CSBzjKbM6PPFEhAAAcHYgaRM1BRA0pGrlMOj49/+hZ8+ePy4sb
h+YXl9bXVr0fNYTdJJnn97RyWpq5LW2Lo/Nqjed6M2b97Ohyd+d8V98Ki6eQ
mRxWg25uco23slSYMRZ0e0L67XdqdCLl+sKm1OB6GSgOxZJkpGWmuXlucEpt
dv+IYziTnh1A+7izn73JaLaXUecvh3el17E3VQd4NVL4RBqDpYa+9plf7fkv
700yh709HAAAgFMHUYOoOYiokRBisUQiKm8d/fXD0tvR9UNMjmB9dekoRM2e
GYdqBu9dbsppXts07HSVzu+xrzNnUu7VRsWMLpo/9T//kh1zXarzzxy6GtHV
w1z/tDuDAzS1sPkwfeRScMNVnwfMsZ1PLAYAAAAHB1GDqDmgqCErTr4pYc0s
BKe1/eJ+cVZl3+zcPH915RhGjV22tNpUMVbWxpfq3xs1ttURbk3RePuoVLsf
3zMma6pxYPkSpTOqaHxTfXSWCXxHY7BkNcx8GUNPKmX4PvIfHhr09ogAAABO
HUQNoubgosa9+kTC1l7Wef/yr0IqO+gTG/zVhYVjFzVeJlUZY0snLodTG/o9
F9Gwa8X8RfbkFHdxRazz6hmabHqFcI6sxhkOd1WqMXv/bFFWlVQmFqssh/oN
ib5JwfUYWlgBi8Vdo1BCR0aOxMfPDCq5eENsdHj12yJ2o1K0wplhszm8FbHK
+N7/JHCArFrJ8gKPPTk9vyHVenMgAABwMBA1iJoDihqy7oRCoUwqnpldisru
/MW9osSCrhnu7PLSIqJmr2jMjauR3YHZo2Kpyixi1afHBty9c/9xeGRG64zU
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
MrW+ZxLTX/LSvVXBH2bW0qhkMoVKq+2eEGrO32JwutSgkbmpR/B5QPWXobUs
jniBRykNoqzOfZ7Uhyo5AWZ8bkqBNQGBm3Ssk7LEm1SV/2dV9i/wqK4h6d7w
OlQhqFpskAkNAAAAuAiQGpCai6TG8SQBt5pNs7WqVSnEAu74xASqpSmRDFPN
3Ku5stRweZPoik7xp/i8ifFRx1LDZDKam+vr66qra3Lz8kpAatYMNqNU07hT
Fv99dfV7uHZitcNxgM6sQLN3L+ojed2HML0Tco6ZsJHmnLMnDx0/6Xb8mFdc
Zev4d7QG59fnxx3eue/EiRPunp5+GXVdgvMa5XSpmZJo3eNaPvailDaMWayL
uDfBkdDD6/8ZUvd/bDHNWcE4FzO3XJ79Wyz9buNoxsKPsuK20saxj0lU99gW
rljjuvAAAACAdQdIDUjNRVJjNqhV0imxBNU3UhORRCKWYUqtwTJzQXEbzm0r
T/Da8/nu3fv3fBWcUdcxqTbpNVeUmqkp/uT4CJtZV0Nvamb1Dw0PXyI1qCm0
NdfnnQ0P8nA7cuTEkRMBGcVleuMqvOgNOMSq6FeVPSeLv07f6UXYzKsdznew
EXiXoNS/+pnIhlcn5SynFNlfnh7l7pvN4knEk7QQr/CYnEbZt1ZDSBszY2Pc
T1VwJianUBOXqvTfPApll5qGhgZnhDGt0pkyaYNbfGmncroWm8rYRtjoI9Ge
1IeS2rZiOicnl14+VvWIqvLvsrgbdaxjxCLvrKGqOJXdtcWHlkbhKLXrJi8f
AAAA4GpAatap1MxYyYWrRnxnq8PbLVeQGvRf9CEbrykpbOMDr733n3c3bt74
/qvvvP+f7V/7JlJ6BCrjzAM27CzPL/502y23ov/8+LHPTxd2YYRZr1aflxp0
ZdC1sdsNMhuRUGiXGqFUOsZuStzx7KMPv7s7iDY+NTE8PDTwrdR09/SzGTWl
Aa8//OBdd955530PPr0pprDcYF67lX/NQeCmkTR55v9T5P3eNFmy2tF8hylV
TxJzq3/NM43jiU7K9yWtTIv29o3qn51ri8gRAadj41nyC7u1PVnnwv3doigd
Pb0D42KV4dvX2+1Sg8a6C+PMcuJoGxB/EVTzZWht97BsCY9aSTQjWR17faue
qh6O1JvX0GJDNqNUxzqOJd+qprxmxXoWfThB9AzL7JnQmnvXev4KAAAAYMUA
qVmrUmOcGBQ01gu15kvnRYRJ1U1lnotqobQrbNM2xdhEPbm3qVeumZ42iUS1
KfWxKb1dvEtfA1iQ1Bh70zw/2LBhw3UbLnDDrXf/11N/31PInNBOT6sm+toL
o0/u+McPbrrxV+/65Xdi02ad2n6nRqFUaXRanV6LrooGXRiVHJMKBTNSI8KU
k/2NUe/cfetPn3vHs0ogmRobGx3kDLC/kZregX5GVa7ni3f/9n+feHGbh69f
RG5pOdypWVMQFrWWsVcW9z111ds2vWi1wzmPGTfQhkI9qQ9mdnypMi70lZMr
wS/PzAg7VWTPyGwZyj+bmh1PF17YzaOdDjyw66BvWnFhTkJIWGhKbSfvvEzZ
16k5cOBAUFAQ+iEuLk6jWeIjUlyxxj+V9TGJml87srSX4mczodWE1r0UVvf3
IWn90sJwBWZuBRJkecYvzOMF05fNeDZvCWZbaeP4x15Uj/iWMf7azV8BAAAA
rCQgNWtValS1JR1+nl0i3aVSg6t4Zw6VnDjezOQIhxhd4cfLw4MqPTyqcyk8
mUbZnFl7YntRQZPokjRJV378zEZMW2RdlLDXnvjFD67/1TOvbznieWz760/8
+nsbNnzvp4czmnjnK0PTVXj83nvu+q/3A4q75QSSGiWyGK3RrBhlFkd47v/0
o48+2rxl+67gTHL3pFgulyCvGe+oyvJ+/Rc/+e3z/zma0dzSUF9b19jS2dXT
19trv1PT31yV6/PafU++seVodltTLZVSUQ7v1Kw1rPIeZemzssQf6nuCCXxN
3EfrFVYG0f8S3vDyiKzJeaVOVWQUnQmvPm8jAnJaTnFq9bdSo5nq722qY7L6
hwf7WsuTDh49lVbVZzdwNCiRSCRkNIWFhdnZ2VQqFQ1KS4jAbMHz6MMfeVJ8
U5gi+dI7gtGqqRk5TaI+nNa+Q6pdE8tx4qoRFeU1Wfx1Otbx5eTTw9TG0KyO
TR6UNDJHq18TrREAAABYXUBq1qrUKCmZzBP7mVypijso6m4epJZ2l1AmBiV6
Azbp/2VtRq5IL5osDsjZ78kk1w8VBBW6edLL+FYll5+xt6i4dkqAYSN9vB6e
eb6n0ea+UzOzXdKSfeCFn9/1in/RTDJYXiHpg59suPkH122NpQ7aH+o3cBsz
D91z953fSI1ea9SrpLy+hPBj7zz+kx9fv+G2O26/+YYNG2576IVPIovreVPD
jcWn33/l+Qfv+cGNN//0lw88+/LLf3/59Xe2BeVTWnqHB9jfSs2r9z372ocH
E6rJZSUV5SA1axHjUBKWcqci748WMWOaWNazVcsH008mMbeSqA/VjsbYnBkM
Rk5JDial82Z7jrYlITImOYlxYSVNXNLXMzQ4ef4VF21b0LGg+Jxmu9QoZh8/
Q6PHMiPoGJTsDavdFUxv67/cUpsLAdNzU1ifIa+pGT6DHGeZgS0TwqrXd/vL
Em5Ulf8VV3KWVRQx3TsmOxDRsDOoprEbHkIDAAAAQGrWrtTUZHcGHmWhGknw
LXPbl3vscPaWHSWkFA6PN3baraWoTCbqZKe758T2m2b+FtzZ4BdQeZKqkHPF
xccqKpuF48NDlVlNSXSZdAob6hf19goG+gW93UIOR6404rbvWs0FqbGJWfnH
Xr73zoff/yo4j1Icsec/j123YcOPf/t1VgvPMDORQFLTkHHwW6mxmEwWNa+9
+Otf3XvHhlvv+ds7X4VHhvkdeO/h+266fsP/vLwrmcagpHs9+cgffnnHjdff
dOuPf/G7/73/j//7+POvemaUMXpHOd+Rmmde+/BrkJo1DK7lahu/kCX+SFu/
1aabWsVI0PycNhTmQ3siq3OvRDvq1LIt/TU553z9kuldrK7O/GDvoLN5tTyd
Tsnv7WGL1Iq+/IQov+C46p6+vrbmoig/71RK8/k38e1SU1dXt5zTK9Wm4MyO
D05WppAHrNblyhpOWPpFVeH1/zxV/69+cdUyS1smZj5NWfCQPOMXM0ttWpf7
fCkaw/Jqhjd5kP2SmVLlGs1cDQAAAKwYIDVrWWqCj7M4HA7py1yPiJ5xlaK2
kPHlDnJDV3+we1tRsUQzPlpxusC/eLyXp+JkVB46WOZHV8q5wqKjZRWNfL5G
I+DKhsYwTmVTGKni6NEyH1LZsYPl/oHMHolx9q6Mwzs1fWVeb9x9++13/PTn
v/r1r35579133/uH328KLO8XW4jpmZTPVgEj+8i999z1uw+Dy/tn/vBr00x1
FXn+7t7bNvzs1Z2JDLXJqMXGe8s8H/3d7Ruuf+5dbzJPJmS3FAb851c/+fVf
3vLIY/V1tbHau9kD/QP9fRc/fgZSsx6wiJoU+fdjybcZh5KniaW8ELF8iGli
WNYYWvv3kNoX+0XOT1ls03FZlOSjR498fejoAZ9UcpcIJ6zc/prwkIiGEYFO
PUnPjDl+6OChY0fcTgQXNQxi1vMD6PJTOpsstuL60a1+Vb7JzAnhldejXAgW
3FQ5EOhB/lNW536tSXblA1yDzaTU1H4ijb1eW7+dsDjnnpFApg1Mb//Um4bs
xgTLcQIAAFzbgNSsZakJOto6wOb4HqgtKJt5pH+iiXN2VxG1rY/k1laQK7BZ
zAJW95njhbsPlHz1ftKHWyvDGhUKnrDwSFl5/ZT9yhEWi2ZKxO7isdonuzon
WUxuT69EYZz5+6/DOzWEtLPQ/Y1773rqrV1+idnp6akZRZTmrkmZymCymE0m
68wfW9tyjs28U/NhcHGfahodq5rszD9+389v3XDf21/ldFsJwqIVjdKDnvzD
nRs2/Pk/HpVCvU4yzojf/Jt7f/n8Jm8KHxNzx0cHuzu6ujq7enpBatYZuMHQ
fwZLuV1Z+oxVstznrJYGppvM7NzjRX2UPnLGSRnPLoEwG5RTE6PDQ6OTIqX9
jQ2TQS0SijVG9C+EUSOfGh8dGhyZnJLoLppLL19qhriKg2cat/tX09unnLi4
pEQ7ktiG5v5PNo0n2YjVmPwTuKE/Rp56p7LoSYuk1WmlEtMNXfwvAmsORDYM
TMqvfAAAAABw9QJSs3alJqsj6EjzQB8n4FArjSpBm7iM0dzDRTRmn8fxtqJ8
oUmtHGvopdRyG9r51eHFviRq6qBBzhMWHJ6RGom9GJ1muKo5yL3y8MEKL/eK
Iwcq/PxZvSLTnDs1tplEAdN6bl30/ufvvfXGR97dE1TUxh4V6+1P9BNWi17E
YdSUpyeG++7/5223/uhHP//3tt3h+eXV7cOTo4z0j35513XX3fXAe3vPldHJ
WTHHX3jgjhs2/PSJD30L2FKVYqK/4fRbv/j59bfd/+qW0Lizvge2v/TX5984
GJlF7+Kwe3sHQGrWEzYdT017QxZ/vY552GZxzt2EhWPFjW3cLL/qp+NbNwvV
y3ovw+ksU2oUGtOZvO6N7uTEsn6nv/zO5GX7Vz9zjvHBbKU5TZcWiFXOVpU+
hyX9yNATTDjVqnQGS0rFAKq0yNwuhRqWrQEAALh2AalZq1KjoKS3eX7d0Mdm
e+9vLC2fuVMz3jCYujef2trn6cYsKRJbtOKmrKrj/oy4cy0hXpUx2X3jOkI5
Jc47XF7ZLJoYG60sao2ni0bbOQUZHcmJ7dkZ7cnx7bm5IxMKC/7d/GfnUzpb
JwtDP/nBbCrnG2/56Z93BGb1IrOY2Y2qQtObf+yTF3/2k9tv/9GFhM83//6l
TZ5lIxLheEv4iU1P33fLzTfd9d8P/OG+e27a8L3fPvhPt7jCzjGRWCrlDveU
+Hz41C0zmdTu/Pm9t9+44YY7f/evw+cKm9mcvm+lBhIFrBMIM58mz/q1PP2X
xrGcFT73pKI9uvlt/5pnegSlFtvamsTKl5EowGzF6zqntvtVH41uGuI6f1kZ
jUlS2OfmQflTGdvbsLIqajOrtc37ZvKBV79n0zp/JdBhnvJYTPM2vyp6+5TJ
Ag+hAQAAXKOA1KxVqdFzOrjksnGRRFRVMsYemJmEYKNiZn53/+Cgx/7m3Byk
Oeaxjr5wrwrS4dKTZ7rrBmeyOOuF4ux9xeX1gsnhobJ8Rnyr2uF3cLBODdpk
FjZWJn34yZYtWz756MONuwNTqUNaGz5TdagydeNNCcFH3nv/gw82fvjxDJs2
bnzv44O+iU08hUZn1fHbSmKPfb7x9Vf+8c9XXn3zg4MRaXTOpAiTCtBl5HEn
OCxa5NEv3/33qy//4+XX3nj/kPfZojpWJ3ug+6KUzk+9seVoVlsjnUKGlM5r
HALXs9xkcTeqyK+4Ypo6H3qzoqzfB83M83uO6s3KFTvvAlEqlSQS6dSpU6Wl
pWiIW9SxYwKVexwDzcxpTK7R5JKXlUYxRkTDvwJr/soW0XDbCg1uhM1smiiS
p98jz7rPzKt0xSmMZryGxdvuX+12jjHCW3OtAgAAAFgZQGrWqtTMC67iBu8h
+wd0jkpn/0xtM+u0JsvMO/zTVr2eU9MZ8llBYd1lVqSbZ52a2Yq55JM2fOZa
o8qcrVbLbNI0dCBhP2SmJRiNOo16ZvFNpUql0aoUmESIrppQLJOj6yUUIqOZ
QpcSVezEJLqoE2Njw+hqDw2Nokoe6Gf3zi6+2TO7+CbppXt+99Cz/9obHB5+
tqC0XL+kBT6AFQNXsFWVL2NJt+g7vafxFbpj0sUvCaa/ENX01oSinVjtnNJz
sS++uXfv3mPHjuXk5BALfikGTctzqoc3elQGpbdjKlctO2u0ahrH4n2rnk5j
7ZBoh110lkuwKthq8itY8q2onRAmzEVnUaiN4dmdG90r0ygcg3F18lcAAAAA
qwtIzbqTGsIgoyXXuJ2sya4TX/KkhYo3VRJR6e3XVMdRX/J7/cqLb9oX4Lyo
JaBP4NaLpcZsr0t7A7BvNOh1WrVqRmpmLgv6fyX6P3SNZDKZWCQS8PkXpGZs
HF3YCVS9o6Oj6EIPDnLY7L6eWanp7Wczakr8/vXAH++44447f/3Qnz88W1hu
MJtdX5fAsjAOxmMpdyjyHrBIWStwOqVBgGbjs0uunHbqwjROw/74GZVKRcOR
eTENmDUg3n+qft+p+s5BqRPzA8xFqh1NYm71oj6K7AZfgeR1Nou+N0SWcJOq
/AWrYsCFJyKm2ePYgciGncF0WLYGAADg2gSkZt1JzUweIY1OJNbI1ZZLrhtu
Nislaglm0FsunfItTGpmuPgKXuwvdlAlo6pGdY5qXqPRoEuALsSs1MjR1UEu
I0X/SKUiZDQC5DQXSc3YGNIZVLfoWnM4nP7+/r4+u9Qgrelqa67Piw7zP3n8
66+PHTjim1Zcpje66u/VgLOwGSQzy9bE36Bp3GHTi1x6LqvNVDsS40V7LK19
J6bnufRcS8YuNY2NjYs6SqMzn8nr3uRBTq4YMJpc+0oI6vdsETWY/sLpxtdG
sCaXngthFlQr8v+Epd9tHstx9WqtZgueXT30MYkaktkpU8LoAQAAcM0BUrP+
pGZJrJzUSKXoYi1Kajo6OlgsZnMzo76hvqq6Jic3t6SsDN6pWReY+VWKnP+R
Z/zcNFHkupxaqLnyFF3RTW8F0v/axS920VmWz9Kyn9HaeJ9609zOMiZFK/H+
vsGiLGF7kqiPlLA9tC57Hmx6dmEabfOXsoTrNXWfECuyPo4I03sltH5EopY2
jq3A6QAAAIA1BUgNSM3akJp2Vns7qvMWBqOkpLgcpGadQJhVhi4/WcINKvIr
VtWQi86iM8sLe457UB4s7/fRml04D18mS5CaKanWI671U29qJWPCVWHNga9i
Rze/41f15/apfNedxTiSgaXdo8j9g0W0uFtXy6GKyd3qW3X8bPOkUL3SeasB
AACAVQWkBqRmbUgNq62tjcFgNDQ0FBYWloHUrB9w5aCq7K+yxBv1vSGEC5bC
tNrMPcKKgJrnzjS9wVV0OL18J7JYqTGarGkUzmYSJTKnSyJf0QbfOJbgRX0k
kblFrp9yRfm4bgp5riz+Rh3LfeEJE5YPpjLGFPV+RKIklfdDxgAAAIBrCpAa
kBqQGmA5EFaDaSRdnnGvougxs5Du9PJFmsEU1nb/6mdaJtNNVp3Ty3cidqlB
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
UFpaBvpi0G6Dlhw00TgcDtgE6KylMpnj0F7Sw0mX+fBNkKGgK6mrqwNSAyLE
3UVzsyPhwT9cE5CvvLw8EC0YQjiqxCL9yy1SozeY/ONyt5wM3Xc5+nbae+na
5hMh+TXfnB4NSg1MMC0/gbZLKBaDRqC62nETTWlpKR6PB8rgOsrAQBQ0ceXl
5a5bbGpqatkznPuOJKHUrHWg1HhlsjrGmyg3LjDgi+NJVXyrRj5X4ZCaq2EN
PNC39zYlA6nxqaKXZGXu+uiLl3b6ReRX55ZUX49JDM0hUhgTtIakV7b7HK8Y
BkvPNVde2H1+V9HErAbVdKbv3R94NIHGYrTt3Xzkv967dCSyqKSmNjYpMyA6
t3JILDEDj0DNjnvAXeMWxISiJue1puBPo9lxz/iDwl7UmZqtEdX0qdFk3zOv
f3FoV1R+QkLCjs93vrInttEhNSX7d+z/1L+EZbEjRgU+9sornwdfyWiqr0j4
n08PP3/qRmheTWFJcXBMVnxxc9c47dSxCy8dyc0aUhhUwl4qKb+wKDAg4ONN
u369M8KnfEJhRMEuOW5+d4zEUOceuaLFwL6APXpIQTxSajDnPU1t2WHvbT36
5vm0qPSssz6Hnt9+Lpw8K7HaJH11l3z2/PSPu3+zMTqvT2SxaXA5yS+9svf3
u2NjwIC2vDIk4kZkPqFLoBVyJ1vxLRlZmYfP+/76vb2v74+omZRrgRZhdwXj
nGMfeE1uXt6lS5daCK1qre4ho/TFS810eZj/K58EB9RwQR3rx6W/scM3hQYG
WkhTYcqXe4JTu2c5TOKJ8+d+8bnf4Zj82KTI5zcdey2oic4TksvS3//s3LEi
5qREp2TWHTt6+vPg8q6pyayLJ19+e+emK0mZVbi09NzwmJS4euak1Axs1RGP
2SjjTREJxKycbJ//3955v0V1rv3eP+Bc57fzy7uvs/c+P5yz9/vmTdt7Jybu
JGYn2enFJGqMid1gI0ZRARFEBI2NooIoiIVepAy9I0VAkN4ZeocZpvfCnHut
BeMws2YxzICw9P5ct3Mt16xyP2XWc39ZT/HweuXzve/sPhfbxM0Jv/bVl8d3
h9aLJJMteXc3bN/3v34478lphZhbKRiOP338nx/8+OXxwFtJWbcjoi5cDrny
oLZpVAnXNE07PCX4AmFqGsfNzT0x6QFE+zqD1bxS2SBq4IKDxZzbfmcvP+KN
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
i9SEV1qzm8KzGzJZRIgsHW0mmxYH2DDxWxuhts0PIPoTGni1qS57dr3nHJrf
2RXj5/b6x6fcEnoMhokqTsgb37sHFnQaDPKUiMAvfjx17VF/X0uRz4HDb391
+FtX/+93nXjjw50vH4l50CFQCftz74Tu2XXs+wO+zu4+678//J1XXJNEyRuo
vuZ9/NNtRz475P3JzhMfON9MaRmT6gw6cio8lWSqgROxbaPze1tPbzl66pOf
f/vWL6mkZ7gw7MK/Pj2250JqSebNlz/9+X/84/uXNx3+YNfxj34LOJTQ3NX5
ODbA68uff/300JnPdp94z+laZPWASEtc07L4QAKIxBJqm/lHBwfMiRqVRV4R
f76D313M9Vt7dgXVCjVyvTLnjNeZ8+FZQoN6svfxPd9twXkcrpzXVnLJ59RH
B85+fdhn/Q6PfaEFrXxpe1X+3k3e0Q87ibmuDJqR9tprp09vOuq78djvX+/3
OxaaVS8AJQE6T1kWdt/fPy59wqCQ8bkFNw+eiQorHJsxCBsrU/ecCkpu6pda
rag6Ys4uQtTwoIbY+JxRk5N9QatKLFuZkADNrpzsgaYhu6XB4xpqPrS/8KAW
CkXQfFJTT9v9WJt1khA1fNudpMIMeOxDbAAiKzw8PCIiAhoFaEcgFjA1qOrw
8IEoAuKKW7duRUZGFhcXw2FK8tFju5MyuQKae1LU2OSkgRA18qO+Ie9sdPa6
eKOxucX29hcaxFv3E77a4/bF7pNPmilRY2f2oqG9yAa/VrFE1tLalpqaGh8f
DwEkxKUQeZaUlIDAgV80NSkKfAuiprKyike91La4DhXGoKhhLyhqVqcRM/bo
FENtjRmJyddSiu+UdVbmF8VnVlX0CLQ66XB3fRSnoLBtXDxjkE/1lWanXbkZ
deZG0rX0ehAmhhnZYBd1wJhQq+N1txdmlWS0TPJlatlgU2ZeeUbtqHpGp1Py
6kqKQ8Oiva5GByU9rOidJv6mqZ/OyEp3CUmL6xQJxcLa+AdnfRITy8a08on2
koRz1yLSG/vEMzMau0QN8XdgtVow0JKZmZv6qHtKIh9rf5yQmOR3I/ZKdEbo
g/z7mZVNo6LJofaigtzgGE7Q3QS/m4kB0WWPe/nEOGqtUjDUnpzMOR8cdTo0
IaakeVSqlovGy3OL4/IbW3gavVzUU1cWHplw5nr02bD01CquSKsV8nqu3Y52
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
c8ZzL2r+P0x+/Bo=
    "], {{0, 877}, {1095, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1095, 877},
  PlotRange->{{0, 1095}, {0, 877}}]],
 CellChangeTimes->{
  3.6483084723389235`*^9, 3.648308511942464*^9, {3.6483087954860334`*^9, 
   3.648308796548534*^9}, {3.6483115233942547`*^9, 3.648311524848213*^9}, {
   3.64831171417043*^9, 3.6483117152016706`*^9}, {3.648312990212118*^9, 
   3.6483129921657553`*^9}},ExpressionUUID->"7fc4d6ca-2d6d-4750-838c-\
fbfdad046c52"]], "Text",
 CellChangeTimes->{
  3.648416861042145*^9},ExpressionUUID->"5617651d-b2df-423e-a12a-\
2dc0845cab27"],

Cell[TextData[{
 "In this screenshot of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 10 are two ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebooks. A ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook is a document in which you edit text, and input and execute ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code. A notebook is saved as a .nb file by default. It can also be saved \
to document in different formats, including PDF document. But if you want to \
reopen the file in ",
 StyleBox["Mathematica,",
  FontSlant->"Italic"],
 " it must be saved as .nb document.\n\nA ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook consists of one or more cells. Cells are exactly like paragraphs \
in an article which help make the article well organized and more readable. A \
cell is also a container which contains text, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code (input), ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " output, and even cells.\n\nIn a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session, you can open and work on multiple notebooks. Different notebooks \
share one single workspace, which means a variable or function defined in one \
notebook can be accessed in another notebook. Notebooks even share the \
numbering of input and output."
}], "Text",
 CellChangeTimes->{{3.6483086084689116`*^9, 3.6483086338503933`*^9}, {
   3.6483088310215664`*^9, 3.6483090502648277`*^9}, {3.6483091025127063`*^9, 
   3.648309265088191*^9}, {3.6483093068957043`*^9, 3.648309377992123*^9}, 
   3.648311599541283*^9, {3.648311741800658*^9, 3.6483118008670197`*^9}, {
   3.6483118355805426`*^9, 3.6483118367680545`*^9}, {3.6483118946281137`*^9, 
   3.6483123175184183`*^9}, {3.6483123776707773`*^9, 3.648312420896166*^9}, {
   3.648313316885091*^9, 3.648313326714527*^9}, {3.6483134467599483`*^9, 
   3.6483135117765894`*^9}, {3.6483135621328583`*^9, 3.648313642062252*^9}, {
   3.6483136954043684`*^9, 3.6483137846860476`*^9}, 
   3.648314737795466*^9},ExpressionUUID->"3aeb5c22-5ba6-49bf-933a-\
f79031394789"],

Cell[TextData[{
 "Use keyboard or ",
 ButtonBox["palettes",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/Palettes"],
 "?"
}], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.643652039647755*^9, 3.6436521176094847`*^9}, {
  3.643662035580701*^9, 3.643662042140057*^9}, {3.6444426797382393`*^9, 
  3.644442682207754*^9}},ExpressionUUID->"71e13202-e48e-4b1d-993a-\
99bdc7dbc891"],

Cell[TextData[{
 "We can type ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " commands in two ways.\n\nThe first method is to format input through \
palettes and/or short-cuts like \[ControlKey]-2, \[ControlKey]-^, \
\[ControlKey]-_, and \[ControlKey]-/. What is a palette? It is a graphical \
control panel with buttons which help users type ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " commands. You may start the menu item Palettes \[RightArrow] Basic Math \
Assistant and explore tabs like Basic, Advanced, Basic Commands, and \
Typesetting, and use the palette to type, say, ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"3", "x"}], "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "ab2c4822-eb18-42e7-a1a9-c208015234da"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "100"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "i"}], "+", "1"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"f189fd0e-4ab1-4193-a4e8-a8f69caa3e71"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"\[Piecewise]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"2", "x"}], "-", "1"}], ","}], 
        RowBox[{"x", "<", "0"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "x"}]]}], ","}], 
        RowBox[{"x", "\[GreaterEqual]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]}]}], TraditionalForm]],
  ExpressionUUID->"27499052-0b4a-415e-ad01-158d36043fd6"],
 ".\n\nIt is really cool, isn\[CloseCurlyQuote]t it? Indeed, they do provide \
great convenience for us to type some typical and complicated commands. The \
input looks also professional.\n\nBut, if we use palettes, we will have to \
leave the keyboard and turn to mouse, touch screen or so. Moreover, because ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses invisible information to control the display of your input, editing \
your input might usually cause trouble you can never understand due to the \
fact that some invisible information may be deleted.\n\nThe second method is \
to type commands linearly on the keyboard without using any above-mentioned \
short-cut.",
 " ",
 "The common arithmetic operators are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", 
    RowBox[{",", 
     RowBox[{"-", 
      RowBox[{",", "*"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "159cbfaa-e4dd-4d45-8061-9a3793cdfb66"],
 " (multiplication), ",
 Cell[BoxData[
  FormBox["/", TraditionalForm]],ExpressionUUID->
  "0707716c-b2c2-4791-a7ec-a93e7f299170"],
 ", and ^ (such as 10^5 for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "5"], TraditionalForm]],ExpressionUUID->
  "403b1458-293f-47c3-a60b-df8d70f27de1"],
 ")."
}], "Text",
 CellChangeTimes->{{3.640504100142831*^9, 3.640504105675362*^9}, {
   3.64050414569667*^9, 3.6405041611981297`*^9}, {3.6405042108038673`*^9, 
   3.6405042141792307`*^9}, {3.641994189884696*^9, 3.641994190478771*^9}, {
   3.64199422640362*^9, 3.6419943082230906`*^9}, {3.642007139245718*^9, 
   3.642007182005341*^9}, {3.6420072183085766`*^9, 3.6420072456405573`*^9}, {
   3.6420072983383226`*^9, 3.6420074613314085`*^9}, {3.642007491649061*^9, 
   3.6420074928677998`*^9}, {3.6436522056378756`*^9, 3.643652278209303*^9}, {
   3.643664776190402*^9, 3.643664822004891*^9}, {3.6436648522155266`*^9, 
   3.6436649791164155`*^9}, {3.643665113992728*^9, 3.6436651763561125`*^9}, {
   3.6436652518002014`*^9, 3.6436653193798695`*^9}, {3.643665356780896*^9, 
   3.643665649643778*^9}, {3.6436657258619127`*^9, 3.6436659189763803`*^9}, 
   3.6436661336226664`*^9, {3.6436661744457626`*^9, 3.6436661935004597`*^9}, {
   3.6436663087780294`*^9, 3.6436663328968287`*^9}, {3.6482982403880577`*^9, 
   3.648298258843978*^9}},ExpressionUUID->"a8f67f4a-dbc5-43b3-97d3-\
7bb98c0d6211"],

Cell[TextData[{
 StyleBox["You are strongly encouraged to take the second approach",
  FontWeight->"Bold"],
 " unless you use it as a word processor at the same time or type Greek \
letters and special symbols, such as \[Alpha], \[Beta], ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Infinity]", ",", 
    RowBox[{"\[Element]", 
     RowBox[{",", "\[CapitalDelta]"}]}]}], TraditionalForm]],ExpressionUUID->
  "28fbe3d8-95d4-4795-82cc-bb4e338f615c"],
 ", etc. If you just want to use the keyword, you still can type this group \
of letters by typing  ",
 Cell[BoxData[
  FormBox["\[EscapeKey]", TraditionalForm]],ExpressionUUID->
  "e2b2b8f4-7a5e-4369-b3fa-e5a21460b16c"],
 " key, name of the letter, and \[EscapeKey] key. For example,\n\n",
 StyleBox["\[EscapeKey]alpha\[EscapeKey] for \[Alpha]                         \
  \[EscapeKey]inf\[EscapeKey]  for \[Infinity]\n\[EscapeKey]ce\[EscapeKey]    \
for \[CurlyEpsilon]                           \[EscapeKey]pi\[EscapeKey]   \
for \[Pi]\n\[EscapeKey]d\[EscapeKey]     for \[Delta]                         \
  \[EscapeKey]!=\[EscapeKey]   for \[NotEqual]\n\[EscapeKey]D\[EscapeKey]     \
for \[CapitalDelta]                           \[EscapeKey]~~\[EscapeKey]   \
for \[TildeTilde]\n\[EscapeKey]ee\[EscapeKey]    for \[ExponentialE] (natural \
base)            \[EscapeKey]elem\[EscapeKey] for \[Element]\n", "Code",
  FontWeight->"Plain"],
 "\[EscapeKey]",
 StyleBox["cross", "Code",
  FontWeight->"Plain"],
 "\[EscapeKey]   ",
 StyleBox["for ", "Code",
  FontWeight->"Plain"],
 StyleBox["\[Cross] (cross product)", "Code",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{
  3.640504114254007*^9, {3.6419944074848766`*^9, 3.641994429675001*^9}, {
   3.6420038298167696`*^9, 3.642003906787664*^9}, {3.6420039506723166`*^9, 
   3.642003962737377*^9}, {3.6420040156693087`*^9, 3.6420040612281947`*^9}, {
   3.642004095861028*^9, 3.642004127822713*^9}, {3.642004274168149*^9, 
   3.6420044511005373`*^9}, {3.6420044910816736`*^9, 
   3.6420044948797503`*^9}, {3.6420045532989435`*^9, 
   3.6420045716933975`*^9}, {3.6420046170305896`*^9, 3.642004680980141*^9}, {
   3.642007503136325*^9, 3.642007512983436*^9}, {3.642007549462741*^9, 
   3.642007554558213*^9}, {3.642086060112919*^9, 3.6420860774428806`*^9}, {
   3.643651948371625*^9, 3.6436519659360394`*^9}, {3.6436523324037533`*^9, 
   3.643652332903817*^9}, 3.6436664365075912`*^9, {3.6444469073595014`*^9, 
   3.644446928565162*^9}, {3.644446984290947*^9, 3.644447055036315*^9}, {
   3.6444471061523333`*^9, 3.644447110652955*^9}, {3.644447213102941*^9, 
   3.644447365467306*^9}, 3.6444474203522096`*^9, {3.644448127978269*^9, 
   3.6444481365243254`*^9}, 3.6444481849614944`*^9, {3.644448758574933*^9, 
   3.64444876081921*^9}, {3.6444488609785414`*^9, 3.6444488704798775`*^9}, 
   3.644448901378336*^9, {3.6444490608281946`*^9, 3.644449077955355*^9}, {
   3.644922918435109*^9, 3.6449229188413725`*^9}, {3.6449232139618607`*^9, 
   3.644923216259014*^9}, {3.648298262391818*^9, 3.6482982701748714`*^9}, 
   3.85695027814914*^9, {3.8569503124672713`*^9, 3.856950349231834*^9}, {
   3.8569503864773445`*^9, 3.856950488464326*^9}, {3.8569507685179167`*^9, 
   3.8569507827830677`*^9}, {3.8569508451244693`*^9, 3.856950872343892*^9}, {
   3.903879164806245*^9, 
   3.9038793235411186`*^9}},ExpressionUUID->"e89323ec-2506-4d0e-a969-\
25625aa4d48f"],

Cell["How to type \[LessEqual],\[GreaterEqual], and \[RightArrow] on the \
keyboard?", "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{
  3.642004648769992*^9, {3.643652362032441*^9, 3.64365236981457*^9}, {
   3.6436620107803564`*^9, 
   3.6436620133955603`*^9}},ExpressionUUID->"cda20c18-dc7b-4612-96c5-\
24559cd9f416"],

Cell[TextData[{
 "In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Input mode, type <= and any one more key to get \[LessEqual].",
 " ",
 "Similarly, type >= (or ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]],ExpressionUUID->
  "e2fbe200-8ec8-47e3-8c50-4acea0bb94e6"],
 ">) plus one more key to get \[GreaterEqual] (or \[RightArrow])."
}], "Text",
 CellChangeTimes->{{3.6436523779406805`*^9, 3.643652401568472*^9}, {
  3.6436665029927697`*^9, 3.6436665187768097`*^9}, {3.6482950899345407`*^9, 
  3.6482951060484505`*^9}, {3.6482951593926296`*^9, 3.6482951655348735`*^9}, {
  3.6482951960596447`*^9, 3.6482951970290575`*^9}, {3.64829524298032*^9, 
  3.6482952436209583`*^9}, {3.64829828988111*^9, 3.648298297742547*^9}, {
  3.8569509392161355`*^9, 
  3.8569509521924524`*^9}},ExpressionUUID->"6effdac2-086e-484c-881f-\
abbe501dbb7f"],

Cell["Give me a numerical result", "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.640392244148563*^9, 3.6403926351864357`*^9}, {
   3.641994509621883*^9, 3.6419946037266803`*^9}, {3.641994641231512*^9, 
   3.6419946551441045`*^9}, {3.6419946852111216`*^9, 3.641994806431944*^9}, {
   3.641994836655055*^9, 3.641994847734821*^9}, 3.642003133040739*^9, {
   3.642003165970436*^9, 3.642003229316313*^9}, {3.6420032740934954`*^9, 
   3.642003282470524*^9}, {3.642003324966729*^9, 3.6420033259510393`*^9}, 
   3.642458527061967*^9, 3.6436524419014187`*^9, {3.6436619220045433`*^9, 
   3.6436619417636776`*^9}, {3.6436620803081226`*^9, 
   3.6436620812672415`*^9}, {3.6436665791291485`*^9, 3.643666580263175*^9}, {
   3.6482952188322616`*^9, 
   3.6482952207077894`*^9}},ExpressionUUID->"6e2d1b5f-bd0e-4a49-ae16-\
beaf115f083f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", "4"}], ")"}], "/", "5"}]}]}]], "Input",
 CellChangeTimes->{{3.6403909489880457`*^9, 
  3.6403909625696526`*^9}},ExpressionUUID->"e0430d6f-d462-43d5-9266-\
fd1bc4bfd46f"],

Cell[BoxData[
 FractionBox["3", "5"]], "Output",
 CellChangeTimes->{3.6403909644605694`*^9, 3.648416869648424*^9, 
  3.648416900480528*^9, 3.648417157995429*^9, 
  3.6484173223231616`*^9},ExpressionUUID->"cafb6c93-6582-45bb-818f-\
749ad4bc0a01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", "\[Times]", 
   FractionBox[
    RowBox[{"3", "-", "4"}], "5"]}]}]], "Input",
 CellChangeTimes->{{3.640392197451208*^9, 
  3.640392211048069*^9}},ExpressionUUID->"7af82669-e2d8-4a50-89e6-\
af2a77533f21"],

Cell[BoxData[
 FractionBox["3", "5"]], "Output",
 CellChangeTimes->{3.6403922127206564`*^9, 3.6484168696796017`*^9, 
  3.648416900496153*^9, 3.6484171580266776`*^9, 
  3.648417322370036*^9},ExpressionUUID->"31867473-2605-4cf3-bdcd-\
1fd6bdbde2c0"]
}, Open  ]],

Cell[TextData[{
 "By default, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " always seeks an exact solution if possible, which is great in many cases. \
But, in many other cases, this may produce an awkward output presented on \
multiple lines and even pages, and a simple numerical result is certainly \
better. Besides, we feel often comfortable with a (numerical) number instead \
of a fractional number.\n\nThere are different ways to obtain a numerical \
result.",
 " ",
 "The common ways are 1) Adding a decimal point to any number in a \
mathematical expression, or 2) Applying the built-in function ",
 Cell[BoxData[
  ButtonBox["N",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/N"]],ExpressionUUID->
  "cddbd005-ff7f-4d44-a64f-1b3e4f9a394c"],
 " to the output."
}], "Text",
 CellChangeTimes->{{3.643652450261617*^9, 3.6436524741093793`*^9}, {
   3.6436525422114058`*^9, 3.643652549977961*^9}, {3.643652588893118*^9, 
   3.643652610860392*^9}, {3.6436526763011847`*^9, 3.6436526767972145`*^9}, {
   3.6436527153104525`*^9, 3.6436527451411896`*^9}, 3.644442758767599*^9, {
   3.648295347697019*^9, 3.6482953761713934`*^9}, {3.6482954253369446`*^9, 
   3.6482954286811805`*^9}, {3.6482983009305315`*^9, 
   3.6482983031345463`*^9}},ExpressionUUID->"e35bbecb-c9b7-431b-b49b-\
74abd0342013"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3.", "-", "4"}], ")"}], "/", "5"}]}]}]], "Input",
 CellChangeTimes->{
  3.6403926764890223`*^9},ExpressionUUID->"141af31e-33dc-4fc1-93d3-\
852915393d85"],

Cell[BoxData["0.6`"], "Output",
 CellChangeTimes->{3.6403926768959436`*^9, 3.6484168697108526`*^9, 
  3.648416900511778*^9, 3.648417158042303*^9, 
  3.648417322401286*^9},ExpressionUUID->"7762bd47-58cb-4cfd-b87a-\
265ad24d3907"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   RowBox[{"2", "\[Times]", 
    FractionBox[
     RowBox[{"3", "-", "4"}], "5"]}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.6403922354433527`*^9, 3.640392238241004*^9}, {
  3.6403926458141193`*^9, 
  3.6403926475484324`*^9}},ExpressionUUID->"5e1d2077-eb70-4946-9c40-\
528264c32d3b"],

Cell[BoxData["0.6`"], "Output",
 CellChangeTimes->{3.6403926482989593`*^9, 3.6484168697421026`*^9, 
  3.648416900543028*^9, 3.6484171580735536`*^9, 
  3.648417322432536*^9},ExpressionUUID->"2610ed9c-bf9f-4ee8-bca0-\
0045143f9427"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"1", "+", 
   RowBox[{"2", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "-", "4"}], ")"}], "/", "5"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6403926541709037`*^9, 
  3.6403926556401935`*^9}},ExpressionUUID->"f0be8135-a1f8-4c72-8ef3-\
aba02a7552a6"],

Cell[BoxData["0.6`"], "Output",
 CellChangeTimes->{3.6403926568277054`*^9, 3.6484168697733536`*^9, 
  3.6484169005585823`*^9, 3.648417158104805*^9, 
  3.648417322463787*^9},ExpressionUUID->"443300b7-6396-4d95-864a-\
73906b622b6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"x", "^", "3"}]}], "-", 
     RowBox[{"3", "x"}], "+", "4"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.641994886115542*^9, 
  3.6419948985394487`*^9}},ExpressionUUID->"e169ef8f-aa00-464f-83ef-\
c9f137a65cc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "-", 
           SqrtBox["14"]}], ")"}], 
         RowBox[{"1", "/", "3"}]], 
        SuperscriptBox["2", 
         RowBox[{"2", "/", "3"}]]]}], "-", 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"4", "-", 
            SqrtBox["14"]}], ")"}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "-", 
           SqrtBox["14"]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["2", 
         RowBox[{"2", "/", "3"}]]}]], "+", 
      FractionBox[
       RowBox[{"1", "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["3"]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             SqrtBox["14"]}], ")"}]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "-", 
           SqrtBox["14"]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["2", 
         RowBox[{"2", "/", "3"}]]}]], "+", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["3"]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             SqrtBox["14"]}], ")"}]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6419949002269487`*^9, 3.648416869835852*^9, 
  3.648416900605528*^9, 3.648417158136053*^9, 
  3.6484173224951057`*^9},ExpressionUUID->"215bf2dc-0d90-4103-a4e8-\
481031dc6f27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "3"}]}], "-", 
      RowBox[{"3", "x"}], "+", "4"}], "\[Equal]", "0."}], ",", "x"}], "]"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "decimal", " ", "point", " ", "is", " ", "added", " ", "to", " ", "0"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6420034951981277`*^9, 
  3.6420035256432*^9}},ExpressionUUID->"148a8330-1727-4631-83a6-3f59185682cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.6474266573202556`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.8237133286601278`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.73178613230714`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.8237133286601278`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.73178613230714`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6420034956824245`*^9, 3.6484168698671026`*^9, 
  3.648416900621084*^9, 3.6484171581673036`*^9, 
  3.6484173225263567`*^9},ExpressionUUID->"30b2eeea-0578-4fc0-bab8-\
65a8fb99ca93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "3"}]}], "-", 
      RowBox[{"3", "x"}], "+", "4"}], "\[Equal]", "0"}], ",", "x"}], "]"}], "//",
   "N"}]], "Input",
 CellChangeTimes->{{3.6419949187766404`*^9, 3.641994919840481*^9}, {
  3.6420033406111927`*^9, 3.642003376695812*^9}, {3.6420034305531034`*^9, 
  3.6420034362269297`*^9}, {3.6420035286442676`*^9, 3.642003545179161*^9}, {
  3.642003577920557*^9, 
  3.6420035787340045`*^9}},ExpressionUUID->"eb907dac-6d21-47a1-9aa8-\
db41e849c6ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.6474266573202556`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.8237133286601278`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.7317861323071397`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.8237133286601278`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.7317861323071397`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.641994920902969*^9, 3.642003437008435*^9, 
  3.6484168698983526`*^9, 3.648416900652336*^9, 3.648417158198553*^9, 
  3.648417322557635*^9},ExpressionUUID->"b3517665-5c60-44da-8534-\
8f86b174b2f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "3"}]}], "-", 
      RowBox[{"3", "x"}], "+", "4"}], "\[Equal]", "0"}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6420034529998198`*^9, 3.6420034569234304`*^9}, {
  3.6420035535871663`*^9, 
  3.6420035733097897`*^9}},ExpressionUUID->"d7cf6cca-af23-48b2-a363-\
44995155988e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.6474266573202556`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.8237133286601278`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.7317861323071397`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.8237133286601278`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.7317861323071397`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.642003458126874*^9, 3.6484168699296026`*^9, 
  3.648416900667957*^9, 3.648417158229809*^9, 
  3.6484173226045074`*^9},ExpressionUUID->"012ddb9c-7537-4193-84d5-\
94891b66ccd5"]
}, Open  ]],

Cell["Which one to use, ( ), [ ], or { }?", "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.6403927357292547`*^9, 3.6403929293860545`*^9}, {
   3.6403930804927073`*^9, 3.640393105878688*^9}, {3.6403932540551963`*^9, 
   3.640393257133605*^9}, 3.6436486187970333`*^9, {3.6436528236387477`*^9, 
   3.6436528782369223`*^9}, {3.643662112467867*^9, 
   3.6436621285557423`*^9}},ExpressionUUID->"9b249311-164e-474a-abe4-\
f180bdae1e87"],

Cell[TextData[{
 "Now that you have mastered how to use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as a simple calculator, to explore and use its full power, ",
 StyleBox["we must be able to tell the difference of the usage of \
parentheses, square brackets, and curly braces",
  FontWeight->"Bold"],
 ".",
 " ",
 "Knowing the difference is the key to master ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.643652885217332*^9, 3.6436529095807467`*^9}, 
   3.6482983054632373`*^9},ExpressionUUID->"5f6b29d6-7332-4eb8-b4f4-\
dc10b4db777e"],

Cell[TextData[{
 "( )  Parentheses are applied to control the order of evaluation. Such as, \
in the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "+", 
    RowBox[{"2", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "-", "4"}], ")"}], "/", "5"}]}]}], TraditionalForm]],
  ExpressionUUID->"5c1a80c8-8964-4b92-b1da-80fb449db94f"],
 ", we want ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to evaluate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "-", "4"}], TraditionalForm]],ExpressionUUID->
  "a9213cd0-9c53-4631-9390-a358662c763b"],
 " first before other operations. The usage is exactly the way we see in \
mathematics."
}], "ItemNumbered",
 CellChangeTimes->{{3.640393280202937*^9, 3.640393452273082*^9}, {
  3.6444427968370237`*^9, 
  3.644442831796178*^9}},ExpressionUUID->"0fac16c4-8cb6-4936-90e3-\
e8b2cc7535de"],

Cell[TextData[{
 "[ ] Square brackets are used when we call a function. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", " ", "x"}], TraditionalForm]],ExpressionUUID->
  "5f96c2bf-d9ed-42e2-a0fb-cbb18aaf3ed7"],
 " will be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Sin", "[", "x", "]"}], TraditionalForm]],ExpressionUUID->
  "98378ea8-4c79-469b-80f3-38527cea1e64"],
 ". Similarly, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", 
    RowBox[{"1", "+", 
     RowBox[{"2", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "-", "4"}], ")"}], "/", "5"}]}]}], ")"}], 
   TraditionalForm]],ExpressionUUID->"022826e0-6d4d-465a-ae88-72e56e4c4dc4"],
 " must be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Sin", "[", 
    RowBox[{"1", "+", 
     RowBox[{"2", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "-", "4"}], ")"}], "/", "5"}]}]}], "]"}], 
   TraditionalForm]],ExpressionUUID->"79a42d2f-b290-4212-aa11-d2387ec0ad01"],
 ". How about ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["sin", "2"], "x"}], TraditionalForm]],ExpressionUUID->
  "29c3eceb-3f09-4740-87fa-3167b96f0fc3"],
 "? Can we type ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["Sin", "2"], "[", "x", "]"}], TraditionalForm]],
  ExpressionUUID->"f9766d51-ca40-4b8b-819c-0944b9cc7abe"],
 "? No, because that means ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Sin", "2"], TraditionalForm]],ExpressionUUID->
  "a704ddcb-5f93-476c-8744-a1860c03ccc7"],
 " is a function!",
 " ",
 "But there is no such a function. We input ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], TraditionalForm]],ExpressionUUID->
  "d0229f63-2981-44d5-a3d0-3c78cb6da5fb"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{
  3.6403938541258507`*^9, {3.64202462533829*^9, 3.6420246524296923`*^9}, {
   3.6420246963498764`*^9, 3.642024708120648*^9}, {3.6436609972064056`*^9, 
   3.643661023178826*^9}, {3.6444428441425524`*^9, 3.644442862067007*^9}, {
   3.6482983188112125`*^9, 
   3.6482983318292294`*^9}},ExpressionUUID->"972a5e52-4eb9-4f9f-bbd0-\
c8ad145152de"],

Cell[TextData[{
 "{ } Curly braces are used to create a list.",
 " ",
 "Such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], TraditionalForm]],
  ExpressionUUID->"d6e54398-9995-4c83-a740-dc7aa1703bc2"],
 ". While a function asks for one single argument but we want to provide it \
with multiple items, we put all the items into a list and feed it to the \
function."
}], "ItemNumbered",
 CellChangeTimes->{{3.640393291205112*^9, 3.6403932922526793`*^9}, {
   3.640393862253065*^9, 3.640394068456171*^9}, {3.6405023153762836`*^9, 
   3.640502315719964*^9}, 3.6419954461727247`*^9, {3.644442888259053*^9, 
   3.6444428923847036`*^9}, 
   3.648298334111123*^9},ExpressionUUID->"eea27573-c730-4628-9d25-\
93dc5b9c2cc2"],

Cell["We are to see more examples now.", "Text",
 CellChangeTimes->{{3.6403940872278748`*^9, 
  3.6403941243938613`*^9}},ExpressionUUID->"148e205c-be69-4bfd-b4a3-\
fdfe52d27f0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.640394155808834*^9, 
  3.6403941635606847`*^9}},ExpressionUUID->"33965112-b046-4bae-a96e-\
59a3fa4ca60e"],

Cell[BoxData[
 SqrtBox["5"]], "Output",
 CellChangeTimes->{3.6403941639356194`*^9, 3.6484168699608536`*^9, 
  3.6484169006835823`*^9, 3.648417158245428*^9, 
  3.6484173226357555`*^9},ExpressionUUID->"eef2bdef-2779-4246-bf89-\
5701b787afd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox["5"]], "Input",
 CellChangeTimes->{
  3.640394251987604*^9},ExpressionUUID->"1a0298ba-dab4-48d4-82db-\
6edd5084b1a1"],

Cell[BoxData[
 SqrtBox["5"]], "Output",
 CellChangeTimes->{3.640394252863082*^9, 3.648416870007727*^9, 
  3.6484169007148347`*^9, 3.6484171582767487`*^9, 
  3.6484173226670055`*^9},ExpressionUUID->"6571502d-470a-48a9-8519-\
436fa89ebbe8"]
}, Open  ]],

Cell[TextData[{
 "Why does ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " simply return exactly what I input?",
 " ",
 "Again, it seeks to find an exact solution but cannot. We can force ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to produce a numerical approximation by adding a decimal point to a number \
in the expression to be evaluated or applying the built-in function N to the \
expression."
}], "Text",
 CellChangeTimes->{{3.6403953271330132`*^9, 3.6403953894580913`*^9}, {
   3.641996302216317*^9, 3.6419963030760093`*^9}, {3.6419963968881855`*^9, 
   3.641996397200672*^9}, {3.6436487179646645`*^9, 3.64364884149459*^9}, {
   3.643661068764248*^9, 3.6436610746244974`*^9}, 
   3.648298336721175*^9},ExpressionUUID->"bd125971-9253-4837-a567-\
700ced9c925f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "5.", "]"}]], "Input",
 CellChangeTimes->{{3.6403942305466614`*^9, 
  3.6403942357041535`*^9}},ExpressionUUID->"d3a4bccb-a80a-4127-b951-\
38bea2b16ecf"],

Cell[BoxData["2.23606797749979`"], "Output",
 CellChangeTimes->{3.640394236079075*^9, 3.648416870038978*^9, 
  3.6484169007304573`*^9, 3.648417158307933*^9, 
  3.6484173226982546`*^9},ExpressionUUID->"516efe83-57dc-4a19-a7b1-\
203ec658a792"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox["5"], "//", "N", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "same", " ", "as", " ", 
    RowBox[{"N", "[", 
     SqrtBox["5"], "]"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.640394259443005*^9, 3.6403942622423863`*^9}, {
  3.643648669334227*^9, 
  3.6436486846641264`*^9}},ExpressionUUID->"93d6c88c-623c-4956-9196-\
22df9b27a4bf"],

Cell[BoxData["2.23606797749979`"], "Output",
 CellChangeTimes->{3.64039426272715*^9, 3.648416870070227*^9, 
  3.648416900761713*^9, 3.6484171583392477`*^9, 
  3.6484173227295055`*^9},ExpressionUUID->"5630323e-f652-4ee8-a6bb-\
379d3e86d4fb"]
}, Open  ]],

Cell["\<\
For other cases, you obtain exactly what you input instead of what you expect \
because, usually, you have misspelled a built-in function or accessed a \
variable which is not defined, i.e., no value has been assigned to it.\
\>", "Text",
 CellChangeTimes->{{3.641996485308414*^9, 3.6419966920449233`*^9}, {
   3.6419967819179535`*^9, 3.641996783730735*^9}, {3.6419988627751837`*^9, 
   3.6419988916544394`*^9}, {3.6419989228461533`*^9, 
   3.6419989668840213`*^9}, {3.6419989991231413`*^9, 3.64199902686157*^9}, {
   3.641999068773724*^9, 3.6419990706490393`*^9}, {3.642024508041114*^9, 
   3.6420245104317427`*^9}, {3.6420246076788225`*^9, 
   3.6420246112105207`*^9}, {3.64366118306192*^9, 3.6436613767933836`*^9}, {
   3.643661429910288*^9, 3.6436614376929073`*^9}, {3.6436614776672497`*^9, 
   3.6436615031709204`*^9}, 
   3.6436617886373167`*^9},ExpressionUUID->"f0c33d97-e9eb-4c78-bc5b-\
ea8125bef81a"],

Cell["\<\
If there are blue colored symbols in the input, they are either misspelled or \
undefined.\
\>", "Text",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{
  3.6420245173250523`*^9, 3.6424585350523996`*^9, {3.6436617214856744`*^9, 
   3.643661729501112*^9}, {3.6436636216007547`*^9, 
   3.643663621967774*^9}},ExpressionUUID->"6594fc35-3d9c-45ad-8afb-\
5c6fcf20114f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "x", "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "variable", " ", "x", " ", "is", " ", "undefined"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6403941961000843`*^9, 3.6403942010388217`*^9}, {
  3.641996184710054*^9, 3.6419962506619835`*^9}, {3.6419989800262966`*^9, 
  3.6419989805578475`*^9}, {3.6436618288804927`*^9, 
  3.6436618296955404`*^9}},ExpressionUUID->"70d8bf78-3f32-4dd3-83e5-\
9a9648f4d92e"],

Cell[BoxData[
 RowBox[{"Sin", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.6419961763651123`*^9, 3.641996188429371*^9}, 
   3.641996255225156*^9, 3.641996741380492*^9, 3.648416870101477*^9, 
   3.648416900777332*^9, 3.648417158370428*^9, 
   3.6484173227607546`*^9},ExpressionUUID->"142639df-77e2-4b0f-ae8b-\
37b1dc928bf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sin", "[", "3.14", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "symbol", " ", "sin", " ", "is", " ", "undefined"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.640394205461788*^9, 3.6403942100413523`*^9}, {
  3.6403944699445815`*^9, 3.6403944940601196`*^9}, {3.641996271508667*^9, 
  3.6419962854796658`*^9}},ExpressionUUID->"177ede3f-2179-40d1-a1f2-\
28e6ef0ef52a"],

Cell[BoxData[
 RowBox[{"sin", "[", "3.14`", "]"}]], "Output",
 CellChangeTimes->{3.6419968361756315`*^9, 3.648416870132727*^9, 
  3.6484169007929573`*^9, 3.648417158401678*^9, 
  3.6484173227920055`*^9},ExpressionUUID->"b00118e5-823b-4ae1-aec4-\
e9c7e6945a15"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s remember that the square brackets [ ] are reserved for \
calling a function. When calling a function, we must use [ ] right after the \
name of the function. The rule is that simple. However, because we get used \
to the notation like sin(x) for years, many tend to make a common mistake \
related to this rule.\
\>", "Text",
 CellChangeTimes->{{3.6419971098261023`*^9, 3.641997414816908*^9}, {
  3.6419975701249676`*^9, 3.641997570937456*^9}, {3.641997617318962*^9, 
  3.6419976479172363`*^9}, {3.6420247808386173`*^9, 3.642025012077938*^9}, {
  3.642458547959097*^9, 3.642458554569456*^9}, {3.6482983453943567`*^9, 
  3.648298356506884*^9}},ExpressionUUID->"825aacec-f3cf-4b69-bb78-\
e74ab12bfd85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", 
  RowBox[{"(", 
   RowBox[{"Pi", "/", "2"}], ")"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"incorrect", " ", "input"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6419956328739157`*^9, 3.64199566970988*^9}, {
  3.641995714576793*^9, 3.6419957765231967`*^9}, {3.6419958676149983`*^9, 
  3.641995874193905*^9}, {3.641995942627178*^9, 
  3.6419959493937864`*^9}},ExpressionUUID->"11382733-a0c2-483b-94cf-\
6021d588626c"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", "Sin"}], "2"]], "Output",
 CellChangeTimes->{3.641995670444256*^9, 3.641995716420763*^9, 
  3.641995875662938*^9, 3.6484168701639795`*^9, 3.6484169008242126`*^9, 
  3.6484171584173727`*^9, 
  3.6484173228232555`*^9},ExpressionUUID->"3f7c233c-8af5-4152-ae41-\
bac1837b24c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", 
  RowBox[{"{", 
   RowBox[{"Pi", "/", "2"}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"incorrect", " ", "input"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.641995919592952*^9, 
  3.6419959549885445`*^9}},ExpressionUUID->"132ec9d7-2a15-4c6f-84e5-\
f6862638e834"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "Sin"}], "2"], "}"}]], "Output",
 CellChangeTimes->{3.6419959263592224`*^9, 3.6484168701952295`*^9, 
  3.6484169008398323`*^9, 3.648417158448552*^9, 
  3.648417322854506*^9},ExpressionUUID->"38b93595-0bb9-4b98-acec-\
d73f9f2b5fcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", " ", 
  RowBox[{"Pi", "/", "2", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"incorrect", " ", "input"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6419959650993557`*^9, 
  3.6419959724596405`*^9}},ExpressionUUID->"1dd1a168-9ea0-43e7-8e14-\
1da19715ada7"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", "Sin"}], "2"]], "Output",
 CellChangeTimes->{3.6419959681465206`*^9, 3.6484168702264795`*^9, 
  3.6484169008554573`*^9, 3.6484171584798045`*^9, 
  3.6484173229013815`*^9},ExpressionUUID->"a96d51ee-744f-4a3f-b0a6-\
84711481e36c"]
}, Open  ]],

Cell["\<\
The correct input is using square brackets [ ] right after the name of a \
function.\
\>", "Text",
 CellChangeTimes->{{3.641995702746925*^9, 3.6419957099043818`*^9}, {
  3.64199579222855*^9, 3.6419958383137503`*^9}, {3.641995898370531*^9, 
  3.641995908403575*^9}, {3.6419970821187143`*^9, 3.6419970838846397`*^9}, {
  3.641997696392518*^9, 3.641997697986553*^9}, {3.643649017311284*^9, 
  3.643649042829398*^9}, {3.6436490760830007`*^9, 
  3.6436491071180444`*^9}},ExpressionUUID->"02be5cc1-9096-487d-868f-\
3f7d1622c50c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"Pi", "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.641997709097473*^9, 
  3.641997711988467*^9}},ExpressionUUID->"6d736a81-c845-4d3f-b054-\
bfaed8838d39"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.641997712957427*^9, 3.6484168702733526`*^9, 
  3.6484169008867073`*^9, 3.648417158511056*^9, 
  3.6484173229326363`*^9},ExpressionUUID->"600f8d34-3959-4afe-9999-\
5232480c707c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "^", 
  RowBox[{"2", "[", 
   RowBox[{"Pi", "/", "3"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"incorrect", " ", "input", " ", "for", " ", 
    SuperscriptBox["sin", "2"], 
    RowBox[{
     FractionBox["\[Pi]", "3"], ".", " ", "is"}], " ", 
    SuperscriptBox["sin", "2"], " ", "a", " ", 
    RowBox[{"function", "?"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.641997458089794*^9, 3.6419975267588177`*^9}, {
  3.643649148732598*^9, 
  3.6436491697506866`*^9}},ExpressionUUID->"b67c3024-746b-4f8e-9b09-\
fa1553eb9949"],

Cell[BoxData[
 SuperscriptBox["Sin", 
  RowBox[{"2", "[", 
   FractionBox["\[Pi]", "3"], "]"}]]], "Output",
 CellChangeTimes->{3.648416870320227*^9, 3.6484169009023323`*^9, 
  3.6484171585425687`*^9, 
  3.6484173229795756`*^9},ExpressionUUID->"261a9c93-02a6-4987-b32f-\
363e0d8a5ca8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["Sin", "2"], "[", 
  FractionBox["\[Pi]", "3"], "]"}]], "Input",
 CellChangeTimes->{{3.643649127964376*^9, 
  3.6436491368092985`*^9}},ExpressionUUID->"76c5d225-0256-4558-8dc7-\
2c0139e1d5f4"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["Sin", "2"], "[", 
  FractionBox["\[Pi]", "3"], "]"}]], "Output",
 CellChangeTimes->{3.6484168703671045`*^9, 3.648416900933589*^9, 
  3.648417158573819*^9, 
  3.648417323010756*^9},ExpressionUUID->"47b3835d-4fad-49d7-8fbe-\
0be765a62cec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"Pi", "/", "3"}], "]"}], "^", "2", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"correct", " ", "input", " ", "for", " ", 
    SuperscriptBox["sin", "2"], 
    FractionBox["\[Pi]", "3"]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.641997426381296*^9, 3.6419974353200135`*^9}, {
  3.6419975418083696`*^9, 
  3.641997545809164*^9}},ExpressionUUID->"41e2372c-0423-45ba-ab81-\
9254e584fb50"],

Cell[BoxData[
 FractionBox["3", "4"]], "Output",
 CellChangeTimes->{3.6419974388361254`*^9, 3.6484168704296083`*^9, 
  3.6484169009492073`*^9, 3.6484171586050687`*^9, 
  3.648417323042005*^9},ExpressionUUID->"92a5b2eb-736f-4d90-8cce-\
0c47c9e2845d"]
}, Open  ]],

Cell["\<\
Never use square brackets [ ] and curly braces { } to control the order of \
computation in an algebraic expression as we do manually in algebra. Use only \
parentheses ( ) for the purpose.\
\>", "Text",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{{3.642025158664645*^9, 3.6420252387176676`*^9}, {
   3.642025273195607*^9, 3.642025303248114*^9}, {3.6420254014400034`*^9, 
   3.6420254374799128`*^9}, 3.6424585597567368`*^9, 
   3.648298366946018*^9},ExpressionUUID->"d40bc195-0606-4f77-a735-\
6e4acc4e7fe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", 
  RowBox[{"{", 
   RowBox[{"2", "-", 
    RowBox[{"5", " ", "[", 
     RowBox[{"6", "-", 
      RowBox[{"4", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "5"}]}], ")"}]}]}], "]"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"incorrect", " ", "usge", " ", 
    RowBox[{"of", " ", "[", " ", "]"}], " ", "and", " ", 
    RowBox[{"{", " ", "}"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.642025027238352*^9, 
  3.642025128018806*^9}},ExpressionUUID->"648477b7-98dd-4ab7-9e29-\
1ec37b943c82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"2", "-", 
     RowBox[{"5", "[", 
      RowBox[{"-", "62"}], "]"}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.642025101297248*^9, 3.6484168704764767`*^9, 
  3.6484169009648333`*^9, 3.648417158636325*^9, 
  3.6484173230888805`*^9},ExpressionUUID->"f8827e9e-b932-4ae9-99f3-\
62ba4786b57b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", 
  RowBox[{"(", 
   RowBox[{"2", "-", 
    RowBox[{"5", " ", 
     RowBox[{"(", 
      RowBox[{"6", "-", 
       RowBox[{"4", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"3", " ", "5"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.6420253142031918`*^9, 
  3.6420253230171275`*^9}},ExpressionUUID->"95f24f4c-8373-42ca-b151-\
77d894025fa7"],

Cell[BoxData["624"], "Output",
 CellChangeTimes->{3.6420253236420484`*^9, 3.6484168705389767`*^9, 
  3.6484169009960823`*^9, 3.64841715866757*^9, 
  3.6484173231201296`*^9},ExpressionUUID->"d4f426f2-3606-4ad8-9f10-\
72e1f34a82c3"]
}, Open  ]],

Cell[TextData[{
 "Now, we are to see how to use { }. It is used to create an object called a \
list. For example, 1, 2, 3, 4, and 5 are five individual objects, but the \
list {1, 2, 3, 4, 5} is just one object with five elements. We can put \
various types of objects into a list. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], "}"}], 
   TraditionalForm]],ExpressionUUID->"48356372-e5c7-402b-bb5a-1ca1d9b66dd1"],
 ", {Sin, \[Pi], 1, 2}, and {{i, 10}, 1, 100, 2} are each a list.\n\nLists \
are a powerful mechanism of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". If using them properly, we can use less code to do more things \
efficiently.",
 " ",
 "We will study how to construct and manipulate lists in detail in Unit 3."
}], "Text",
 CellChangeTimes->{{3.6419968445205555`*^9, 3.641997019546519*^9}, {
   3.641998182406371*^9, 3.6419982274126315`*^9}, {3.6419983412737894`*^9, 
   3.641998342836527*^9}, {3.642069825604042*^9, 3.642069825916785*^9}, {
   3.642070200401657*^9, 3.642070207124021*^9}, {3.642286666113826*^9, 
   3.6422866666607113`*^9}, {3.6422867406905885`*^9, 3.642286860587555*^9}, {
   3.642286986984352*^9, 3.642287015614442*^9}, {3.6422871286202545`*^9, 
   3.6422871296046305`*^9}, {3.6422871710968*^9, 3.642287265191506*^9}, {
   3.6422873059951105`*^9, 3.6422873255465236`*^9}, {3.6422883903836527`*^9, 
   3.6422884850744247`*^9}, 3.642458542028777*^9, {3.6436623279715595`*^9, 
   3.6436623415633593`*^9}, {3.64366237461409*^9, 3.643662390627955*^9}, 
   3.6436624247808113`*^9, {3.6436624827149544`*^9, 3.64366248650716*^9}, {
   3.6436625561369324`*^9, 3.6436625587390757`*^9}, {3.6436626088217883`*^9, 
   3.643662610282871*^9}, {3.643662654235251*^9, 3.6436628864018555`*^9}, {
   3.6436629192606363`*^9, 3.6436631283299866`*^9}, {3.6436632367628717`*^9, 
   3.6436633091958027`*^9}, 3.6436634226189528`*^9, {3.648298370056011*^9, 
   3.648298383028922*^9}},ExpressionUUID->"0b3e1a71-a81f-4269-8788-\
8864125efcf8"],

Cell[TextData[{
 "In some cases, we have to use a list. For example, the built-in function \
Plot draws the graph of a single-variable function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "7a6bb171-ed81-43c3-866b-45a30196d839"],
 " in Cartesian coordinate system.",
 " ",
 "The basic usage is shown below."
}], "Text",
 CellChangeTimes->{
  3.6436625640063615`*^9, {3.6436634466172576`*^9, 3.643663453960656*^9}, {
   3.6482983854979825`*^9, 
   3.6482983883111067`*^9}},ExpressionUUID->"37de2854-27f6-4b66-8054-\
b9338abcd60b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6422880785735173`*^9, 3.6422880905597486`*^9}, {
  3.6422881513156447`*^9, 3.642288151518756*^9}, {3.6449164394751463`*^9, 
  3.644916480500471*^9}},ExpressionUUID->"3d3f630d-cc2a-444b-9c23-\
9d77a10094cf"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
aKRF3Ork7f7jIUd7tKyDtPX66ymDajzU3dgtPUY6q0me6rKJh0mHys9Pk14Y
WFI3uYaHEzdiimZJ22k5nPOW5WGEuP0qHul85qLJOZI8TO6U9xsiLf06MyBw
Lvk+plWMWtKXzE8uXzzDRbbBjdOppEtEZj9GTnIxVW1roz/plbkJWquYXPzL
Hjc1I+3meKj6bS9pifaGJaQr5UZsNrdz8a0r2/oX+f4KNREjaQ1c/PLCkuFD
2stHy2/3Ty7ueyjtp0y6dkeXTFEJF9u/7V9dScZ3U1/AO718LpaemFN8hrTP
c5XdP9O5GFvvfIlJ5qfFsL7C7CMXnx74sNKNtJrgulXLay6uN6yrY5L5fZCy
imHzgotGPImQs6Q7z5be7nvKJfPy8NgPsj52yThKOj3gYqG949otpPuvZ+24
cY2LnoXSDXVcsh42W32bvUK+/33tXFnSke2zxwLOc1HH+8lbC7IeD+gY3Qi3
4KLPqYcRmZNkfhd04+cdXNz6xrlPdIzMb8EDM43NXPzEsZMSIfvDwmVrT74i
F20zbh3kkf0k3Og1t2IxF0c0DBoqyH6zi5E83M3iYI2RnJtgkMyPSXanQz8H
FcUITsYAmZ85p1yJDg5u2+sfdJbs55IL78MFVRwUtrja/Jrsd0W1va3Lkjlo
+sxSLqeDnE/mQ5Gqbzk4fMVtG7WdjLdHxFH9VxyMC/e+VdJKYE0es8rzEQcz
QusLUsn5c1MnFhsvc/CU7TZCpY7Ad+cOeTPOcVDK0qra6xeZn/vsPSLWHNwY
GdZfUE3gxh9HMtSNOcgK7Py59QeBjeazCWEqHGRc3e2cUULgrEeybdJ6Dl5L
kt5OI+fh5ufHV5fIk+8XG77jexGZz7bU56PiHGyfuDaeT87TrfZng0yZbJw3
WnTzYAaBAZ7FLhIpbPzCP7+UGUdg+vMrKkrv2Vh3J4Vyl5zv7V9WDO2NZWPN
gv/U578icMfMVbsrT9hYeuG261xyP/wNWHusypmNVSPipxMekfPgxT3NoG1s
fM0ueeLsSc6b/AOic9MnsfyhuJaOLoHJobk/3D9M4hc5zw3PyP3m5KAc0hU3
ia8PqC3v1CKQuXSRXOGTSVzj27PyOLkfR1wb1TycJrHTPz2zYz3Z/0rnrLs3
TuKnQI7qPnLfzgn3ySyKnUC/yJ4MiwIWljqOealETiA17f5QUC4L/an2+6Ie
T2DZcX+TvAwWirIOVnp6T+CCBetSuR/I/W4o+VfFagJzHh/olYxgocRszIJX
SyfQKdnW8eVlFspd/mp7PXgcS0W7vddJszCqokJ/kf84PvU1kLURZ+FKpaYt
b2+NY0Gisl3IXNJdI5M1l8bRqadSsp3PxOXHlYKUDMdRdZsIV7KHiUt0QzN+
i44ju3vcZTidieJyF4U17o5hohdH6rYhE2d+SL8buTqK1kv+bXA/y0CzF0rZ
spdG0S4t+oMqef5LOK9Zts9uFC8mRZ3sMWPgIYpdX7D5KCqtsj28R5eBkTvT
Nyirj6Ks0+vPIRsYuPW1yXvbiRHMrw/oFgwOo7VncGL9tRG83Uyh1JLnU3cQ
t3DksLDuwcOT1VZ01NPF++f6Wdj6t7Rf0YyOyw665Z7+zcLTvPtCLgfpmHek
ZaV5Jgv/TUXRx9TpKDid0KXpQl6fd77ljTgd/b21XcQHmHi7SP9ZbMEQRn5x
CkptYmBQmP7DjbJDmKdeTZvMpuOp3eO9q3IHMFXqe5psYT8uYs/75fq3F901
Xwrvc+nGTvPzyvecu1Dz/hmDwUvt6F178Jn6nTYkHARP7z5sxOZ+4zcVqo14
79srTeCWo7z4jU1ujeXY9FX7W5JwGhY1iV+YoaThGRX9aYvQFHCstVmdGpwC
XQYnjjnHVkCfjIL2u+sVMJEKqcu1GsF2Y8Z6/b4GaH232nm0th0kf8R91Ght
g1vOXw2OxXXDqxtq2aWRXXDi9bbj0Y/7YUfI2xPWX3vhwoPKOX9r6bD7sVSP
UuUAWEtezq38RweTuNL8yoYBMHsu7pQ1QoefxNHPFzoHQDvR5Hfg4mGoFjxt
eTI+ANLlvxM1TIdBJ8x45vmqQSic220c9GsYlDfb7X/kOghLAviRO2sYYBxj
39wjNQSl/lu2BP9kweJKS78GHTpozka8Vmpjwd4c4aivh+iQcYOyrJjOAvXO
C1djjtIh3vk3hT2fgOi2Tssj5+ngd+Ju0xkDAq4N1xXbP6TDfpUGX/UyAvyO
hOjbVdPhn+NepytnRsDNVlAbaj4M8olj7zUvjsCuwKV9n62G4URvYtc8lxG4
H6ntVWo3DLU20sfj74xAX7rokja3YaAdHdBpjhmBsAEZxtewYYjbGyqr0z4C
zb/yr++vGwYbqb6SJSdHYfcBHXlLQwaIRDVOPLIdhfjCtl/aZgxIWvtNSfjS
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->200,
  PlotRange->
   NCache[{{-Pi, Pi}, {-0.9999998782112116, 
     0.9999998592131705}}, {{-3.141592653589793, 
    3.141592653589793}, {-0.9999998782112116, 0.9999998592131705}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.641998383685559*^9, 3.642288161270305*^9, {3.644916454105502*^9, 
   3.6449164809447308`*^9}, 3.648416870601478*^9, 3.6484169010117764`*^9, 
   3.648417158698818*^9, 
   3.64841732315138*^9},ExpressionUUID->"0ed8cd0d-3ebf-46cf-aeab-\
3d2221ce9e56"]
}, Open  ]],

Cell["\<\
But how to plot the graphs of multiple functions on one figure? We will have \
to put all these functions into a list as follows.\
\>", "Text",
 CellChangeTimes->{{3.642287341565618*^9, 3.6422874174231873`*^9}, {
   3.6422885218025913`*^9, 3.6422885476821957`*^9}, {3.6436634989130926`*^9, 
   3.643663499160108*^9}, 
   3.6482983908274035`*^9},ExpressionUUID->"56597214-9e1a-45c1-aa50-\
d990f803e8ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", "1"}], ",", 
      RowBox[{"E", "^", "x"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"PlotLegend", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", "1"}], ",", 
      RowBox[{"E", "^", "x"}]}], "}"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{
  3.641998407737544*^9, {3.6419984615761952`*^9, 3.641998500097375*^9}, 
   3.6422874235178757`*^9, {3.642288106733303*^9, 3.642288114325308*^9}, 
   3.6422881568635035`*^9, {3.644916461246821*^9, 3.644916474980855*^9}, {
   3.645540482520585*^9, 3.645540594176469*^9}, {3.6455406477146716`*^9, 
   3.6455406527779245`*^9}, {3.64554068415702*^9, 
   3.645540696955559*^9}},ExpressionUUID->"4b19003e-11b8-43a3-8e8a-\
86754b3c6665"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwt2Xk0VP/7APARSiVCpaKiRSlJ0fJBPSMSUZakkhSpKCFLqVRIilSWqGQp
KUXZt4RnkFDIFrKVnTEz1zqbwe/+zvn+Nef1xz333md93zOKdi7m5+dQKJRU
IQrl/38PGUroTinOpwW/0K/p2elbpJXtPSK2ej4tMad5XD78DKooDscsWzmf
FhaRpdcY5oISvHLudun5tE0fi2/Gh93Fug++KQ5z5tOCfF9XHQ17iifEJlc0
dYvR7h9YZHEsNA4vlreNpL0Vo+1EfuGNx6nof+Bj7IUNYjS1pR/1Vt1BvNrI
lw6XmUfzLyg8sOBALf44vXKwV2Yu7cv1Uo2CP804XZSUprlClKaUvPqXAaMT
ezJGQ83mi9D6+v+cLBPrwV1v5jY+XihMU5iXJHRIqh+119arPuIK0fju5TuT
uYP4WmahxtEJIZrrtbx1O4WHUFhU7z+5ESFaqs+iVXmLhvDHQLZu8oAQrf6s
htLHtUN44vPLEz+bhGj7h5bp7DYeQo89tn4Ls4VodhfjlwjFDuGnIyO/H10V
oh3+0+y5W5uO8rckbgfTKbSkZYM1z+2G0THhh2xMP4WWP3tqzZdLw5hTHZDx
uZtCC7MPr25wG0YzhdmBmlYKLdfomtak3zAGlBHmUj8pNPUjQUqD8cNISNZt
ikym0NLObXgU3DWMJQnhjXFOFNrySIsrJScZKFlj4pLmQKElFM+pXGjLQGvO
wgXF9hSaUXur/hEHBnIM/aHbmkJzaxCOL7rGQBXCI2n9YQrtcYbbO+NwBkb8
Z+nzcSuF9kNP4qz8TwbWRm8/caFjFu8fQ/adnUykJLhEdjTO4lX2uiB3bSaq
JX9utKiaRa+1alVndJkY8kXZTPfrLKq8OWuxxoyJpk2KhxRezuKu+NB9mk5M
rJWU1m61mMWiPd7VHa9J+42tOVI1g5KXNZk1wiykBKnZlJXOoHVvc0b2fBaq
hTpHa3+dwQf2uYxwSRaGxNGXb0mawcFToTm75FhoWtAtJfZwBo9nPfJYuoOF
tZP1wiW6M/iv1FVtlw0LfzlkDuz8Oo0Ofo5/eaksrP/LMd2XOY0dGfLnbmax
sMlSO18/eRo9d1cbjuexsF2vLPj4q2l8HJ2nVVPMQrpC8/Ybt6ax8+C68E0N
LBT5w79VoDWNYtN1is4TLBQzhb5v6tMoH+Vk4cFl4cLye0eqt0xjaZ7yHzcB
C6WzxRU75aYxGGR/nxAhcE3o6u+zUwLcF+J9q0KGQE3D/Yt1CwS4Kzk6Zed2
AvfRAm4YZQmw82dmCE2DQJ3dP7uPfhKgnxA/W3cPgQYbLLLtowWYV/vy+w4g
8JjQBasAbwEZt72DmcYEun4JTKjUFiCLsdxD5wKBHmo1i+o1BFjh2bje1JHA
64nS11tVBMgszll43InAOxGvDIflBUiIjnoddiPw0dXPLPHpKXyxLqOg/TaB
75Xr9pgWTuGpbS5G/uEEOmxML/bJnsJRw/gt8yMJ3Lwh9FD65yk0YFDuB7wg
MEXBzFo6dgqZMj2vL8UQmCtbd7fxzhRO+EheaXlP4M2l6WKi16fQvPPCXMWP
BGrLhIbudJlCcbHTS+ySCaRJmL2NPDOFrfeFgqtTCawQrft+gjqF3w+FtRnm
ERgknG4SuGcKt0ZqLrTMJ9BYKLTli9oUFlIckq0KCKwTmNJXKk5hfdhFrcM0
AlvHaxd1CE2h/e6J4OZyAoe7ai1sS/mosUb4mc9v8nn/pnWEfuXjZgfNSJlm
Mn4dIRdKMvmYE75qTlwLgRMtpl7rEviYdtN1aVwbgYJfta/6/PmIyk4Kel0E
FlWnrV92m4/vfFdciOom0OdnyGd9Tz6qRWRKD/UQKFpuionn+cgoco1z6SdQ
oqi221Gfj1m7Ku4oDhNY+zXtctQ+Pt7782Bck0Fg2JeQiR+7+Lh0ZLDKmEng
smzTuSob+Zi+P/jTSYLAlgy1p9Zr+KjgZJZhMUJgVNri5Y9l+ajZWyhnMErW
16daZdY8Pv55/H758nECuz+mZaym8HFENSt5gnRCYoiWCZeH49OP3lROELjp
renhtEEeVvNqs6zZBNJfqzX9+8fDhSs761ZyCPwUu/iM1B8eLjWZNK0jrRZV
6+pWyUPT3xEeG3kEPjS+NodH42GwSJdpI+l/M3LP7ubxsONDs4YXn8A96cUb
5qbxMKTCSEFmisCn5y7mBifycBtLSuYd6f6liwxl4nh4f5PQIlUBWf8VGa0v
I3mYvWB8UQpplsrM9Pv7PJz+YLY+fJpA/b9vn269zcPDinf+45KODTVUzPLg
oeCLyjGLGQLZukSGphMPj0frXk8kfZj9TK/4HA93XUuOGyWd8EGz6eApHs7e
MKnZMUvm0+rfxRpzHn62WSV8mbTFogCexSEeNpwR3RdF+hNuedSmw8N3e/l3
aKRF3Ork7f7jIUd7tKyDtPX66ymDajzU3dgtPUY6q0me6rKJh0mHys9Pk14Y
WFI3uYaHEzdiimZJ22k5nPOW5WGEuP0qHul85qLJOZI8TO6U9xsiLf06MyBw
Lvk+plWMWtKXzE8uXzzDRbbBjdOppEtEZj9GTnIxVW1roz/plbkJWquYXPzL
Hjc1I+3meKj6bS9pifaGJaQr5UZsNrdz8a0r2/oX+f4KNREjaQ1c/PLCkuFD
2stHy2/3Ty7ueyjtp0y6dkeXTFEJF9u/7V9dScZ3U1/AO718LpaemFN8hrTP
c5XdP9O5GFvvfIlJ5qfFsL7C7CMXnx74sNKNtJrgulXLay6uN6yrY5L5fZCy
imHzgotGPImQs6Q7z5be7nvKJfPy8NgPsj52yThKOj3gYqG949otpPuvZ+24
cY2LnoXSDXVcsh42W32bvUK+/33tXFnSke2zxwLOc1HH+8lbC7IeD+gY3Qi3
4KLPqYcRmZNkfhd04+cdXNz6xrlPdIzMb8EDM43NXPzEsZMSIfvDwmVrT74i
F20zbh3kkf0k3Og1t2IxF0c0DBoqyH6zi5E83M3iYI2RnJtgkMyPSXanQz8H
FcUITsYAmZ85p1yJDg5u2+sfdJbs55IL78MFVRwUtrja/Jrsd0W1va3Lkjlo
+sxSLqeDnE/mQ5Gqbzk4fMVtG7WdjLdHxFH9VxyMC/e+VdJKYE0es8rzEQcz
QusLUsn5c1MnFhsvc/CU7TZCpY7Ad+cOeTPOcVDK0qra6xeZn/vsPSLWHNwY
GdZfUE3gxh9HMtSNOcgK7Py59QeBjeazCWEqHGRc3e2cUULgrEeybdJ6Dl5L
kt5OI+fh5ufHV5fIk+8XG77jexGZz7bU56PiHGyfuDaeT87TrfZng0yZbJw3
WnTzYAaBAZ7FLhIpbPzCP7+UGUdg+vMrKkrv2Vh3J4Vyl5zv7V9WDO2NZWPN
gv/U578icMfMVbsrT9hYeuG261xyP/wNWHusypmNVSPipxMekfPgxT3NoG1s
fM0ueeLsSc6b/AOic9MnsfyhuJaOLoHJobk/3D9M4hc5zw3PyP3m5KAc0hU3
ia8PqC3v1CKQuXSRXOGTSVzj27PyOLkfR1wb1TycJrHTPz2zYz3Z/0rnrLs3
TuKnQI7qPnLfzgn3ySyKnUC/yJ4MiwIWljqOealETiA17f5QUC4L/an2+6Ie
T2DZcX+TvAwWirIOVnp6T+CCBetSuR/I/W4o+VfFagJzHh/olYxgocRszIJX
SyfQKdnW8eVlFspd/mp7PXgcS0W7vddJszCqokJ/kf84PvU1kLURZ+FKpaYt
b2+NY0Gisl3IXNJdI5M1l8bRqadSsp3PxOXHlYKUDMdRdZsIV7KHiUt0QzN+
i44ju3vcZTidieJyF4U17o5hohdH6rYhE2d+SL8buTqK1kv+bXA/y0CzF0rZ
spdG0S4t+oMqef5LOK9Zts9uFC8mRZ3sMWPgIYpdX7D5KCqtsj28R5eBkTvT
Nyirj6Ks0+vPIRsYuPW1yXvbiRHMrw/oFgwOo7VncGL9tRG83Uyh1JLnU3cQ
t3DksLDuwcOT1VZ01NPF++f6Wdj6t7Rf0YyOyw665Z7+zcLTvPtCLgfpmHek
ZaV5Jgv/TUXRx9TpKDid0KXpQl6fd77ljTgd/b21XcQHmHi7SP9ZbMEQRn5x
CkptYmBQmP7DjbJDmKdeTZvMpuOp3eO9q3IHMFXqe5psYT8uYs/75fq3F901
Xwrvc+nGTvPzyvecu1Dz/hmDwUvt6F178Jn6nTYkHARP7z5sxOZ+4zcVqo14
79srTeCWo7z4jU1ujeXY9FX7W5JwGhY1iV+YoaThGRX9aYvQFHCstVmdGpwC
XQYnjjnHVkCfjIL2u+sVMJEKqcu1GsF2Y8Z6/b4GaH232nm0th0kf8R91Ght
g1vOXw2OxXXDqxtq2aWRXXDi9bbj0Y/7YUfI2xPWX3vhwoPKOX9r6bD7sVSP
UuUAWEtezq38RweTuNL8yoYBMHsu7pQ1QoefxNHPFzoHQDvR5Hfg4mGoFjxt
eTI+ANLlvxM1TIdBJ8x45vmqQSic220c9GsYlDfb7X/kOghLAviRO2sYYBxj
39wjNQSl/lu2BP9kweJKS78GHTpozka8Vmpjwd4c4aivh+iQcYOyrJjOAvXO
C1djjtIh3vk3hT2fgOi2Tssj5+ngd+Ju0xkDAq4N1xXbP6TDfpUGX/UyAvyO
hOjbVdPhn+NepytnRsDNVlAbaj4M8olj7zUvjsCuwKV9n62G4URvYtc8lxG4
H6ntVWo3DLU20sfj74xAX7rokja3YaAdHdBpjhmBsAEZxtewYYjbGyqr0z4C
zb/yr++vGwYbqb6SJSdHYfcBHXlLQwaIRDVOPLIdhfjCtl/aZgxIWvtNSfjS
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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw12Xk8VN8fMHDbzFzbXCFKUZYWS7L0jZB70qooS0qbKKFNKipbUVlCUpZs
yZZQobKFfC7ZKWsSEipbQrasc5/7e17PM//M6/3HnDmf5Zx77uvInrpkdoaH
i4vLj5uL63/few3Z2+dl+ckQ6v9+QDfHYwyT4SeZpg/Wz9FWkf39REKKn3wU
mpw4QFv6/pF9ChL85LDADsda2uzZyhl1UX4yrMk5MJE2Zbs5hWDzk3Xf0NxF
2mMNyebGAvxk/L/sgg20u/XEuI8x+cmG0u66Hg4FjaneGQ48/GTvu1a1ANql
4mPHrnEwkr3xZd9a2m+8rPjvzmEkMnIdyVukIGm4LvfhNEaKiB3Zs5V2mKWu
7dNxjMw/fnYyd4ECn7K0Ja9GMHJZe824Au1rasugYAgj48QStvvNU2CJTS1v
7cXIZNE93+gAwdD5dOWPLoxMkXFc6zBLgU53o/Pfdowkr74tjZmhYGV+Rr1Q
M0a2VZ6Z+j5NgbCCtKdUPUZeq9IPGpuigPMgUGl9LUaaLMWvT03S8dk7+Gz/
gJF2rUGGneN0fM2tGqaAkQWM9+rFf+n4iJ3dVoUYafVv0DFsjIJkSTldt7cY
ebvFalB6hAL7yo6xrCSMDDl8sD95gJ6v5t644qf0/0VN31Lsp2DP0/x9dTEY
Od243inxFwVK18NT+kMxcv/LIsvLvRSMrD1wXOYuRlbceW9xp4OC74/e86t4
YaTMiv6c9K8UNHCU87Z4YKS106BTxRc6v62YqIUzRpqFm822N9P58i2tDLTF
SP//jG1u1NLzGVdzibLGSEtTeGZQTc/H6qnc8+MYqW2GGXJX0vna7OFZehAj
V/eaZxwrpWDx13+aszswur49vD75FNzdmRZntwYjj1cn2aYnUkAGupmsksVI
bMu11e5PKVho3MfTthIjnbiVturHUnDVauSMoThGtnz9ExsTTsGp65obVHgx
cs6+RuStHwVE2vvCv90s0oj33SuLsxS4jQZfTO9kkavjdo0anaEg9z/rVafb
WOSO4iOJm20oUC3ludNSzyLbfUpseizpenbs3ptXzCLbJnfZh+2mYE6oqc0j
lkVmvDj6/LIcBZvNkwL+i2SRQ/7cESHSFFyJctYbCWWRk6lvBBKXUTC4RjL+
ZCCLPCXYGRjLpqBN/7i9gRuL9PJ8v3RslgO5Tn1TLEt6fIHfj0U/ceByy5xo
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
/+9+Af3/+4X/A8MfRvo=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAASkkOQ/shCcBh4/KqIiCmPzu1fPAI
HgnAfNQTmg8rpj8sIeudFhoJwOUFU+4BNqY/DvnH+DESCcBzctXQ9kumP9Go
ga5oAgnArj/VyCF4pj9YCPUZ1uIIwGsUceB+0aY/Z8fb8LCjCMB3uhPSaIin
P4RFqZ5mJQjARWamYZkHqT9x1PoSkxMHwKGD+o48nKw/yl0a6OQTBsAve3B1
EzWwP/2+qrA6GQXAefTFlElRsj/jsvGRUQkEwApKGsMZ67Q/NqEG1I0LA8AD
8IMYga23Pzwi0i6L+AHAZdU1TaMUuz8cew59jOoAwDExS8SS5b4/0JwxWGbd
/7/M2RNJSXjBP89os+c1u/2/nVZ35z32wz+mKdE4UL37v6WOzMiwm8Y/MJrQ
cHLJ+b/VlA7d6YrJPyEwPdoWq/e/kavgIK4ozT/qukUFBrH1v3uZNicsf9A/
G2u7YXeM87/jqe0lYtzSP/7KEqXwcfG/aNx0rdKC1T9zPwxUaffuv532sCYw
Udg/uDPNwPW16r8ZvkzQpcbbP68RxrAXvea/8UiZOGhy3z9zOpkDPm/ivy/R
4JS0/OE/OoVfSOhq3L9pVSC3wIbkP+9o/I9/iNS/hQSnpqs35z+DxJs6P/jH
v8da7HoDieo/1rs8xKoDsL/F1hnAPQ/uP18sRv1Uka4/6hU+Lf378D/hSFhV
bp7IPz1XyjuqZPM/9K8/rxg71D9U4hhpzPL1P9qlHm7x0Nw/txusa24Z+T97
brtIVZ/iP0wMK0Pkofw/WKAvV5yN5j+GO7j58y8AQGaHyQLf0Oo/3bh3RW1+
AkDDhCsrjMvuP/VUBsBS8QRAXhHlwhRZ8T+G+5voYKgHQPM6xz7hdvM/pesE
puIAC0Cvbw35YnD1P5jq6NHqjA5ABH/mgWKU9z9XD7PLPnYRQIGZI0kXlPk/
KauWkhbJE0BLBH8pxIn7P9uqtDAMXRZArklt2O6p/T/nVe/KeYoZQDiav8XO
pf8/EOTU+5rpHECuYtJAFuYAQNEwZvoFiSBAZiBUK0H0AUBF/3nr8N0iQMmT
CLsnFQJAetzDUoIwI0B2VpZV
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->200,
  PlotRange->
   NCache[{{-Pi, Pi}, {-1.9999999999999751`, 
     9.594744287880747}}, {{-3.141592653589793, 
    3.141592653589793}, {-1.9999999999999751`, 9.594744287880747}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.64199840037642*^9, 3.641998408362767*^9}, 
   3.6422881635519667`*^9, {3.644916464558728*^9, 3.644916475688397*^9}, {
   3.6455405961298914`*^9, 3.645540599380167*^9}, 3.645540656231573*^9, 
   3.645540698315155*^9, 3.6484168707108545`*^9, 3.648416901058584*^9, 
   3.6484171587456937`*^9, 
   3.6484173231826305`*^9},ExpressionUUID->"0c627715-4148-45c9-a76a-\
e370127e3db2"]
}, Open  ]],

Cell["\<\
Similarly, the built-in functions Solve and NSolve are each used to solve an \
equation. To solve a system of equations, we need to place all the equations \
in a list.\
\>", "Text",
 CellChangeTimes->{
  3.64199940671272*^9, {3.6422875415690603`*^9, 3.642287560791247*^9}, 
   3.642287649214253*^9, {3.642287702426675*^9, 3.642287705661584*^9}, {
   3.642287767109807*^9, 3.642287795082873*^9}, {3.6422878274480557`*^9, 
   3.6422879365754156`*^9}, {3.6422879908660803`*^9, 
   3.6422880091195517`*^9}, {3.642288182476204*^9, 3.642288235499154*^9}, {
   3.6422887146604614`*^9, 3.6422887465090566`*^9}, {3.6422888294582434`*^9, 
   3.6422888662141347`*^9}, {3.643663525232524*^9, 3.643663557921298*^9}, 
   3.6482983929372163`*^9},ExpressionUUID->"cbaccbae-a766-47e0-8bc4-\
dda321fa318a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "remove", " ", "x", " ", "from", " ", "Mathematica", " ", "workspace", " ",
     "to", " ", "guarantee", " ", "that", " ", "x", " ", "is", " ", "a", " ", 
    "symbol", " ", "without", " ", "a", " ", "value", " ", "assigned", " ", 
    "to", " ", "it"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"x", "^", "3"}]}], "-", 
     RowBox[{"3", "x"}], "+", "4"}], "\[Equal]", "0."}], ",", "x"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6419985309145455`*^9, 3.6419985338680286`*^9}, {
   3.6419986184515796`*^9, 3.6419986561750965`*^9}, {3.6419987567821255`*^9, 
   3.6419987671430464`*^9}, {3.642287610425238*^9, 3.642287616941907*^9}, {
   3.642288040187339*^9, 3.6422880625242777`*^9}, 3.6422880953103523`*^9, {
   3.6422882615662823`*^9, 3.642288262081829*^9}, {3.648417254869939*^9, 
   3.64841725666727*^9}, {3.6484173023336983`*^9, 
   3.648417303052523*^9}},ExpressionUUID->"603c1816-797b-49e9-8b26-\
8ebb61f2811f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.6474266573202556`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.8237133286601278`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.73178613230714`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.8237133286601278`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.73178613230714`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6419986231239324`*^9, 3.641998652783923*^9}, {
   3.642287611253298*^9, 3.64228761730128*^9}, {3.6422882648321476`*^9, 
   3.642288274381053*^9}, 3.6484168707264786`*^9, 3.6484169010898323`*^9, 
   3.6484171587769437`*^9, 
   3.6484173232138805`*^9},ExpressionUUID->"74151a3a-c3af-4324-9f82-\
567364450034"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"2", "x"}], "+", 
        RowBox[{"3", "y"}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"x", "-", "y"}], "\[Equal]", "5"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.641998728388026*^9, 3.641998728388026*^9}, {
   3.6419987754410276`*^9, 3.6419987874423895`*^9}, {3.642288024825073*^9, 
   3.6422880465946255`*^9}, 3.6422882689579782`*^9, {3.6484172126595616`*^9, 
   3.64841721550357*^9}},ExpressionUUID->"a8768c8f-26d1-4e58-8366-\
7bdb72b579f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "3.0000000000000004`"}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "2.`"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6419987295286484`*^9, 3.642288025434904*^9, {3.642288269661023*^9, 
   3.642288276631304*^9}, 3.6484168707889824`*^9, 3.648416901136709*^9, 
   3.6484171588081937`*^9, 3.64841721662916*^9, 
   3.6484173232451305`*^9},ExpressionUUID->"c7af6f3e-3a22-4478-b7a3-\
87e42337bdfe"]
}, Open  ]],

Cell["\<\
All built-in functions and names of a constant, an option of a function or \
value of an option, such as Sin, Cos, Log, Tan, E (natural base, about \
2.71828), Pi, Filling, Green, etc., each start with a capital letter. If a \
built-in name contains multiple English \[OpenCurlyDoubleQuote]words\
\[CloseCurlyDoubleQuote], then, each word must start with a capital letter, \
such as ArcSin, PlotRange, FillingStyle, and so on.\
\>", "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.640394289749876*^9, 3.640394462459027*^9}, {
   3.6403945006876745`*^9, 3.640394954782468*^9}, {3.6403950167391014`*^9, 
   3.6403951307739935`*^9}, {3.640395211170255*^9, 3.6403952260183372`*^9}, {
   3.640395456584137*^9, 3.6403954885989556`*^9}, {3.640395529034995*^9, 
   3.6403955412891626`*^9}, {3.6404021576619177`*^9, 
   3.6404021834781885`*^9}, {3.640402256910195*^9, 3.6404022862698627`*^9}, 
   3.6404023741924515`*^9, {3.640504362258086*^9, 3.6405043629612093`*^9}, {
   3.6405044528723445`*^9, 3.64050445454436*^9}, {3.640504661013895*^9, 
   3.6405046954087677`*^9}, {3.640504729005887*^9, 3.640504737756777*^9}, {
   3.641997800814647*^9, 3.6419978098314447`*^9}, {3.6419978678253837`*^9, 
   3.6419978978617663`*^9}, 3.642000274085513*^9, {3.6420036733866577`*^9, 
   3.642003690406101*^9}, {3.642011134273291*^9, 3.642011193521343*^9}, 
   3.642284831185636*^9, {3.642285167722847*^9, 3.6422851860712423`*^9}, 
   3.6424585641789746`*^9, 
   3.6482983952816234`*^9},ExpressionUUID->"d8342db0-cddc-4134-9ecb-\
4434d7d8b253"],

Cell[TextData[{
 "Some basic mathematical functions\n",
 Cell[BoxData[
  ButtonBox["Abs",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Abs"]],ExpressionUUID->
  "d7785563-b7f0-4aeb-9502-06c9e02207af"],
 "\n",
 Cell[BoxData[
  ButtonBox["Sqrt",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sqrt"]],ExpressionUUID->
  "f401030c-f939-4262-b201-744fea59fb8b"],
 ", the name for ",
 Cell[BoxData[
  FormBox[
   SqrtBox["x"], TraditionalForm]],ExpressionUUID->
  "f361367b-b1cf-44a6-bfb7-9b88e3ae8cdd"],
 "\n",
 Cell[BoxData[
  ButtonBox["Sin",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sin"]],ExpressionUUID->
  "9da2907a-2992-4599-933d-e96383d6deba"],
 ", ",
 Cell[BoxData[
  ButtonBox["Cos",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Cos"]],ExpressionUUID->
  "eb5ab7ab-58fa-4ab6-970d-1a2d79d72673"],
 ", ",
 Cell[BoxData[
  ButtonBox["Tan",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Tan"]],ExpressionUUID->
  "22a87060-ed95-4a64-81d0-89c719525ef2"],
 ", ",
 Cell[BoxData[
  ButtonBox["Cot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Cot"]],ExpressionUUID->
  "7fb51fc0-8c75-46f1-89fe-ead4f2619d85"],
 ",\n",
 Cell[BoxData[
  ButtonBox["ArcSin",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ArcSin"]],ExpressionUUID->
  "18d97e26-8803-470c-ac36-d83ee8e77050"],
 ", ",
 Cell[BoxData[
  ButtonBox["ArcCos",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ArcCos"]],ExpressionUUID->
  "d829c7d2-c1a3-468f-aaef-efc7714b3c53"],
 ", ",
 Cell[BoxData[
  ButtonBox["ArcTan",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ArcTan"]],ExpressionUUID->
  "8b98d9f4-75b3-47ab-bd91-b73b1741f9aa"],
 ", ",
 Cell[BoxData[
  ButtonBox["ArcCot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ArcCot"]],ExpressionUUID->
  "24e8ce87-ef38-488c-8ee7-6d1b9e073bd0"],
 "\n",
 Cell[BoxData[
  ButtonBox["Exp",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Exp"]],ExpressionUUID->
  "422d396f-52f9-4c2f-a729-f4c570453f31"],
 ", the name for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["E", "x"], TraditionalForm]],ExpressionUUID->
  "c03949ad-8d17-4ca4-8d75-1db6417616bd"],
 "\n",
 Cell[BoxData[
  ButtonBox["Log",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Log"]],ExpressionUUID->
  "1c25c23c-d9f7-4599-83ca-b16d01a3fe2b"],
 ", the name for natural logarithm; there is no Ln\n",
 Cell[BoxData[
  ButtonBox["Log10",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Log10"]],ExpressionUUID->
  "fc7d4ef7-49ed-469e-8bbc-5985dd4e2523"],
 ", the name for common logarithm ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "10"], "x"}], TraditionalForm]],ExpressionUUID->
  "07f7bfbc-a5a3-4f7d-9f63-8f8bfa76efac"],
 "\n",
 Cell[TextData[{
  StyleBox[ButtonBox["n ",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Factorial"],
   FontSlant->"Italic"],
  ButtonBox["!",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Factorial"]
 }], "SearchResultTitle",ExpressionUUID->
  "a8937903-f3ed-44ef-bd12-4c418683913b"],
 " or ",
 Cell[TextData[ButtonBox["Factorial",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Factorial"]], "SearchResultTitle",ExpressionUUID->
  "b58aca41-6fb9-4199-b7a5-12442ad141f6"]
}], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.6422848543776274`*^9, 3.6422849324858418`*^9}, {
   3.6422849920585356`*^9, 3.6422850369890785`*^9}, {3.6422850729199104`*^9, 
   3.642285085423357*^9}, {3.642285134090033*^9, 3.642285227641449*^9}, {
   3.642285296542963*^9, 3.642285313530545*^9}, {3.642285437727702*^9, 
   3.6422854883934135`*^9}, {3.642285679769602*^9, 3.642285716026059*^9}, {
   3.6422857574861135`*^9, 3.6422858305635643`*^9}, {3.6422861358828993`*^9, 
   3.6422861370547748`*^9}, {3.642286210101679*^9, 3.6422862652520037`*^9}, {
   3.643649255200386*^9, 3.6436494303922663`*^9}, {3.6436494745539856`*^9, 
   3.6436494900872655`*^9}, {3.6436495267323227`*^9, 3.6436495523603745`*^9}, 
   3.6436496837977686`*^9, {3.644442927143791*^9, 
   3.644443104768828*^9}},ExpressionUUID->"5c60a6b7-c011-40ac-9ad3-\
294f6652e1fc"],

Cell[TextData[StyleBox["Suppressing output of a command",
 FontWeight->"Bold"]], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{
  3.643649676546727*^9, {3.648298076428928*^9, 3.6482980781795006`*^9}, 
   3.648312569977747*^9},ExpressionUUID->"4eef409d-40d5-4dc3-8fd2-\
425bb1eb1878"],

Cell["\<\
If an assignment statement is followed by the semicolon \
\[OpenCurlyDoubleQuote];\[CloseCurlyDoubleQuote], no output is displayed. \
Usually, after debugging our code, we had better add semicolons to most \
assignment statements so as to keep our output clear and clean.\
\>", "Text",
 CellChangeTimes->{{3.6404016894313955`*^9, 3.640401717719968*^9}, {
   3.64040174892877*^9, 3.640401841150976*^9}, {3.640401881166791*^9, 
   3.6404018825910854`*^9}, {3.648298124439544*^9, 3.6482981365978904`*^9}, 
   3.648298186669438*^9},ExpressionUUID->"e99cb657-c655-46ab-92a1-\
6212e1b1db1e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", "5"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", "7"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6404018987376127`*^9, 
  3.6404019132480955`*^9}},ExpressionUUID->"fc0d22c4-854e-4346-ac30-\
214826505a70"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.6404019153684645`*^9, 3.648416870835854*^9, 
  3.648416901152334*^9, 3.648417158839445*^9, 
  3.6484173232763805`*^9},ExpressionUUID->"8618ef16-5e42-42b4-9bdd-\
61aed6bd0081"]
}, Open  ]],

Cell[TextData[Cell[TextData[ButtonBox["Wolfram Documentation (or \
Documentation Center)",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/menuitem/DocumentationCenter"]], "SearchResultTitle",
 FontWeight->
  "Bold",ExpressionUUID->"bd18de3b-64da-4bd4-981b-4d0f1748c1a3"]], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{
  3.643649734272295*^9, {3.644443251321084*^9, 3.644443253821514*^9}, {
   3.6728367838157005`*^9, 
   3.6728367943748894`*^9}},ExpressionUUID->"a55b1be7-0d25-4232-b9e3-\
3e091bdafa1a"],

Cell[TextData[{
 Cell[TextData[ButtonBox["Wolfram Documentation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/menuitem/DocumentationCenter"]], 
  "SearchResultTitle",ExpressionUUID->"81ab0c69-f625-4f89-879e-757cb6ac521c"],
 " is an off-line help system built in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". It provides various types of resources users may need. We can access it \
through the menu item, Help \[RightArrow] ",
 Cell[TextData[ButtonBox["Wolfram Documentation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/menuitem/DocumentationCenter"]], 
  "SearchResultTitle",ExpressionUUID->"d96e63f7-afdd-49a0-85db-0a1a52be86cb"],
 ".\n\nIn many cases, we have to explore the ",
 Cell[TextData[ButtonBox["Wolfram Documentation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/menuitem/DocumentationCenter"]], 
  "SearchResultTitle",ExpressionUUID->"bf69268c-1d9c-41ac-a2c6-3a586afb8a8c"],
 " for information about the usage of built-in functions. For a built-in \
function, there may be a number of examples. It is always an efficient way to \
study and follow good examples.\n\nTo find information on a built-in function \
or symbol, you can visit the ",
 Cell[TextData[ButtonBox["Wolfram Documentation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/menuitem/DocumentationCenter"]], 
  "SearchResultTitle",ExpressionUUID->"2a204818-9279-4e3d-9a77-2c5d83352702"],
 " and search for the name of the function or symbol. You may move the cursor \
to the name and press ",
 Cell[BoxData[
  FormBox[
   FrameBox["F1"], TraditionalForm]],ExpressionUUID->
  "16c3b426-c0e4-4d95-b1da-50fe75a2056a"],
 " key.\n"
}], "Text",
 CellChangeTimes->{{3.6420015440670147`*^9, 3.642001718358202*^9}, {
   3.6420018138088846`*^9, 3.6420018667540197`*^9}, {3.6420019660979424`*^9, 
   3.6420020508757935`*^9}, {3.642002083131363*^9, 3.6420023175869417`*^9}, {
   3.6420023762342215`*^9, 3.642002417192524*^9}, {3.6420024567367487`*^9, 
   3.642002469264454*^9}, {3.6420025228824725`*^9, 3.64200258266455*^9}, {
   3.642002645271802*^9, 3.6420028881874256`*^9}, 3.6420037663821383`*^9, {
   3.6420045213394136`*^9, 3.6420045213394136`*^9}, {3.642458648209527*^9, 
   3.6424586711587677`*^9}, 3.644443146462387*^9, {3.644443185983784*^9, 
   3.6444432267241163`*^9}, {3.644443268214684*^9, 3.6444432809195213`*^9}, {
   3.648298397859748*^9, 3.648298407736931*^9}, {3.6728368067269573`*^9, 
   3.672836861256691*^9}, {3.672836906233477*^9, 
   3.6728369118170867`*^9}},ExpressionUUID->"b6a86b39-327e-43ec-8fcf-\
544725629b8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some tricks, good and bad", "Subtitle",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6403961910494194`*^9, 3.640396217148923*^9}},
 CellTags->
  "Some tricks",ExpressionUUID->"e4f5f647-0186-4963-908a-66d08a0da254"],

Cell["\<\
The symbol % is reserved to referring the most recent result of calculation, \
and space between two symbols or between a symbol and a number stands for \
multiplication. They seem very good and kind. But both tend to be trouble \
makers.\
\>", "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.6403962374035254`*^9, 3.6403962857576156`*^9}, {
  3.640396328611617*^9, 3.6403963796392913`*^9}, {3.6403964522662373`*^9, 
  3.640396489352065*^9}, {3.6403965299998956`*^9, 3.64039654858186*^9}, {
  3.640399608948676*^9, 3.640399610286703*^9}, {3.6420029331336856`*^9, 
  3.64200301679414*^9}, {3.6424585767806582`*^9, 3.64245858368703*^9}, {
  3.6436667209132037`*^9, 3.6436667637419024`*^9}, {3.6482984110505915`*^9, 
  3.6482984143791113`*^9}},ExpressionUUID->"d165af80-4cb6-47d9-8430-\
5558aa7075f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", "4"}], ")"}], "/", "5"}]}]}]], "Input",
 CellChangeTimes->{{3.6403965578806753`*^9, 
  3.6403965919663334`*^9}},ExpressionUUID->"3783081c-b40d-4162-ba60-\
4efe7e7f5c3e"],

Cell[BoxData[
 FractionBox["3", "5"]], "Output",
 CellChangeTimes->{{3.6403965740250998`*^9, 3.640396608611071*^9}, 
   3.6484168708827333`*^9, 3.6484169011679573`*^9, 3.648417158855069*^9, 
   3.6484173233857555`*^9},ExpressionUUID->"feb96af1-82fa-4139-9376-\
1165e1bcab24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.640396576494034*^9, 
  3.6403966143466654`*^9}},ExpressionUUID->"0677ed08-244e-45c4-8636-\
26d1c2614325"],

Cell[BoxData["0.6`"], "Output",
 CellChangeTimes->{{3.640396577369031*^9, 3.640396615175314*^9}, 
   3.648416870945227*^9, 3.648416901199213*^9, 3.64841715888632*^9, 
   3.648417323432641*^9},ExpressionUUID->"fd408b02-2e03-4d56-8caa-\
3cc1de675bbf"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", "3"}], ";"}]}], "Input",
 CellChangeTimes->{{3.640396630459252*^9, 
  3.6403966667020607`*^9}},ExpressionUUID->"4bbbb209-846f-4a76-8991-\
e4f62260a47b"],

Cell[TextData[{
 "Variables ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "f8920a68-3386-428d-a545-181bc1fadac8"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "cebdf261-c41d-40a2-ae3b-b89bc91d4e7b"],
 " are assigned the values of 2 and 3, respectively."
}], "Text",
 CellChangeTimes->{{3.6403966826581373`*^9, 
  3.64039672391788*^9}},ExpressionUUID->"52912370-7f4b-43b5-b395-\
4495fdc9fb8c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "*", "y"}]], "Input",
 CellChangeTimes->{{3.6403967285909395`*^9, 
  3.6403967374051914`*^9}},ExpressionUUID->"2d8f2945-c8f3-44b9-8f66-\
284fdd2bd5d4"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.6403967320298047`*^9, 3.6403967377020617`*^9}, 
   3.6484168710077267`*^9, 3.6484169012304573`*^9, 3.6484171589176383`*^9, 
   3.6484173234951353`*^9},ExpressionUUID->"18b2a86a-ba68-4743-b144-\
01a4a17635cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Input",
 CellChangeTimes->{{3.6403967389530463`*^9, 
  3.640396739484372*^9}},ExpressionUUID->"89f41543-6c1e-4783-91d2-\
afbf3df1d35f"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.640396739921792*^9, 3.6484168710702276`*^9, 
  3.6484169012460823`*^9, 3.6484171589489064`*^9, 
  3.648417323557639*^9},ExpressionUUID->"70d79203-2ced-46c3-80c3-\
b326188ddef4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "x"}]], "Input",
 CellChangeTimes->{{3.6403967573181944`*^9, 
  3.6403967577713175`*^9}},ExpressionUUID->"ba59a94e-786f-4253-b241-\
872e5cad2948"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6403967584905415`*^9, 3.6484168711014767`*^9, 
  3.6484169012617073`*^9, 3.6484171589800687`*^9, 
  3.6484173236045103`*^9},ExpressionUUID->"d313daf0-50a9-40e7-b4a2-\
a8a62d8a3917"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["xy"], "Input",
 CellChangeTimes->{{3.640396740859644*^9, 
  3.640396741594084*^9}},ExpressionUUID->"942971c5-7d89-414e-ade1-\
80d820280070"],

Cell[BoxData["xy"], "Output",
 CellChangeTimes->{3.640396742297583*^9, 3.6484168711483526`*^9, 
  3.6484169012929573`*^9, 3.648417159042637*^9, 
  3.6484173236670046`*^9},ExpressionUUID->"5150b4f7-f06f-495e-9415-\
96b8a9abd31e"]
}, Open  ]],

Cell[TextData[{
 "Can you discover what is wrong in the last command? Yes, there is no SPACE \
between variables ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "3a570171-72f0-439f-acc2-2f5b3d864c25"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "aebbe611-e16b-40f0-9002-a24b5cad7ce5"],
 " and, thus, ",
 Cell[BoxData[
  FormBox["xy", TraditionalForm]],ExpressionUUID->
  "68e9e072-3baa-4821-881f-a1b21a3ce0f0"],
 " is a variable to which no value has been assigned. This is possibly the \
most frequently seen trivial mistake. Therefore, to save your time, DO NOT \
use this silly way for multiplication.",
 " ",
 "I heard some professors complain about it, wishing it be removed from ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " eventually."
}], "Text",
 CellChangeTimes->{{3.6403967712923517`*^9, 3.640397162243921*^9}, 
   3.642025513559596*^9, 3.642458597210762*^9, 3.643666684186161*^9, {
   3.6482957574365706`*^9, 3.648295777597141*^9}, {3.6482958119333134`*^9, 
   3.648295824342433*^9}, {3.6482984169577827`*^9, 
   3.648298419317931*^9}},ExpressionUUID->"19fa3e88-5517-40ad-ae02-\
377124c02235"],

Cell[TextData[{
 "Then, how about %? Don\[CloseCurlyQuote]t depend on it. When moving the \
cursor from one cell to another in a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook, you might be easily misled and troubled by the value % refers. \
Remember that it always refers to the most recent result of evaluation. With \
%, time order places a vital role, which may not be reflected exactly in your \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook.\n\n",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " even allows users to use %%, %%%, %%%%, etc. I believe you can guess what \
values they refer, i.e., the next, the second, the third, and so on, most \
recent results of evaluation. Forget about all these.",
 " ",
 "If you need the very values, assign the values to your own variables.\n"
}], "Text",
 CellChangeTimes->{{3.6403972086129284`*^9, 3.640397286275217*^9}, {
   3.640397352722939*^9, 3.640397703042143*^9}, {3.6403977345714364`*^9, 
   3.6403979234563766`*^9}, {3.640397957401786*^9, 3.640398122848571*^9}, {
   3.6403982344083185`*^9, 3.6403982558973885`*^9}, 3.640399549133629*^9, {
   3.6420255289685946`*^9, 3.6420255978766327`*^9}, {3.64829594526365*^9, 
   3.648296022996892*^9}, {3.6482984221469965`*^9, 
   3.64829843897797*^9}},ExpressionUUID->"bda61389-38ed-4513-82e8-\
62c0ae43c1a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assigning values to variables", "Subtitle",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6403983132098837`*^9, 3.6403983490735784`*^9}, {
  3.642000300777958*^9, 3.642000306278822*^9}, {3.64364838331653*^9, 
  3.64364838362903*^9}},
 CellTags->
  "Assigning values to \
variables",ExpressionUUID->"28514f79-90e1-474e-908d-0e5585d11c04"],

Cell[TextData[{
 "The name (or identifier) of a variable, function, or constant consists of \
human language letters (including English letters, Chinese characters, etc.), \
digits, and/or $ (dollar sign). It must start with a human language letter or \
$, such as, x, y, x1, $0x, student1, Student$01a. By the way, it is not \
recommended to use $. If you use, use it consistently for dedicated purpose. \
For example, in a large project involving hundreds and thousands of lines of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code, you may use names beginning with $ to control the communication \
between functions and/or ",
 Cell[BoxData[
  ButtonBox["Modules",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Module"]],ExpressionUUID->
  "15969af1-d47a-42d1-8ba6-d2b772471600"],
 "/",
 Cell[BoxData[
  ButtonBox["Blocks",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Block"]],ExpressionUUID->
  "cea38320-65ee-45fd-9831-01f17c9adddc"],
 " (see Unites 4 and 6).",
 " ",
 "But the fewer of this kind of variables, the easier it is for you to \
maintain and manage your code."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdzVsog3EYBvDPiCi7wpTJYRZlOSU0UR+7kCKboV34xoahHKNEiuWG7MRc
ONUUF2xpFytZmVKb0UrNFa3MldZXw3JqNez5X7z96unpeQtUE7JBDkVR/PjB
5GJxszaPpbPH/AysiIXU0HYpn4a/kWAA9ne9E5/SRuaMhSwtsSzOQxs10DAp
YOn2BGEjrJH3KU6ELO3q9hFtf98M7LS4VDDzOjoELXdVw9C0KhqHYZ2baC1X
zsJbXc4K3AlV66GhKdEAnRr5FvxqMxGN6pt9qKo8s8NAy6sDbhRlXMHGrF0P
+bPrvYbbPomP9NY7HqE5ehCDHynuVGtc5uk+HVZ56rgwfy2dB73+l3zYw8ut
h8+fglYYWeZ0QIVdK4VvkT2+tJilHaK3Ahg+CpZA7oW5Bpoe/GKSHyfJ4GGQ
p4S9+lI1nOHINJCRTy3AH/XpEjS+hIi1MvH5Zll8PzzqhP/K7Nwl
  "],ExpressionUUID->"7a15ccce-fc76-495e-864b-396d13f61659"],

Cell[TextData[{
 "The symbol = (",
 Cell[BoxData[
  ButtonBox["Set",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Set"]], "InlineFormula",ExpressionUUID->
  "0de688f4-f189-4b72-9a09-79aae4733671"],
 ") assigns a value or the ",
 StyleBox["evaluated",
  FontSlant->"Italic"],
 " result",
 StyleBox[" ",
  FontSlant->"Italic"],
 "of an expression to a variable."
}], "ItemNumbered",
 CellChangeTimes->{{3.640398847713045*^9, 3.6403988626092916`*^9}, {
   3.6403989655504036`*^9, 3.6403989655523376`*^9}, {3.6403990349427032`*^9, 
   3.640399040453884*^9}, 3.640399211126281*^9, {3.6442552401416836`*^9, 
   3.6442552408916826`*^9}, 3.6442552874439135`*^9, {3.6442553249498196`*^9, 
   3.6442553463118033`*^9}, {3.6442554555437145`*^9, 
   3.6442554874544067`*^9}, {3.644255642521599*^9, 
   3.644255649350669*^9}},ExpressionUUID->"c6ae27a5-ecdf-44ee-b093-\
f144840e9837"],

Cell[TextData[{
 "The symbol := (",
 Cell[BoxData[
  ButtonBox["SetDelayed",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/SetDelayed"]],ExpressionUUID->
  "7e4ff6cb-4ab1-4346-bf93-5e88e3afdff3"],
 ") assigns a value or an ",
 StyleBox["unevaluated",
  FontSlant->"Italic"],
 " expression to a variable.",
 " ",
 "It is a delayed assignment. "
}], "ItemNumbered",
 CellChangeTimes->{{3.6403989669424305`*^9, 3.6403990714461527`*^9}, 
   3.6424586127026005`*^9, {3.644255246032831*^9, 3.6442552725672207`*^9}, {
   3.6442554113665233`*^9, 3.64425543471324*^9}, {3.6442555032843084`*^9, 
   3.6442555884366484`*^9}, {3.6442556710099688`*^9, 3.644255690496722*^9}, {
   3.6442557357055664`*^9, 3.644255746335252*^9}, {3.644255785403449*^9, 
   3.6442557940295935`*^9}, {3.6482984570764217`*^9, 
   3.6482984613437524`*^9}},ExpressionUUID->"d0945515-d843-4b71-a235-\
79c0bfa6060b"],

Cell[CellGroupData[{

Cell["\<\
The symbol == (double equal signs) is used to determine if two values are \
equal.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.6403988648315616`*^9, 3.640398922430122*^9}, {
  3.6442558048443213`*^9, 
  3.644255845912634*^9}},ExpressionUUID->"e2d3c589-9467-4d30-b683-\
ed5bd1b49192"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "100"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6403991430324373`*^9, 3.640399165129566*^9}, 
   3.6403992237542505`*^9, {3.6442559664759264`*^9, 
   3.6442560144990005`*^9}},ExpressionUUID->"c87970de-6bb4-457f-b62a-\
2390c6129db3"],

Cell[BoxData["93"], "Output",
 CellChangeTimes->{
  3.640399224798267*^9, 3.6442559688043365`*^9, {3.644256003122424*^9, 
   3.6442560148898554`*^9}, 3.6484168711796017`*^9, 3.6484169013085823`*^9, 
   3.6484171590581937`*^9, 
   3.6484173237138805`*^9},ExpressionUUID->"085caf2d-1b95-4310-aef0-\
b461bfe9422f"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The variable ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "ff1d1a41-502c-4e6e-8fda-54634202d199"],
 " has been assigned a value. It will not change until it is assigned a new \
value."
}], "Text",
 CellChangeTimes->{{3.640399290118434*^9, 
  3.640399358894288*^9}},ExpressionUUID->"32eb008b-0140-43cb-81d7-\
01613b165e04"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{
  3.6403991595510015`*^9},ExpressionUUID->"15f4b00b-00db-4944-91fb-\
262cbdf76722"],

Cell[BoxData["93"], "Output",
 CellChangeTimes->{{3.6403991605850177`*^9, 3.6403991759589834`*^9}, 
   3.640399227494442*^9, 3.6442560235000534`*^9, 3.6484168712108526`*^9, 
   3.6484169013398323`*^9, 3.648417159089444*^9, 
   3.6484173237763796`*^9},ExpressionUUID->"031e154e-382a-4d00-a8c9-\
c6e39956dadd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{
  3.6403992292357597`*^9},ExpressionUUID->"07a8ba48-4056-4643-83a6-\
4082326a874f"],

Cell[BoxData["93"], "Output",
 CellChangeTimes->{3.6403992307020617`*^9, 3.6442560254887767`*^9, 
  3.648416871242102*^9, 3.6484169013554583`*^9, 3.6484171591050687`*^9, 
  3.6484173238232546`*^9},ExpressionUUID->"3de11b31-d071-4af2-9574-\
4f6e5aa5ac49"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"x", ":=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "100"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{3.640399240553519*^9, 3.644255975508338*^9, 
  3.644256033349314*^9},ExpressionUUID->"2160da79-078d-4d63-87a5-\
11542f77da18"],

Cell[TextData[{
 "The variable ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "862dd9bf-4f03-4edc-add9-03bcb140278c"],
 " has not been assigned a concrete value.",
 " ",
 "It has recorded what to do when it is accessed."
}], "Text",
 CellChangeTimes->{{3.640399407994624*^9, 3.640399465558484*^9}, 
   3.642001198137077*^9, 
   3.6482984638282394`*^9},ExpressionUUID->"c74c2727-080b-4318-9f76-\
ab60cee1f110"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "RandomInteger", " ", "is", " ", "called", " ", "to", " ", "generate", " ",
     "a", " ", "random", " ", "integer", " ", "number", " ", "in", " ", "the",
     " ", "range", " ", "from", " ", "0", " ", "to", " ", "100."}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.6403992426815553`*^9, {3.640399531160963*^9, 3.640399535207587*^9}, {
   3.6442560549032907`*^9, 
   3.64425608093816*^9}},ExpressionUUID->"729e4230-ed83-4dfc-ad71-\
a6f28081c778"],

Cell[BoxData["85"], "Output",
 CellChangeTimes->{3.6403992431355705`*^9, 3.6403995402979136`*^9, 
  3.644255980166393*^9, 3.644256040182601*^9, 3.6484168712889786`*^9, 
  3.648416901386707*^9, 3.648417159136324*^9, 
  3.6484173238857555`*^9},ExpressionUUID->"73bbe3c4-a7d0-41fb-9218-\
018c2a8267d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "RandomInteger", " ", "is", " ", "called", " ", "again", " ", "to", " ", 
    "generate", " ", "a", " ", "new", " ", "random", " ", "integer", " ", 
    RowBox[{"number", "."}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{
  3.640399243713857*^9, {3.640399506880624*^9, 3.64039951707911*^9}, {
   3.642001241674963*^9, 3.642001248754279*^9}, {3.6442560577316585`*^9, 
   3.644256059278816*^9}, {3.644256094345783*^9, 
   3.6442560956426563`*^9}},ExpressionUUID->"bc02f74f-5bae-4215-98bd-\
59232bd4f613"],

Cell[BoxData["48"], "Output",
 CellChangeTimes->{
  3.640399244047863*^9, 3.640399542686895*^9, 3.64425598257279*^9, {
   3.6442560424329267`*^9, 3.6442560479177866`*^9}, 3.6484168713046017`*^9, 
   3.648416901417957*^9, 3.648417159167575*^9, 
   3.6484173239326305`*^9},ExpressionUUID->"a053b4f4-fd0d-4131-98b3-\
0a058ab62c5c"]
}, Open  ]],

Cell["\<\
Now, you should understand the following two groups of commands and their \
output.\
\>", "Text",
 CellChangeTimes->{{3.644255948926581*^9, 3.64425596050631*^9}, {
   3.6442561244905796`*^9, 3.644256147102848*^9}, {3.6442562599758797`*^9, 
   3.644256265117323*^9}, 
   3.644256392190629*^9},ExpressionUUID->"b2f76a49-225a-4544-a668-\
560d086efb75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}], "]"}]}], ";", " ", 
  RowBox[{"{", 
   RowBox[{"x", ",", "x", ",", "x", ",", "x", ",", "x"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.644256152321981*^9, 3.64425617468416*^9}, {
  3.6442562733895273`*^9, 3.644256273592578*^9}, {3.6442563116457295`*^9, 
  3.6442563118491507`*^9}},ExpressionUUID->"b4da3dcb-6bef-4a25-95ad-\
cf1a9b49862c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6442561751684685`*^9, 3.6442562788121963`*^9, {3.644256313036649*^9, 
   3.6442563209282618`*^9}, 3.6484168713358517`*^9, 3.6484169014335833`*^9, 
   3.648417159183193*^9, 
   3.6484173239638796`*^9},ExpressionUUID->"0b922052-6688-4d6c-b93b-\
f6a24ecb9696"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", ":=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}], "]"}]}], ";", " ", 
  RowBox[{"{", 
   RowBox[{"x", ",", "x", ",", "x", ",", "x", ",", "x"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.644256152321981*^9, 3.6442561874669757`*^9}, {
  3.6442562763275237`*^9, 3.6442562764682093`*^9}, {3.644256316287091*^9, 
  3.6442563164589586`*^9}},ExpressionUUID->"f8b49826-f831-4029-884e-\
7bbc891e93ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"91", ",", "70", ",", "3", ",", "81", ",", "57"}], "}"}]], "Output",
 CellChangeTimes->{
  3.644256188123226*^9, 3.6442562809219446`*^9, {3.644256316943574*^9, 
   3.6442563240853977`*^9}, 3.648416871367102*^9, 3.648416901464983*^9, 
   3.6484171592144437`*^9, 
   3.6484173240107546`*^9},ExpressionUUID->"ecd12c10-e825-4cea-b5ce-\
6bac5ee84a0c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding comments", "Subtitle",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.640399657924152*^9, 3.6403996951157293`*^9}, {
  3.6436483874732404`*^9, 3.6436483915984764`*^9}},
 CellTags->
  "Adding comments",ExpressionUUID->"3683830f-a321-47f3-8e67-b7514d3b8994"],

Cell[TextData[{
 "It is always a good practice to add comments to your code. With ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", you can click the ",
 Cell[BoxData[
  FormBox["\[CirclePlus]", TraditionalForm]],ExpressionUUID->
  "923eda20-5316-4e49-89ea-769db72b8ffa"],
 " icon and then click the menu item, Plain text, to start a new cell. In the \
new cell, you can type whatever you want. When you evaluate the present \
notebook by choosing menu item Evaluation \[RightArrow] Evaluate Notebook or \
pressing first \[ControlKey]-A and then \[ShiftKey]-\[EnterKey], ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " executes all commands with contents in the plain text cells skipped.\n\n\
How to bring the ",
 Cell[BoxData[
  FormBox["\[CirclePlus]", TraditionalForm]],ExpressionUUID->
  "4cebe51a-90da-4e8b-9cd8-38971d820dcb"],
 " icon up if it doesn\[CloseCurlyQuote]t show?",
 " ",
 "When you are at the end of a notebook, click at any point after the last \
cell you have input; when you are in the middle of a notebook, click any \
point in between two cells."
}], "Text",
 CellChangeTimes->{{3.640399702645056*^9, 3.640399737676462*^9}, {
   3.640400967976776*^9, 3.640401042872884*^9}, {3.6404010813526635`*^9, 
   3.640401089665781*^9}, {3.640401194994332*^9, 3.640401364388424*^9}, {
   3.6424586228841553`*^9, 3.6424586306265717`*^9}, 3.643649991480895*^9, {
   3.6436500524256*^9, 3.64365008377332*^9}, 3.6436501670336723`*^9, 
   3.6436502091327534`*^9, {3.6436503235252037`*^9, 3.6436504438835173`*^9}, {
   3.643650475230912*^9, 3.6436506793815064`*^9}, {3.643650719152497*^9, 
   3.6436508223529806`*^9}, {3.6436508684682345`*^9, 
   3.6436509757784185`*^9}, {3.643651031847681*^9, 3.6436511688645687`*^9}, {
   3.643651208400775*^9, 3.6436512116041746`*^9}, {3.643651252655861*^9, 
   3.643651278721716*^9}, {3.643651326180705*^9, 3.643651368498332*^9}, {
   3.6436514095032535`*^9, 3.643651424568612*^9}, 3.6436547094524193`*^9, {
   3.64366682482829*^9, 3.643666881960275*^9}, {3.643666912898801*^9, 
   3.643666942111642*^9}, {3.648298466438018*^9, 
   3.6482984735489902`*^9}},ExpressionUUID->"926f1a24-c000-4e21-a68c-\
83b4a56170a3"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
c9cW/yzHu7keiPol8qNUrVbNh+mNSnR26DVLdFafYK1WtQfSdBYAkNHAznZW
X7h+6l7vqx/w5j/SHcyevNO/fcqb/yXvkfdfe6bWWX0xz9t5FKruversbK1X
pkatkphRdox2wzFmr9fWY/NhbPRbDZbrcFrTwV12Z3Vme0cM0hqevr4T7st5
LHOhPTBes54x/ys4/jmR9rqCRdVoiN//nwKp6CwASMgyb7z19du8R27xmh/3
vvd578zfet//gvfdv/Ye/5j38M2bX/9VtUKet/OwHr2uOmpmj3mzBCjRlXB9
Y5bZ+HjYMfdsdTY6ITNc8c6au3UeK1ZyK4DGy4zuul+m8W+QcGn8hVvnUGBS
nc4CgISBnb3xxO9sfus3th79kPfkp73Vp7z/+0H3pu48+dtbj3548/FP3Hji
d3O9n/c60JitGsXT49pEZu0sp3bW7Iox0IvaZ1Q7bdQX76w11kxsZm5vtU+f
WXKF+IjWfJkD/jlhjO57wmOFuwvWLppZOgsAIgbPG//vdy//z39ef+Yz3SuN
/+MnvK+81/vKT3bvPHzz9VP3XF5ZzP2rPTol1fjwNfqcdludjUaZ1ng2b2cd
F2zFx7aZO+s4JeNUs3TWfd2XvbS3eq1WLLN0FgBEZPueileuP/WHW1/7xc1v
/frWo7/QHcZ+82Pqjlq4/sZy/nf0YHhmD/ZiH846x3SDOuuawS3UWedgMdbK
xLxxNBsd62zDNalsHcKYz3ZOJtu/DjUbn61eM3foKHI2dBYAJGT6norXzr67
+LmNpX99e/mbm9/4tc1vVN9+pbnx/JF3T/9F57X/zv+Obv9WquMj1vTroNb6
jmejhle309lEw8KqWp0N2ePSxCe58WuVEq8y3Ec0xazXd1wHZX8qbP13LfgL
T3QWACRk+n7jS6vhuPXqmb+/euZL+v76xZfX3rpY5D19LFUSvz/bT8Gret2G
9PtAhT+b7aKzACCB/x2Bgsaws9vKLJ0FABF0tqAx62z8KyyLoLMAIIHOQqOz
ACCBzkKjswAggc5Co7MAIIHOQqOzACChnM4uN5ut5NJWfc+hZoHvvRgHrXrd
8Yp2EjoLABJK6Oxy85A7p8U6W2ArkaC36jv2Hwk+OgsAEkbeWVXZtJHfzu7s
Ti8tnQUACaPubGwwqx7s0fz0+vlr9Za51toTFLq7Zr0eLjafc+1zOdqquaz+
tHcn8dp2HDoLABJG3VlVubBu5v3e46Cv3bv6ueien9Do6SBpZkmjNYx9Wp1d
6zeeNSIcq3Ha8vQXt+PQWQCQUGZn/aGnETxXE7vrRO0KtnbW0145dZ9iF1zR
WQCApczO+vQ8b2o96eyo0FkAkFDq57PWsrQmmvPG4WSyq7OOeWMjvdFks9C8
MZ/PAgBsZV5vHMWrbz2jK5ucbQ12Y9R0j3NBvR5uFd9kWLjeGABgK+X3Z+s7
OEfpWs0d/bLoLABIKOX7oPr8Du1OtaM/mvXRWQCQwPcbQ6OzACCBzkKjswAg
gc5Co7MAIIHOQqOzACCBzkKjswAggc5Co7MAIIHOQqOzACCBzkKjswAgIezs
MUwrOgsAcsK32bJPBKWhswAg5xjzxvDRWQCQQGeh0VkAkBB29qP/5HGbzhud
BQA5dJYbnQUAOXSWG50FADl0lhudBQA5dJYbnQUAOXSWG50FADkDO3vr3/3g
vR+5K3l736c/X3oguA3lRmcBQM7Azv7Kl17/4P3/pm7v/+OHVF5/6uOf1Q8/
/FffLvKu3vBeNQ//lnePWniye/fVtmv9Pk9xG9KNzgKAnOzzxnpgu91hrO6s
kVdveRid9Vd7+mT+8ym84QTd6CwAyCmzs/p+/85mu31xubuHArksvOEk3egs
AMgpfTzbzWt4x5xVdq2jFr5qPmu0smfZOIqx5j3t6NnwvmPDqbzRWQCQU05n
Q7puyfFsMsFBZ8NomoNQa1j6tBcPrn//2Fv+6234zwaZZjxLZwFAVJnj2WRV
4yF2dNYYkJpdjuXyZOJFJga5qraODaf1RmcBQM5YdVZXL5nXXJ1NPhs7tH7V
dJbOAsBIjFVnw6ndqJXZOhubSQ56+sVg57qqvZ2fjJ1Acgp6Cm90FgDkjPr7
oPrPGwdTvq++FVsysLMf1Z/Jeq7roPxwRyPl+DVR9oZTeaOzACCH713kRmcB
QA6d5UZnAUAOneVGZwFADp3lRmcBQA6d5UZnAUAOneVGZwFADp3lRmcBQA6d
5UZnAUBO2FlMOToLABLoLDQ6CwAS6Cw0OgsAEugsNDoLABLoLDQ6CwASsnf2
wIEDMzMzKysrou/2KAudBQAJGTt7/vz5Gd/CwoL0Gz5KQWcBQELGzs7Nzanx
7PHjxw8fPqyXNJvNgwcPFntLb89WK4HqbLvfSrVGsUPk1qj1O5lMW29j+zFA
ZwFAQsbO7tu377HHHltcXAynju+777477rijwPu5TlKvn7EHvYe9R0PvrLnz
lGeLdVKfqb1t/8P1UXjD7aGzACAhS2fb7bbKq3r7XV1dVXdUcJ9//vlbfCdO
nMj3bp6op9m3WHWH3Vkr6c6nt9NZa88DDlf4PMXQWQCQkKWzc3NzKq9N3wHf
Qd+uXbvUqDbXm3kySeFgsDf1qqk1ek9Uq9b8cnLS2VxijY2DZfGdzxoD0KCv
Zmf7zGsbO+pzcPu1uPbZW+A/G953bDgqdBYAJGTp7L59+1Rbj/oOHz6smnv7
7bevrKw8+OCDakirxrbZ38wdQz8jcI7xrJEkf7kxqRou7VUqVsTk8NTcebRv
/173TrSB6xCJXZjPZBjPOvcZ/ydGcLKMZwFgkgzsrJ40Vn/qh6urqw888MBd
d92l7p8+fVp1du/evdnfzNPGs3pJ6rxxGKLYeC8Y9Lk+Hw2Hj+Fi587DzA44
RPoenC/KXjltn9EgNzp7OgsAk2RgZ9W7brPZNJfce++9t912290+1dl8V0Ml
KpLp89lgJfcVR+6lRt2ikIZH7u29VrPnj9N21uf0BnY2dZ90FgAmXd7vg1pZ
Wdm1a1f48ODBg3mvhkpOklofvfYbz5ofanaXz0bTyu5rmKIDWDW0B7z9D5E4
9YHzxo7XYu8zOO9G7Pz7fISdvJP9P/tAdBYAJOTt7N69e3fv3h0+VNlVnVUD
21w7Sb/OKBiChrPBVmetjc2CundUScwcW3O2ruInD9F3vylXRjsPF22qn45d
TGXNMsfH3nQWAHaiXJ1V41Y1mL3zzjvDa5/U5voXfAp/Z0V5os9msUZnAUDG
9P7vCJDZODoLABKms7O9mdnRX2w0xugsAEiYzs4iic4CgAQ6C43OAoAEOguN
zgKABDoLjc4CgAQ6C43OAoAEOguNzgKABDoLjc4CgISws8cwregsAMgJ32bL
PhGUhs4CgJxjzBvDR2cBQAKdhUZnAUACnYVGZwFAAp2FRmcBQAKdhUZnAUAC
nYVGZwFAAp2FRmcBQAKdhUZnAUACnYVGZwFAQq7OLiwsHDhwYGZmRv3ZbrcL
vZ03apVKpTobbNyercYeD1gdYugsAEjI3tnFxUVV2GazqWo74zt//nz+t3M6
O6boLABIyN7Z48ePHz16VN/XzVV/5n87p7Njis4CgITsnT3v0/cPHz4cNjen
vp3VjzS9LFxd36nVquazGB46CwASClwHNTc3V3TSeK0XTpvR1Fqju5YOrrof
76xecdAYGEXQWQCQkLezq6urKrIqtUXfztPHs8kCJzrb2y6sMIaHzgKAhLyd
VW/CR48eXVlZKfp2ntpZ9yiVzo4KnQUACQU622w2t/F2nj6e7X04G+SzMRsO
cp3zxmR2uOgsAEjI21kV2ZmZmW28nWe+DsqYTI46a04pY6joLABI2DHfB8Uv
+AijswAggc5Co7MAIIHOQqOzACBhx3QWwugsAEigs9DoLABIoLPQ6CwASKCz
0OgsAEigs9DoLABIoLPQ6CwASKCz0OgsAEg4BgToLABI63Q6S0tL8/PzR44c
2b9//0OYJuovXf3Vqx8A9WOwublZ9g8jAEygjY2NlZWVxcVF9X47NzfXwDRR
f+nqr179AFy5coXOAoCEa9eura+vq3daNag5d+7cWUwT9Zeu/urVD4D6Mdja
2ir7hxEAJpAaxaj3WDWc6XQ665gy6i99Y2ND/QCoHwM6CwAStnybvhuYMvrv
Xf8MlP2TCAAAAAC2/wcOaaqE
    "], {{0, 237}, {632, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{632, 237},
  PlotRange->{{0, 632}, {0, 
   237}}]],ExpressionUUID->"4224b62b-bc8c-4cd9-a0f5-f58abb836f42"]], "Text",
 CellChangeTimes->{
  3.648416895886134*^9},ExpressionUUID->"730db95b-be93-4c31-9297-\
f00d2609513c"],

Cell[TextData[{
 "However, if you want to add comments into your ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code, you can do so by quoting comments in between (* and *) and placing \
it anywhere you think proper."
}], "Text",
 CellChangeTimes->{{3.640401371201857*^9, 3.6404014763671455`*^9}, {
  3.6436283573472958`*^9, 3.6436283582433453`*^9}, {3.643651668154127*^9, 
  3.643651668622877*^9}, {3.6436670026719685`*^9, 
  3.6436670215748677`*^9}},ExpressionUUID->"b15239d3-b00f-407b-831c-\
96e49142fed7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", ":=", 
   RowBox[{"Random", "[", "]"}]}], 
  RowBox[{"(*", " ", 
   RowBox[{"this", " ", "is", " ", "a", " ", "delayed", " ", "assignment"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"x", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "gives", " ", "the", " ", "first", " ", "random", " ", 
    "number"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"x", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "gives", " ", "the", " ", "second", " ", "random", " ", 
    RowBox[{"number", ".", " ", "The"}], " ", "two", " ", "numbers", " ", 
    "are", " ", "usually", " ", 
    RowBox[{"different", "."}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.640401519715845*^9, 3.640401638667214*^9}, {
  3.6436518210877256`*^9, 
  3.643651850561554*^9}},ExpressionUUID->"e0196604-37ff-40db-88ec-\
e53240760047"],

Cell[BoxData["0.954909607776811`"], "Output",
 CellChangeTimes->{3.640401554048958*^9, 3.6404016437937884`*^9, 
  3.6484168714296026`*^9, 3.648416901480605*^9, 3.648417159230068*^9, 
  3.64841732405763*^9},ExpressionUUID->"2200313c-fa21-4eec-b92e-ffbd869b6f50"],

Cell[BoxData["0.9374002641448614`"], "Output",
 CellChangeTimes->{3.640401554048958*^9, 3.6404016437937884`*^9, 
  3.6484168714296026`*^9, 3.648416901480605*^9, 3.648417159230068*^9, 
  3.64841732405763*^9},ExpressionUUID->"eec5b53a-8a19-4500-a70b-d05a61db4a69"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More about ",
 Cell[TextData[ButtonBox["palettes",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/Palettes"]], "SearchResultTitle",ExpressionUUID->
  "3d6d8b75-cf5e-4023-b2e1-03f1d3f5ea7c"],
 " "
}], "Subtitle",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.640391998536216*^9, 3.640392006068363*^9}, {
  3.644443331380047*^9, 3.644443336099424*^9}},
 CellTags->
  "More about \
palettes",ExpressionUUID->"ef6d9f64-da0b-424a-830f-9fb9673fabf0"],

Cell["\<\
As mentioned at the beginning of this unit, palettes enable users to prepare \
mathematical expressions in professional format. But users are strongly \
encouraged to type on the keyboard without even using short-cut like \
\[ControlKey]-2, \[ControlKey]-^, and \[ControlKey]-_. \
\>", "Text",
 CellChangeTimes->{{3.640392034452244*^9, 3.6403920569903283`*^9}, {
   3.640392116603939*^9, 3.640392156512305*^9}, {3.6403921895299854`*^9, 
   3.6403922458454413`*^9}, {3.640392342551094*^9, 3.6403923443828583`*^9}, {
   3.640392385453399*^9, 3.640392505581689*^9}, {3.6403926120699177`*^9, 
   3.640392613569898*^9}, {3.640392660334299*^9, 3.640392704638745*^9}, {
   3.6403927437620544`*^9, 3.6403927528944273`*^9}, {3.6403928107000413`*^9, 
   3.640392820551177*^9}, {3.640393137703579*^9, 3.640393341611541*^9}, {
   3.6403933744414663`*^9, 3.640393412698102*^9}, {3.640393471066861*^9, 
   3.6403934909762025`*^9}, {3.640394095294734*^9, 3.6403940969692245`*^9}, {
   3.640502681685227*^9, 3.64050271486196*^9}, {3.640503534401042*^9, 
   3.640503541635991*^9}, {3.640503573111975*^9, 3.6405036258523874`*^9}, 
   3.642458637578946*^9, {3.6436530305037775`*^9, 3.6436530894612055`*^9}, {
   3.6436670431440897`*^9, 3.643667074518383*^9}, {3.643667121673588*^9, 
   3.643667144046949*^9}, 3.648296213257708*^9, 
   3.648298476736931*^9},ExpressionUUID->"ee5a7c3c-fa09-4a77-9ddd-\
94730107f57b"],

Cell[TextData[{
 "Through ",
 Cell[TextData[ButtonBox["Palettes",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/Palettes"]], "SearchResultTitle",ExpressionUUID->
  "e0278ec6-5428-47f9-808a-e516362e967d"],
 " \[RightArrow] Basic Math Assistant \[RightArrow] Advanced, we can type the \
following commands easily."
}], "Text",
 CellChangeTimes->{
  3.6436530946615076`*^9, {3.6436671653919096`*^9, 3.6436671665661397`*^9}, {
   3.6444433585871086`*^9, 3.644443360321781*^9}, {3.648296233045899*^9, 
   3.648296233795905*^9}},ExpressionUUID->"431c03ad-16aa-44d5-acee-\
61e937579599"],

Cell[CellGroupData[{

Cell[BoxData[
 RadicalBox["5.", "3"]], "Input",
 CellChangeTimes->{{3.6403928449593945`*^9, 
  3.6403928523704367`*^9}},ExpressionUUID->"ea0455c2-e249-4836-a53e-\
ef16315572e4"],

Cell[BoxData["1.7099759466766968`"], "Output",
 CellChangeTimes->{3.6403928553398256`*^9, 3.6484168714609947`*^9, 
  3.648416901511854*^9, 3.648417159261319*^9, 
  3.6484173241045055`*^9},ExpressionUUID->"47f6e1e5-062f-4118-a690-\
dfdabdb2284e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "100"], "i", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"1", "+", "2", "+", "3", "+", "\[CenterEllipsis]", "+", "100"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.640392879255659*^9, 3.6403928873244867`*^9}, {
  3.64365341672824*^9, 
  3.6436534178983097`*^9}},ExpressionUUID->"6270975c-af3a-46b6-b30b-\
7e0db8468d54"],

Cell[BoxData["5050"], "Output",
 CellChangeTimes->{3.640392889121294*^9, 3.6484168714922404`*^9, 
  3.648416901527479*^9, 3.6484171592925687`*^9, 
  3.6484173241357555`*^9},ExpressionUUID->"a9120bc8-a522-4e92-9296-\
f0c31cd36258"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]}], "Input",
 CellChangeTimes->{{3.640392897568983*^9, 3.640392929979257*^9}, {
   3.6484169242836185`*^9, 3.648416987312997*^9}, {3.6484170544391117`*^9, 
   3.6484170994675255`*^9}, 
   3.6484172920659456`*^9},ExpressionUUID->"e501879b-42c8-41ac-9e09-\
334af20ed9ff"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.640392932573577*^9, 3.6484168715547457`*^9, {3.6484169015587296`*^9, 
   3.6484169288470974`*^9}, 3.648417159323819*^9, 
   3.6484173241982565`*^9},ExpressionUUID->"6911a966-28cb-4a14-aa9e-\
6af81357cbbd"]
}, Open  ]],

Cell[TextData[{
 "But there is always a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " name for every command that can be typed via palettes, such as ",
 Cell[BoxData[
  ButtonBox["Sum",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sum"]],ExpressionUUID->
  "7c874a02-14d6-462f-9e21-ecf411b3dc6a"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{
      TagBox[
       FrameBox["index"],
       "Placeholder"], "=", 
      TagBox[
       FrameBox["start"],
       "Placeholder"]}], 
     TagBox[
      FrameBox["end"],
      "Placeholder"]], 
    TagBox[
     FrameBox["expr"],
     "SelectionPlaceholder"]}], TraditionalForm]],ExpressionUUID->
  "37ebc94f-d1f8-4921-b859-6b7a1c4e7ea4"],
 " and ",
 Cell[BoxData[
  ButtonBox["Integrate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Integrate"]],ExpressionUUID->
  "fb2ec3c1-d42b-4176-a921-dfb972f9ca2c"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Integral]", 
    RowBox[{
     TagBox[
      FrameBox["expr"],
      "SelectionPlaceholder"], 
     RowBox[{"\[DifferentialD]", 
      TagBox[
       FrameBox["var"],
       "Placeholder"]}]}]}], TraditionalForm]],ExpressionUUID->
  "d3ed74e7-fbe4-469e-ac36-fa752731d426"],
 ". In most cases, names are preferred.\n\nThe ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " names give us flexibility and even extra options to control the behavior \
of a function. For example, ",
 Cell[BoxData[
  ButtonBox["Sum",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sum"]],ExpressionUUID->
  "25b6cb87-b504-4990-a0ee-5fe55bebb1fd"],
 " can take any step, while ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{
      TagBox[
       FrameBox["index"],
       "Placeholder"], "=", 
      TagBox[
       FrameBox["start"],
       "Placeholder"]}], 
     TagBox[
      FrameBox["end"],
      "Placeholder"]], 
    TagBox[
     FrameBox["expr"],
     "SelectionPlaceholder"]}], TraditionalForm]],ExpressionUUID->
  "46f2a175-b0ba-411e-b7a3-0e8ab60907ba"],
 " has a predetermined step, i.e., 1; and ",
 Cell[BoxData[
  ButtonBox["Integrate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Integrate"]],ExpressionUUID->
  "667a88bf-fdd4-41b0-96ef-6a67967f7504"],
 " can be used to find both indefinite and definite integrals. In addition, \
we often have to go back and edit commands. When we use palettes to input, \
say, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{
      TagBox[
       FrameBox["index"],
       "Placeholder"], "=", 
      TagBox[
       FrameBox["start"],
       "Placeholder"]}], 
     TagBox[
      FrameBox["end"],
      "Placeholder"]], 
    TagBox[
     FrameBox["expr"],
     "SelectionPlaceholder"]}], TraditionalForm]],ExpressionUUID->
  "e79a47b6-21ed-47bf-b2a6-a802515ae9dc"],
 ", we may delete by accident a box like the one for \[OpenCurlyDoubleQuote]",
 StyleBox["end",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote]. If this happens, we may not be able to restore \
the box and, thus, have to type the whole command again.",
 " ",
 "But this is never a problem when we input by using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " names. More importantly, palettes like ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{
      TagBox[
       FrameBox["index"],
       "Placeholder"], "=", 
      TagBox[
       FrameBox["start"],
       "Placeholder"]}], 
     TagBox[
      FrameBox["end"],
      "Placeholder"]], 
    TagBox[
     FrameBox["expr"],
     "SelectionPlaceholder"]}], TraditionalForm]],ExpressionUUID->
  "068ec52d-357d-4ff3-b2d9-90ee0a86a6a4"],
 " are actually like 2-D graphs. To display the palettes properly, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has to use various information to guide and control the display. Except \
the developers of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", users don\[CloseCurlyQuote]t know even the existence of such information. \
We have seen often in computer labs that formulas, prepared by some students \
via palettes, look perfect but never work. The problem is usually caused by \
accidental removal of this kind of hidden information when they edit the \
formulas. Our suggestion is always either to delete the formulas and retype \
them or to use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " names such as ",
 Cell[BoxData[
  ButtonBox["Sum",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sum"]],ExpressionUUID->
  "eaffdf26-5b84-4138-b591-15b09e15dd6e"],
 "."
}], "Text",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{{3.6403929562538586`*^9, 3.6403929576914215`*^9}, {
   3.640393001307945*^9, 3.6403930486729183`*^9}, {3.640393519278494*^9, 
   3.640393588239671*^9}, {3.6420013236246815`*^9, 3.6420013533008375`*^9}, {
   3.6436497834500685`*^9, 3.6436498976519203`*^9}, {3.6436531071652317`*^9, 
   3.6436531092363553`*^9}, {3.6436531434613457`*^9, 
   3.6436533551576557`*^9}, {3.643653482042039*^9, 3.6436535215453367`*^9}, {
   3.6436535650748653`*^9, 3.643653645995573*^9}, {3.643667177341644*^9, 
   3.6436671881970487`*^9}, {3.6436672453050017`*^9, 
   3.6436672686692457`*^9}, {3.644492890228925*^9, 3.644492890707656*^9}, {
   3.644923857653365*^9, 3.6449239754053526`*^9}, {3.644924124909604*^9, 
   3.644924228924181*^9}, {3.6449244847414436`*^9, 3.644924486679189*^9}, {
   3.644924598984065*^9, 3.644924691834346*^9}, {3.6449248423939686`*^9, 
   3.644924854187501*^9}, {3.64492489168853*^9, 3.6449249892417994`*^9}, {
   3.644925310424028*^9, 3.6449253172389727`*^9}, {3.644925393951347*^9, 
   3.644925453035725*^9}, {3.6449255222749166`*^9, 3.6449255255374465`*^9}, 
   3.6449255705954103`*^9, 3.6449256086401887`*^9, {3.6482962567110796`*^9, 
   3.6482962589930663`*^9}, {3.6482962923329678`*^9, 
   3.6482963119336405`*^9}, {3.648296428212913*^9, 3.648296492478017*^9}, {
   3.6482965228452983`*^9, 3.648296687463517*^9}, {3.6482968902047634`*^9, 
   3.6482971202959394`*^9}, {3.6482971653192415`*^9, 3.648297260428063*^9}, {
   3.6482973179526553`*^9, 3.6482973342049236`*^9}, {3.648297364802573*^9, 
   3.6482974323216476`*^9}, {3.6482974629392376`*^9, 3.648297482834716*^9}, {
   3.648297600491195*^9, 3.6482976011161923`*^9}, {3.6482976317364955`*^9, 
   3.648297633112212*^9}, {3.648298479628276*^9, 
   3.648298493395903*^9}},ExpressionUUID->"70b17c0f-343e-46d0-bf1a-\
036615812245"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5.", "^", 
  RowBox[{"(", 
   RowBox[{"1", "/", "3"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.640393990251747*^9, 
  3.640393999108481*^9}},ExpressionUUID->"402e09fe-88d5-49b0-880d-\
64ad03c472bb"],

Cell[BoxData["1.7099759466766968`"], "Output",
 CellChangeTimes->{
  3.640393999780356*^9, {3.648416871585991*^9, 3.648416901574354*^9}, 
   3.648417159355068*^9, 
   3.6484173242295055`*^9},ExpressionUUID->"0c0e5a26-1e5e-4f2a-a213-\
948255e0b7ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"1", "+", "2", "+", "3", "+", "\[CenterEllipsis]", "+", "100"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6403940062099466`*^9, 3.6403940178642006`*^9}, {
  3.643653412136973*^9, 
  3.6436534132980404`*^9}},ExpressionUUID->"d23b41d8-a53b-4724-b5ee-\
e8d62e286eac"],

Cell[BoxData["5050"], "Output",
 CellChangeTimes->{
  3.640394018223578*^9, {3.64841687161724*^9, 3.648416901605604*^9}, 
   3.648417159386318*^9, 
   3.6484173242763863`*^9},ExpressionUUID->"32a00f3f-136b-4b3c-a9fa-\
f54bcc8822ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "100", ",", "2"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"1", "+", "3", "+", "5", "+", "\[CenterEllipsis]", "+", "99"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6436533695824966`*^9, 
  3.643653431025071*^9}},ExpressionUUID->"85341642-1f8c-4698-9ba2-\
0be53be289a8"],

Cell[BoxData["2500"], "Output",
 CellChangeTimes->{
  3.6436533785140133`*^9, {3.64841687164849*^9, 3.648416901621229*^9}, 
   3.648417159417639*^9, 
   3.6484173243076296`*^9},ExpressionUUID->"d6ee720f-6552-42e6-91a3-\
4e3e77fccf49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "50", ",", "100", ",", "3"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"50", "+", "53", "+", "56", "+", "\[CenterEllipsis]", "+", "98"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6449235906758194`*^9, 3.644923606631569*^9}, {
  3.644923668500163*^9, 
  3.644923668875163*^9}},ExpressionUUID->"418e51a7-37b3-4d0b-b5d7-\
1e9dd8c00ead"],

Cell[BoxData["1258"], "Output",
 CellChangeTimes->{
  3.6449236748134923`*^9, {3.648416871726615*^9, 3.648416901652479*^9}, 
   3.6484171594331937`*^9, 
   3.64841732440138*^9},ExpressionUUID->"b1a1db4c-8668-4fc3-8e4c-\
683c100849b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6436536822356844`*^9, 3.6436536906961765`*^9}, {
  3.648417126378858*^9, 
  3.648417140179924*^9}},ExpressionUUID->"12fec788-e565-4427-a5c7-\
528425ff8d33"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{
  3.6436536913932123`*^9, {3.6484168717578654`*^9, 3.648416901668105*^9}, {
   3.6484171290061607`*^9, 3.648417159464449*^9}, 
   3.648417324432631*^9},ExpressionUUID->"2682d34e-7ee4-4f37-b538-\
6f0dcd357bff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640394020302786*^9, 
  3.640394034034141*^9}},ExpressionUUID->"d80e5b6d-8387-4aee-ae1f-\
c48f0cc856f8"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.640394034471635*^9, {3.6484168717891154`*^9, 3.6484169016993537`*^9}, {
   3.648417143602255*^9, 3.648417159480068*^9}, 
   3.6484173244638815`*^9},ExpressionUUID->"98bb9c7f-1eb5-4d62-9706-\
0bcb676d2132"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic computing", "Subtitle",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6420047176300573`*^9, 3.642004726615838*^9}, {
  3.642004780251047*^9, 3.6420047804384727`*^9}, {3.6420076189069138`*^9, 
  3.6420076275177274`*^9}},
 CellTags->
  "Symbolic computing",ExpressionUUID->"c2e3e2c0-2546-4316-bad9-cbf9e0ce598c"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a computer algebra system (CAS), a software system that can not only \
solve problems numerically but also do symbolic operations. The most \
frequently used built-in function for symbolic and algebraic computation is \
possibly ",
 Cell[BoxData[
  ButtonBox["Simplify",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Simplify"]],ExpressionUUID->
  "1d57359b-1a43-412a-8e09-2dbbd2b50147"],
 ", especially when we exam our result from evaluating an indefinite integral \
or a \[OpenCurlyDoubleQuote]complicated\[CloseCurlyDoubleQuote] algebraic \
expression. The other commonly used functions include at least ",
 Cell[BoxData[
  ButtonBox["Factor",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Factor"]],ExpressionUUID->
  "7f14e969-3e5d-49f3-8ffa-8ce2b0b122e2"],
 ", ",
 Cell[BoxData[
  ButtonBox["Expand",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Expand"]],ExpressionUUID->
  "9bdc14a5-848c-41a0-980f-840bfd96eb5b"],
 ", ",
 Cell[BoxData[
  ButtonBox["Apart",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Apart"]],ExpressionUUID->
  "87dc88f3-5eb9-482e-9644-3d16f5e911cc"],
 ", and ",
 Cell[BoxData[
  ButtonBox["Together",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Together"]],ExpressionUUID->
  "a8f34937-f07c-4e83-854a-8f50e427c8fa"],
 ".\n\nCertainly, ",
 Cell[BoxData[
  ButtonBox["D",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/D"]],ExpressionUUID->
  "3936c2da-8202-4a56-845c-5695acb245bb"],
 " and ",
 Cell[BoxData[
  ButtonBox["Integrate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Integrate"]],ExpressionUUID->
  "38906021-eceb-4049-b21b-fcf029041078"],
 " are two very frequently used symbolic computing functions for calculus \
students. They are discussed in Units 5 and 9."
}], "Text",
 CellChangeTimes->{{3.642004797348151*^9, 3.6420048371987123`*^9}, {
   3.642004878283304*^9, 3.642005306022366*^9}, {3.642006621474221*^9, 
   3.6420066318360233`*^9}, {3.6420066620144997`*^9, 
   3.6420067310338793`*^9}, {3.642006779277136*^9, 3.6420068271493845`*^9}, {
   3.6420069954451923`*^9, 3.6420070289838915`*^9}, {3.6420076918126383`*^9, 
   3.642007708175558*^9}, {3.642007756442772*^9, 3.6420077580374107`*^9}, 
   3.642458682807392*^9, {3.648298501336519*^9, 3.6482985024771442`*^9}, {
   3.6483006680221605`*^9, 3.648300669953271*^9}, {3.648300764026479*^9, 
   3.648300765913587*^9}, {3.648300827401991*^9, 3.6483008282090364`*^9}, {
   3.6483008661921415`*^9, 3.648300916876949*^9}, {3.6483009600183363`*^9, 
   3.6483010022566767`*^9}, {3.648301130760799*^9, 3.6483011511279283`*^9}, {
   3.6483015150438843`*^9, 3.648301567854868*^9}, {3.6483016031922035`*^9, 
   3.6483016287911654`*^9}, {3.648313912169465*^9, 3.6483139383156323`*^9}, {
   3.648313984290344*^9, 3.6483140042930884`*^9}, {3.6483140592399464`*^9, 
   3.648314101826764*^9}},ExpressionUUID->"73699d30-0ffa-4198-bb95-\
76ad1ce1901f"],

Cell[TextData[Cell[BoxData[
 ButtonBox["Simplify",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Simplify"]],
 FontWeight->
  "Bold",ExpressionUUID->"ee6986e8-096a-4004-89ce-3f06d9f1bdf2"]], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.6436537426852007`*^9, 3.6436537443252964`*^9}, 
   3.644443420351796*^9},ExpressionUUID->"f1d3aadb-d908-4c89-baeb-\
519fa8a88198"],

Cell[TextData[{
 "It performs algebraic and other operations on the input and returns the \
simplest form it can find. Since ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does not simplify the output of other built-in functions, ",
 Cell[BoxData[
  ButtonBox["Simplify",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Simplify"]],ExpressionUUID->
  "acbfdaee-4031-485b-9576-66efab0c0576"],
 " is possibly the most frequently applied function when we do symbolic \
computing."
}], "Text",
 CellChangeTimes->{{3.6436543628862667`*^9, 3.6436544563587017`*^9}, {
   3.6436545438627944`*^9, 3.6436546441346207`*^9}, 3.6482985036494894`*^9, 
   3.6483144709304237`*^9},ExpressionUUID->"b3303afc-b292-4108-a81e-\
3ab81b61134b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"3", "x", 
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}]}], "+", 
  RowBox[{"2", 
   RowBox[{"x", "^", "2"}]}], "+", "1"}]], "Input",ExpressionUUID->"31ccb1fa-\
3d81-48b0-bd34-4cc4092be839"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"3", " ", "x", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.642006947196593*^9, {3.648416871835991*^9, 3.64841690171498*^9}, 
   3.648417159511318*^9, 
   3.6484173244795074`*^9},ExpressionUUID->"ca640b23-81b1-4246-bfe8-\
71c843b6034e"]
}, Open  ]],

Cell[TextData[{
 "It turns out that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does nothing except rearranging the order of the input polynomial. In this \
case, ",
 Cell[BoxData[
  ButtonBox["Simplify",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Simplify"]],ExpressionUUID->
  "305b06b4-20be-4e13-88b1-819f6691538f"],
 " can force ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to combine like terms."
}], "Text",
 CellChangeTimes->{{3.6483143624815755`*^9, 3.6483144204181356`*^9}, {
  3.648314507247162*^9, 3.648314536782802*^9}, {3.648314629328517*^9, 
  3.648314632360815*^9}},ExpressionUUID->"718f227c-a7ec-440c-8e03-\
66d4c387a0ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"3", "x", 
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}]}], "+", 
   RowBox[{"2", 
    RowBox[{"x", "^", "2"}]}], "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.642006948805975*^9, 3.6420069524317474`*^9}, 
   3.643653754449885*^9},ExpressionUUID->"5aab7fec-5f5b-479a-89e0-\
7a5ce287f1f6"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", "x"}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.642006952712993*^9, 3.6436537554409394`*^9, {3.64841687186724*^9, 
   3.648416901730604*^9}, 3.648417159527012*^9, 
   3.6484173244952*^9},ExpressionUUID->"378a9b3d-1160-44af-993b-4d8dafae6905"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{"-", "x"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "x"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.642005366251517*^9, 3.642005402807021*^9}, 
   3.642005446142559*^9},ExpressionUUID->"4eed787b-8d65-4410-a857-\
f91be1ba7f51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "5"]}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "x"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6420054035882673`*^9, 3.6420054467363067`*^9, 3.642005480147282*^9, 
   3.643654531487069*^9, {3.648416871882865*^9, 3.6484169017618613`*^9}, {
   3.648417149900564*^9, 3.6484171595738835`*^9}, 
   3.648417324542005*^9},ExpressionUUID->"68b1d561-1e46-49ec-b40c-\
d1cc4f88c727"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"%", ",", "x"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"differentiation", ".", " ", "it"}], " ", 
    RowBox[{"doesn", "'"}], "t", " ", "give", " ", 
    SuperscriptBox["E", 
     RowBox[{"-", "x"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "x"}], "]"}], " ", "as", " ", "expected"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6420054108393164`*^9, 3.6420054130584235`*^9}, {
  3.6420054769281363`*^9, 3.6420056261127515`*^9}, {3.6436544887475824`*^9, 
  3.6436545138190403`*^9}},ExpressionUUID->"1afbf42e-1d25-40e5-8dbb-\
7829c1753fab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "5"]}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "5"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6420054135743117`*^9, 3.64200544979947*^9, 3.642005481741214*^9, 
   3.643654534378239*^9, {3.648416871929741*^9, 3.648416901793105*^9}, {
   3.648417153026157*^9, 3.6484171596051335`*^9}, 
   3.6484173245577726`*^9},ExpressionUUID->"83b51c14-c122-48e4-9fac-\
adfa58dc235c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"now", ",", " ", 
    RowBox[{"it", " ", "works"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.642005419668788*^9, 3.6420054241072583`*^9}, {
  3.6420055915441656`*^9, 
  3.6420056062809443`*^9}},ExpressionUUID->"975d43a5-3c60-4269-82c0-\
841615c5c4f2"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "x"}]], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.6436545368733826`*^9, {3.64841687196099*^9, 3.64841690180873*^9}, 
   3.648417159620761*^9, 
   3.6484173245733957`*^9},ExpressionUUID->"ceefb8b5-0e8a-4db4-8fd6-\
c458d92cf405"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 ButtonBox["Factor",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Factor"]],
 FontWeight->
  "Bold",ExpressionUUID->"1ddd205f-1d06-4425-9612-851fc3d8c691"]], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.64365380852603*^9, 3.643653809629095*^9}, 
   3.644443431744492*^9},ExpressionUUID->"0adc8d12-f48b-4744-8a76-\
ec1f743dda26"],

Cell["It factors a polynomial.", "Text",
 CellChangeTimes->{{3.643654152998063*^9, 3.643654154207137*^9}, 
   3.64365427333506*^9},ExpressionUUID->"40a7353c-fdf1-4c6a-9eb3-\
5c46ac9f3989"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], "+", 
   RowBox[{"3", "x"}], "-", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.642005671355836*^9, 
  3.6420057050025406`*^9}},ExpressionUUID->"9eca10fe-e979-4b97-acdd-\
52957d96258b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6420056867335253`*^9, 3.642005706627711*^9}, {
   3.648416871976616*^9, 3.648416901824354*^9}, 3.6484171596520095`*^9, 
   3.648417324604645*^9},ExpressionUUID->"466d2fb4-56f6-449e-8401-\
22ea19e4d58d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   RowBox[{"3.1", " ", "x"}], "-", "0.32"}], "]"}]], "Input",
 CellChangeTimes->{{3.643654308821121*^9, 
  3.643654326474151*^9}},ExpressionUUID->"5d68646b-e9f5-4905-a88a-\
104e9093461c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "0.1`"}], "+", 
    RowBox[{"1.`", " ", "x"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"3.2`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.`", " ", "x"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.64365432874928*^9, {3.64841687202349*^9, 3.648416901855604*^9}, 
   3.648417159667633*^9, 
   3.64841732462034*^9},ExpressionUUID->"16311aed-cc5d-49b3-8b66-\
925a3c88cd99"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 ButtonBox["Expand",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Expand"]],
 FontWeight->
  "Bold",ExpressionUUID->"6f7f069d-4ce4-4ec8-9648-8c863e39ad46"]], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.6436538224218383`*^9, 3.6436538234209733`*^9}, 
   3.6444434416681557`*^9},ExpressionUUID->"8b763ed0-422b-4e3f-bb5c-\
8a1f58581608"],

Cell[TextData[{
 "It does the opposite operation of ",
 Cell[BoxData[
  ButtonBox["Factor",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Factor"]],ExpressionUUID->
  "824dce4c-c497-4d6d-8804-750b76f1043f"],
 "."
}], "Text",
 CellChangeTimes->{{3.643654084526081*^9, 3.6436541076135035`*^9}, 
   3.648301225522051*^9, {3.6483016731389294`*^9, 
   3.6483016734044743`*^9}},ExpressionUUID->"538cc483-8b22-474a-a9d8-\
4e79a32df0a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "-", "2"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"x", "+", "5"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642005715943116*^9, 
  3.6420057269462676`*^9}},ExpressionUUID->"b15abc51-994b-4d21-b85d-\
d01c2dd7d040"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "10"}], "+", 
  RowBox[{"3", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{
  3.642005727509077*^9, 3.6436540556474004`*^9, {3.648416872070365*^9, 
   3.6484169018712296`*^9}, 3.648417159698884*^9, 
   3.648417324635895*^9},ExpressionUUID->"7a2efaa5-3f38-4366-8d95-\
c5275254f718"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.643654058186553*^9, 
  3.6436540635208626`*^9}},ExpressionUUID->"506ee0d7-165a-487d-837d-\
916c3e44405b"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   RowBox[{"3", " ", "x"}], "-", "10"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6436540640028877`*^9, {3.648416872101615*^9, 3.64841690190248*^9}, 
   3.648417159730134*^9, 
   3.648417324667145*^9},ExpressionUUID->"121abf27-0318-4695-8055-\
3ee1558abffa"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 ButtonBox["Apart",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Apart"]],
 FontWeight->
  "Bold",ExpressionUUID->"5332ed78-c26d-4ba7-84d7-0a0f841a127d"]], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.643653837013685*^9, 3.643653837941738*^9}, 
   3.644443451779933*^9},ExpressionUUID->"656853fa-d404-476e-8c89-\
899c2166fe91"],

Cell[TextData[{
 "Calculus II covers the method of partial fractions, which decomposes a \
rational expression into partial fractions, in the chapter on integration \
techniques. Solving differential equations may also require the skill. ",
 Cell[BoxData[
  ButtonBox["Apart",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Apart"]],ExpressionUUID->
  "d6b58dc6-20dc-43f8-a417-f8946802ea3b"],
 " is for the job."
}], "Text",
 CellChangeTimes->{
  3.6436539192234664`*^9, {3.6482985046494865`*^9, 3.648298505759197*^9}, 
   3.648301252280534*^9, 3.6483012926037693`*^9, {3.648301342352527*^9, 
   3.648301358139403*^9}, {3.648301429555361*^9, 
   3.64830147297577*^9}},ExpressionUUID->"9cdf137f-3e18-45d1-976e-\
32b838f4326d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apart", "[", " ", 
  FractionBox[
   RowBox[{
    RowBox[{"5", "x"}], "+", "6"}], 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", 
    RowBox[{"3", "x"}], "-", "10"}]], "]"}]], "Input",
 CellChangeTimes->{{3.642005737088235*^9, 3.642005746262065*^9}, {
  3.6420057773969913`*^9, 3.64200581912422*^9}, {3.6420059819107823`*^9, 
  3.642006057579047*^9}, {3.642006088816143*^9, 
  3.6420061012556677`*^9}},ExpressionUUID->"39094b6e-c00f-4d7a-801f-\
3f1986ac757a"],

Cell[BoxData[
 RowBox[{
  FractionBox["16", 
   RowBox[{"7", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}], ")"}]}]], "+", 
  FractionBox["19", 
   RowBox[{"7", " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", "x"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.6420058008691597`*^9, {3.6484168721485615`*^9, 3.648416901918105*^9}, 
   3.648417159745761*^9, 
   3.64841732468277*^9},ExpressionUUID->"ada7e54e-3e9e-45eb-a2c6-\
0bea385f6e01"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 ButtonBox["Together",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Together"]],
 FontWeight->
  "Bold",ExpressionUUID->"15f8683d-9560-4771-b0e9-60559d5a1b69"]], "Text",
 CellDingbat->"\[FilledDiamond]",
 CellChangeTimes->{{3.643653881549341*^9, 3.643653883389398*^9}, 
   3.6444434623910027`*^9},ExpressionUUID->"c390d6a8-c19f-4d62-b929-\
b3da347f5987"],

Cell[TextData[{
 "It is the opposite operation of ",
 Cell[BoxData[
  ButtonBox["Apart",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Apart"]],ExpressionUUID->
  "71dd1382-e035-4241-a901-ed4e36c06ec1"],
 ". It combines multiple rational expressions into a single rational function."
}], "Text",
 CellChangeTimes->{{3.6436539290611176`*^9, 3.6436540397175407`*^9}, 
   3.648298506790453*^9, 3.6483013058035*^9, {3.648301693018097*^9, 
   3.6483016933152776`*^9}},ExpressionUUID->"62580a13-9012-446c-ae8d-\
f92a5368edcc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{
   FractionBox["16", 
    RowBox[{"7", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}]}]], "+", 
   FractionBox["19", 
    RowBox[{"7", " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", "x"}], ")"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.6420065100231557`*^9, 
  3.642006525404749*^9}},ExpressionUUID->"b674e6b7-ba97-4ef3-abdf-\
00b2df38b452"],

Cell[BoxData[
 FractionBox[
  RowBox[{"6", "+", 
   RowBox[{"5", " ", "x"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"5", "+", "x"}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.6420065258425922`*^9, {3.6484168721798096`*^9, 3.648416901949354*^9}, 
   3.6484171597770104`*^9, 
   3.6484173246983943`*^9},ExpressionUUID->"1a169e4d-a7e5-40da-901a-\
6d7bc4390167"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 3},ExpressionUUID->"abfe9c40-831c-428e-90e0-3b5982d3dd30"],

Cell[TextData[{
 "Somehow",
 StyleBox[" Mathematica",
  FontSlant->"Italic"],
 " occupies the whole computer screen, and you seem to have lost any control \
of your computer. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is possibly in Full Screen mode.",
 " ",
 "To exit the mode, right click the mouse at any point on the screen, and \
click Toggle Full Screen at the bottom of the pop-up menu."
}], "Text",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{{3.6420133606493692`*^9, 3.642013418944837*^9}, {
   3.642013491164681*^9, 3.6420135869166102`*^9}, {3.6420136279867153`*^9, 
   3.6420136578379717`*^9}, {3.6420136901169753`*^9, 3.642013868675448*^9}, {
   3.6420139302822847`*^9, 3.642013957288189*^9}, {3.6420260204583197`*^9, 
   3.6420260223336744`*^9}, {3.642170527395706*^9, 3.642170533124473*^9}, 
   3.642458714910132*^9, {3.6428890299334035`*^9, 3.6428890416689744`*^9}, {
   3.6428890913315425`*^9, 3.642889091816242*^9}, {3.6482985141211605`*^9, 
   3.6482985151367865`*^9}},ExpressionUUID->"338b7898-a670-4f09-9c34-\
9d6c2a208db8"],

Cell["", "Text",ExpressionUUID->"c0324e3a-5277-4ad7-9f4a-6dffe1f98102"],

Cell["\[Copyright] 2015-2023 by David Wang, dwang@liberty.edu", "Text",
 CellDingbat->"\[FivePointedStar]",
 CellChangeTimes->{{3.6483149492842007`*^9, 3.648314954832594*^9}, {
   3.648314991811002*^9, 3.6483150274926786`*^9}, {3.648315066674386*^9, 
   3.648315076942264*^9}, {3.6483151278759356`*^9, 3.6483151667054334`*^9}, {
   3.6483152049979057`*^9, 3.648315328479961*^9}, {3.648315362562394*^9, 
   3.6483154831168585`*^9}, {3.6483155255553427`*^9, 3.6483155884987645`*^9}, 
   3.6483156269313216`*^9, {3.6483333700957375`*^9, 3.6483333731275244`*^9}, {
   3.648333422326994*^9, 3.6483334307820888`*^9}, {3.6483334644617662`*^9, 
   3.648333471009923*^9}, {3.7436051016221666`*^9, 3.7436051132188187`*^9}, {
   3.7436062080242553`*^9, 3.743606224854741*^9}, {3.901695392865554*^9, 
   3.9016953938689113`*^9}},ExpressionUUID->"1451f27a-53a6-4116-8ff1-\
7f5a4dc864ac"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1016.25, 611.625},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"06bd7a59-3fcc-4f54-83c2-3c8402b4a36a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Basic introduction"->{
  Cell[7084, 145, 336, 6, 58, "Subtitle",ExpressionUUID->"1c59bec7-601a-467f-8fe4-e6666507d408",
   CellTags->"Basic introduction"]},
 "Some tricks"->{
  Cell[358295, 6659, 230, 4, 70, "Subtitle",ExpressionUUID->"e4f5f647-0186-4963-908a-66d08a0da254",
   CellTags->"Some tricks"]},
 "Assigning values to variables"->{
  Cell[365485, 6861, 352, 7, 70, "Subtitle",ExpressionUUID->"28514f79-90e1-474e-908d-0e5585d11c04",
   CellTags->"Assigning values to variables"]},
 "Adding comments"->{
  Cell[376319, 7166, 277, 5, 70, "Subtitle",ExpressionUUID->"3683830f-a321-47f3-8e67-b7514d3b8994",
   CellTags->"Adding comments"]},
 "More about palettes"->{
  Cell[389201, 7414, 473, 13, 70, "Subtitle",ExpressionUUID->"ef6d9f64-da0b-424a-830f-9fb9673fabf0",
   CellTags->"More about palettes"]},
 "Symbolic computing"->{
  Cell[404007, 7843, 334, 6, 70, "Subtitle",ExpressionUUID->"c2e3e2c0-2546-4316-bad9-cbf9e0ce598c",
   CellTags->"Symbolic computing"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Basic introduction", 424953, 8467},
 {"Some tricks", 425105, 8470},
 {"Assigning values to variables", 425271, 8473},
 {"Adding comments", 425441, 8476},
 {"More about palettes", 425601, 8479},
 {"Symbolic computing", 425765, 8482}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 866, 19, 106, "Title",ExpressionUUID->"1a388429-f445-48ad-a844-f8e70e7fcf97"],
Cell[1449, 43, 2324, 31, 38, "Text",ExpressionUUID->"d4ce0e78-3089-4f80-90fc-0e50a8cf6dac"],
Cell[3776, 76, 938, 14, 35, "ItemNumbered",ExpressionUUID->"93c14b48-6d46-41ea-9dc1-ea8f323dd4e4"],
Cell[4717, 92, 505, 9, 35, "ItemNumbered",ExpressionUUID->"37576309-38e0-4fd7-af74-773c36b76359"],
Cell[5225, 103, 695, 11, 35, "ItemNumbered",ExpressionUUID->"502359d6-d6de-4d9f-a3b8-530c09f947f1"],
Cell[5923, 116, 450, 8, 35, "ItemNumbered",ExpressionUUID->"208ed25e-b16c-4a27-821a-a1e730fad9d5"],
Cell[6376, 126, 405, 7, 35, "ItemNumbered",ExpressionUUID->"887a933c-d67a-48d7-92e7-ea25f178b348"],
Cell[6784, 135, 275, 6, 35, "ItemNumbered",ExpressionUUID->"47d24f7c-9c97-4e9d-b2ea-1535eaa474d9"],
Cell[CellGroupData[{
Cell[7084, 145, 336, 6, 58, "Subtitle",ExpressionUUID->"1c59bec7-601a-467f-8fe4-e6666507d408",
 CellTags->"Basic introduction"],
Cell[7423, 153, 1231, 29, 89, "Text",ExpressionUUID->"9d2f6944-0781-4adf-b2ae-0ffb3e17cdee"],
Cell[CellGroupData[{
Cell[8679, 186, 179, 4, 31, "Input",ExpressionUUID->"8ee96925-05ac-4f7d-b134-67837e7d5850"],
Cell[8861, 192, 227, 4, 35, "Output",ExpressionUUID->"207e4d9c-72f5-42f3-b6cf-270349c59c2a"]
}, Open  ]],
Cell[9103, 199, 642, 13, 38, "Text",ExpressionUUID->"ab78c85e-7636-4422-90fa-53f3e375cdd5"],
Cell[9748, 214, 772, 18, 89, "Text",ExpressionUUID->"758460c8-698a-439a-92e9-03bddcc937d1"],
Cell[10523, 234, 649, 12, 38, "Text",ExpressionUUID->"18d8479c-293a-4b3c-88e9-5233a2882d25"],
Cell[11175, 248, 609, 11, 70, "Text",ExpressionUUID->"ef2ab1fe-7b3f-4617-bedd-95887bbd05ed"],
Cell[11787, 261, 1936, 49, 70, "Text",ExpressionUUID->"aacec43a-6e98-40ea-b45a-246f853e98b4"],
Cell[13726, 312, 278, 8, 70, "Text",ExpressionUUID->"2ae67036-604b-4968-83a8-e64389aa7b66"],
Cell[14007, 322, 254218, 4174, 70, "Text",ExpressionUUID->"5617651d-b2df-423e-a12a-2dc0845cab27"],
Cell[268228, 4498, 2104, 47, 70, "Text",ExpressionUUID->"3aeb5c22-5ba6-49bf-933a-f79031394789"],
Cell[270335, 4547, 396, 11, 70, "Text",ExpressionUUID->"71e13202-e48e-4b1d-993a-99bdc7dbc891"],
Cell[270734, 4560, 4498, 108, 70, "Text",ExpressionUUID->"a8f67f4a-dbc5-43b3-97d3-7bb98c0d6211"],
Cell[275235, 4670, 3353, 60, 70, "Text",ExpressionUUID->"e89323ec-2506-4d0e-a969-25625aa4d48f"],
Cell[278591, 4732, 333, 7, 70, "Text",ExpressionUUID->"cda20c18-dc7b-4612-96c5-24559cd9f416"],
Cell[278927, 4741, 845, 19, 70, "Text",ExpressionUUID->"6effdac2-086e-484c-881f-abbe501dbb7f"],
Cell[279775, 4762, 839, 13, 70, "Text",ExpressionUUID->"6e2d1b5f-bd0e-4a49-ae16-beaf115f083f"],
Cell[CellGroupData[{
Cell[280639, 4779, 277, 8, 70, "Input",ExpressionUUID->"e0430d6f-d462-43d5-9266-fd1bc4bfd46f"],
Cell[280919, 4789, 245, 5, 70, "Output",ExpressionUUID->"cafb6c93-6582-45bb-818f-749ad4bc0a01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281201, 4799, 252, 7, 70, "Input",ExpressionUUID->"7af82669-e2d8-4a50-89e6-af2a77533f21"],
Cell[281456, 4808, 247, 5, 70, "Output",ExpressionUUID->"31867473-2605-4cf3-bdcd-1fd6bdbde2c0"]
}, Open  ]],
Cell[281718, 4816, 1307, 27, 70, "Text",ExpressionUUID->"e35bbecb-c9b7-431b-b49b-74abd0342013"],
Cell[CellGroupData[{
Cell[283050, 4847, 252, 8, 70, "Input",ExpressionUUID->"141af31e-33dc-4fc1-93d3-852915393d85"],
Cell[283305, 4857, 228, 4, 70, "Output",ExpressionUUID->"7762bd47-58cb-4cfd-b87a-265ad24d3907"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283570, 4866, 334, 9, 70, "Input",ExpressionUUID->"5e1d2077-eb70-4946-9c40-528264c32d3b"],
Cell[283907, 4877, 230, 4, 70, "Output",ExpressionUUID->"2610ed9c-bf9f-4ee8-bca0-0045143f9427"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284174, 4886, 309, 9, 70, "Input",ExpressionUUID->"f0be8135-a1f8-4c72-8ef3-aba02a7552a6"],
Cell[284486, 4897, 230, 4, 70, "Output",ExpressionUUID->"443300b7-6396-4d95-864a-73906b622b6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284753, 4906, 347, 11, 70, "Input",ExpressionUUID->"e169ef8f-aa00-464f-83ef-c9f137a65cc1"],
Cell[285103, 4919, 2518, 84, 70, "Output",ExpressionUUID->"215bf2dc-0d90-4103-a4e8-481031dc6f27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287658, 5008, 496, 15, 70, "Input",ExpressionUUID->"148a8330-1727-4631-83a6-3f59185682cb"],
Cell[288157, 5025, 729, 18, 70, "Output",ExpressionUUID->"30b2eeea-0578-4fc0-bab8-65a8fb99ca93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288923, 5048, 580, 15, 70, "Input",ExpressionUUID->"eb907dac-6d21-47a1-9aa8-db41e849c6ca"],
Cell[289506, 5065, 749, 18, 70, "Output",ExpressionUUID->"b3517665-5c60-44da-8534-8f86b174b2f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290292, 5088, 436, 13, 70, "Input",ExpressionUUID->"d7cf6cca-af23-48b2-a363-44995155988e"],
Cell[290731, 5103, 729, 18, 70, "Output",ExpressionUUID->"012ddb9c-7537-4193-84d5-94891b66ccd5"]
}, Open  ]],
Cell[291475, 5124, 446, 7, 70, "Text",ExpressionUUID->"9b249311-164e-474a-abe4-f180bdae1e87"],
Cell[291924, 5133, 592, 17, 70, "Text",ExpressionUUID->"5f6b29d6-7332-4eb8-b4f4-dc10b4db777e"],
Cell[292519, 5152, 852, 25, 70, "ItemNumbered",ExpressionUUID->"0fac16c4-8cb6-4936-90e3-e8b2cc7535de"],
Cell[293374, 5179, 2101, 64, 70, "ItemNumbered",ExpressionUUID->"972a5e52-4eb9-4f9f-bbd0-c8ad145152de"],
Cell[295478, 5245, 762, 18, 70, "ItemNumbered",ExpressionUUID->"eea27573-c730-4628-9d25-93dc5b9c2cc2"],
Cell[296243, 5265, 178, 3, 70, "Text",ExpressionUUID->"148e205c-be69-4bfd-b4a3-fdfe52d27f0c"],
Cell[CellGroupData[{
Cell[296446, 5272, 185, 4, 70, "Input",ExpressionUUID->"33965112-b046-4bae-a96e-59a3fa4ca60e"],
Cell[296634, 5278, 240, 5, 70, "Output",ExpressionUUID->"eef2bdef-2779-4246-bf89-5701b787afd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296911, 5288, 140, 4, 70, "Input",ExpressionUUID->"1a0298ba-dab4-48d4-82db-6edd5084b1a1"],
Cell[297054, 5294, 238, 5, 70, "Output",ExpressionUUID->"6571502d-470a-48a9-8519-436fa89ebbe8"]
}, Open  ]],
Cell[297307, 5302, 786, 18, 70, "Text",ExpressionUUID->"bd125971-9253-4837-a567-700ced9c925f"],
Cell[CellGroupData[{
Cell[298118, 5324, 188, 4, 70, "Input",ExpressionUUID->"d3a4bccb-a80a-4127-b951-38bea2b16ecf"],
Cell[298309, 5330, 241, 4, 70, "Output",ExpressionUUID->"516efe83-57dc-4a19-a7b1-203ec658a792"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298587, 5339, 381, 10, 70, "Input",ExpressionUUID->"93d6c88c-623c-4956-9196-22df9b27a4bf"],
Cell[298971, 5351, 240, 4, 70, "Output",ExpressionUUID->"5630323e-f652-4ee8-a6bb-379d3e86d4fb"]
}, Open  ]],
Cell[299226, 5358, 919, 15, 70, "Text",ExpressionUUID->"f0c33d97-e9eb-4c78-bc5b-ea8125bef81a"],
Cell[300148, 5375, 376, 9, 70, "Text",ExpressionUUID->"6594fc35-3d9c-45ad-8afb-5c6fcf20114f"],
Cell[CellGroupData[{
Cell[300549, 5388, 475, 10, 70, "Input",ExpressionUUID->"70d8bf78-3f32-4dd3-83e5-9a9648f4d92e"],
Cell[301027, 5400, 328, 6, 70, "Output",ExpressionUUID->"142639df-77e2-4b0f-ae8b-37b1dc928bf5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301392, 5411, 422, 9, 70, "Input",ExpressionUUID->"177ede3f-2179-40d1-a1f2-28e6ef0ef52a"],
Cell[301817, 5422, 260, 5, 70, "Output",ExpressionUUID->"b00118e5-823b-4ae1-aec4-e9c7e6945a15"]
}, Open  ]],
Cell[302092, 5430, 733, 12, 70, "Text",ExpressionUUID->"825aacec-f3cf-4b69-bb78-e74ab12bfd85"],
Cell[CellGroupData[{
Cell[302850, 5446, 452, 10, 70, "Input",ExpressionUUID->"11382733-a0c2-483b-94cf-6021d588626c"],
Cell[303305, 5458, 325, 7, 70, "Output",ExpressionUUID->"3f7c233c-8af5-4152-ae41-bac1837b24c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303667, 5470, 303, 8, 70, "Input",ExpressionUUID->"132ec9d7-2a15-4c6f-84e5-f6862638e834"],
Cell[303973, 5480, 300, 7, 70, "Output",ExpressionUUID->"38b93595-0bb9-4b98-acec-d73f9f2b5fcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304310, 5492, 288, 7, 70, "Input",ExpressionUUID->"1dd1a168-9ea0-43e7-8e14-1da19715ada7"],
Cell[304601, 5501, 280, 6, 70, "Output",ExpressionUUID->"a96d51ee-744f-4a3f-b0a6-84711481e36c"]
}, Open  ]],
Cell[304896, 5510, 533, 10, 70, "Text",ExpressionUUID->"02be5cc1-9096-487d-868f-3f7d1622c50c"],
Cell[CellGroupData[{
Cell[305454, 5524, 206, 5, 70, "Input",ExpressionUUID->"6d736a81-c845-4d3f-b054-bfaed8838d39"],
Cell[305663, 5531, 227, 4, 70, "Output",ExpressionUUID->"600f8d34-3959-4afe-9999-5232480c707c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305927, 5540, 563, 14, 70, "Input",ExpressionUUID->"b67c3024-746b-4f8e-9b09-fa1553eb9949"],
Cell[306493, 5556, 284, 7, 70, "Output",ExpressionUUID->"261a9c93-02a6-4987-b32f-363e0d8a5ca8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306814, 5568, 233, 6, 70, "Input",ExpressionUUID->"76c5d225-0256-4558-8dc7-2c0139e1d5f4"],
Cell[307050, 5576, 279, 7, 70, "Output",ExpressionUUID->"47b3835d-4fad-49d7-8fbe-0be765a62cec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307366, 5588, 439, 11, 70, "Input",ExpressionUUID->"41e2372c-0423-45ba-ab81-9254e584fb50"],
Cell[307808, 5601, 249, 5, 70, "Output",ExpressionUUID->"92a5b2eb-736f-4d90-8cce-0c47c9e2845d"]
}, Open  ]],
Cell[308072, 5609, 522, 10, 70, "Text",ExpressionUUID->"d40bc195-0606-4f77-a735-6e4acc4e7fe9"],
Cell[CellGroupData[{
Cell[308619, 5623, 560, 16, 70, "Input",ExpressionUUID->"648477b7-98dd-4ab7-9e29-1ec37b943c82"],
Cell[309182, 5641, 375, 10, 70, "Output",ExpressionUUID->"f8827e9e-b932-4ae9-99f3-62ba4786b57b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309594, 5656, 420, 14, 70, "Input",ExpressionUUID->"95f24f4c-8373-42ca-b151-77d894025fa7"],
Cell[310017, 5672, 230, 4, 70, "Output",ExpressionUUID->"d4f426f2-3606-4ad8-9f10-72e1f34a82c3"]
}, Open  ]],
Cell[310262, 5679, 2185, 41, 70, "Text",ExpressionUUID->"0b3e1a71-a81f-4269-8788-8864125efcf8"],
Cell[312450, 5722, 583, 15, 70, "Text",ExpressionUUID->"37de2854-27f6-4b66-8054-b9338abcd60b"],
Cell[CellGroupData[{
Cell[313058, 5741, 472, 11, 70, "Input",ExpressionUUID->"3d3f630d-cc2a-444b-9c23-9d77a10094cf"],
Cell[313533, 5754, 9667, 167, 70, "Output",ExpressionUUID->"0ed8cd0d-3ebf-46cf-aeab-3d2221ce9e56"]
}, Open  ]],
Cell[323215, 5924, 412, 8, 70, "Text",ExpressionUUID->"56597214-9e1a-45c1-aa50-d990f803e8ec"],
Cell[CellGroupData[{
Cell[323652, 5936, 1181, 31, 70, "Input",ExpressionUUID->"4b19003e-11b8-43a3-8e8a-86754b3c6665"],
Cell[324836, 5969, 19205, 325, 70, "Output",ExpressionUUID->"0c627715-4148-45c9-a76a-e370127e3db2"]
}, Open  ]],
Cell[344056, 6297, 799, 14, 70, "Text",ExpressionUUID->"cbaccbae-a766-47e0-8bc4-dda321fa318a"],
Cell[CellGroupData[{
Cell[344880, 6315, 1115, 24, 70, "Input",ExpressionUUID->"603c1816-797b-49e9-8b26-8ebb61f2811f"],
Cell[345998, 6341, 858, 20, 70, "Output",ExpressionUUID->"74151a3a-c3af-4324-9f82-567364450034"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346893, 6366, 763, 20, 70, "Input",ExpressionUUID->"a8768c8f-26d1-4e58-8366-7bdb72b579f7"],
Cell[347659, 6388, 499, 12, 70, "Output",ExpressionUUID->"c7af6f3e-3a22-4478-b7a3-87e42337bdfe"]
}, Open  ]],
Cell[348173, 6403, 1548, 24, 70, "Text",ExpressionUUID->"d8342db0-cddc-4134-9ecb-4434d7d8b253"],
Cell[349724, 6429, 4004, 124, 70, "Text",ExpressionUUID->"5c60a6b7-c011-40ac-9ad3-294f6652e1fc"],
Cell[353731, 6555, 298, 6, 70, "Text",ExpressionUUID->"4eef409d-40d5-4dc3-8fd2-425bb1eb1878"],
Cell[354032, 6563, 595, 10, 70, "Text",ExpressionUUID->"e99cb657-c655-46ab-92a1-6212e1b1db1e"],
Cell[CellGroupData[{
Cell[354652, 6577, 317, 8, 70, "Input",ExpressionUUID->"fc0d22c4-854e-4346-ac30-214826505a70"],
Cell[354972, 6587, 225, 4, 70, "Output",ExpressionUUID->"8618ef16-5e42-42b4-9bdd-61aed6bd0081"]
}, Open  ]],
Cell[355212, 6594, 518, 11, 70, "Text",ExpressionUUID->"a55b1be7-0d25-4232-b9e3-3e091bdafa1a"],
Cell[355733, 6607, 2525, 47, 70, "Text",ExpressionUUID->"b6a86b39-327e-43ec-8fcf-544725629b8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358295, 6659, 230, 4, 70, "Subtitle",ExpressionUUID->"e4f5f647-0186-4963-908a-66d08a0da254",
 CellTags->"Some tricks"],
Cell[358528, 6665, 824, 14, 70, "Text",ExpressionUUID->"d165af80-4cb6-47d9-8430-5558aa7075f1"],
Cell[CellGroupData[{
Cell[359377, 6683, 277, 8, 70, "Input",ExpressionUUID->"3783081c-b40d-4162-ba60-4efe7e7f5c3e"],
Cell[359657, 6693, 275, 5, 70, "Output",ExpressionUUID->"feb96af1-82fa-4139-9376-1165e1bcab24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359969, 6703, 182, 4, 70, "Input",ExpressionUUID->"0677ed08-244e-45c4-8636-26d1c2614325"],
Cell[360154, 6709, 249, 4, 70, "Output",ExpressionUUID->"fd408b02-2e03-4d56-8caa-3cc1de675bbf"]
}, Open  ]],
Cell[360418, 6716, 265, 7, 70, "Input",ExpressionUUID->"4bbbb209-846f-4a76-8991-e4f62260a47b"],
Cell[360686, 6725, 449, 13, 70, "Text",ExpressionUUID->"52912370-7f4b-43b5-b395-4495fdc9fb8c"],
Cell[CellGroupData[{
Cell[361160, 6742, 179, 4, 70, "Input",ExpressionUUID->"2d8f2945-c8f3-44b9-8f66-284fdd2bd5d4"],
Cell[361342, 6748, 259, 4, 70, "Output",ExpressionUUID->"18b2a86a-ba68-4743-b144-01a4a17635cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361638, 6757, 177, 4, 70, "Input",ExpressionUUID->"89f41543-6c1e-4783-91d2-afbf3df1d35f"],
Cell[361818, 6763, 227, 4, 70, "Output",ExpressionUUID->"70d79203-2ced-46c3-80c3-b326188ddef4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362082, 6772, 174, 4, 70, "Input",ExpressionUUID->"ba59a94e-786f-4253-b241-872e5cad2948"],
Cell[362259, 6778, 232, 4, 70, "Output",ExpressionUUID->"d313daf0-50a9-40e7-b4a2-a8a62d8a3917"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362528, 6787, 154, 3, 70, "Input",ExpressionUUID->"942971c5-7d89-414e-ade1-80d820280070"],
Cell[362685, 6792, 228, 4, 70, "Output",ExpressionUUID->"5150b4f7-f06f-495e-9415-96b8a9abd31e"]
}, Open  ]],
Cell[362928, 6799, 1171, 28, 70, "Text",ExpressionUUID->"19fa3e88-5517-40ad-ae02-377124c02235"],
Cell[364102, 6829, 1346, 27, 70, "Text",ExpressionUUID->"bda61389-38ed-4513-82e8-62c0ae43c1a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365485, 6861, 352, 7, 70, "Subtitle",ExpressionUUID->"28514f79-90e1-474e-908d-0e5585d11c04",
 CellTags->"Assigning values to variables"],
Cell[365840, 6870, 1684, 36, 70, "Text",ExpressionUUID->"7a15ccce-fc76-495e-864b-396d13f61659"],
Cell[367527, 6908, 873, 22, 70, "ItemNumbered",ExpressionUUID->"c6ae27a5-ecdf-44ee-b093-f144840e9837"],
Cell[368403, 6932, 880, 21, 70, "ItemNumbered",ExpressionUUID->"d0945515-d843-4b71-a235-79c0bfa6060b"],
Cell[CellGroupData[{
Cell[369308, 6957, 293, 7, 70, "ItemNumbered",ExpressionUUID->"e2d3c589-9467-4d30-b683-ed5bd1b49192"],
Cell[CellGroupData[{
Cell[369626, 6968, 347, 8, 70, "Input",ExpressionUUID->"c87970de-6bb4-457f-b62a-2390c6129db3"],
Cell[369976, 6978, 311, 6, 70, "Output",ExpressionUUID->"085caf2d-1b95-4310-aef0-b461bfe9422f"]
}, Open  ]]
}, Open  ]],
Cell[370314, 6988, 365, 10, 70, "Text",ExpressionUUID->"32eb008b-0140-43cb-81d7-01613b165e04"],
Cell[CellGroupData[{
Cell[370704, 7002, 131, 3, 70, "Input",ExpressionUUID->"15f4b00b-00db-4944-91fb-262cbdf76722"],
Cell[370838, 7007, 308, 5, 70, "Output",ExpressionUUID->"031e154e-382a-4d00-a8c9-c6e39956dadd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371183, 7017, 131, 3, 70, "Input",ExpressionUUID->"07a8ba48-4056-4643-83a6-4082326a874f"],
Cell[371317, 7022, 254, 4, 70, "Output",ExpressionUUID->"3de11b31-d071-4af2-9574-4f6e5aa5ac49"]
}, Open  ]],
Cell[371586, 7029, 287, 7, 70, "Input",ExpressionUUID->"2160da79-078d-4d63-87a5-11542f77da18"],
Cell[371876, 7038, 432, 12, 70, "Text",ExpressionUUID->"c74c2727-080b-4318-9f76-ab60cee1f110"],
Cell[CellGroupData[{
Cell[372333, 7054, 527, 12, 70, "Input",ExpressionUUID->"729e4230-ed83-4dfc-ad71-a6f28081c778"],
Cell[372863, 7068, 299, 5, 70, "Output",ExpressionUUID->"73bbe3c4-a7d0-41fb-9218-018c2a8267d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373199, 7078, 576, 12, 70, "Input",ExpressionUUID->"bc02f74f-5bae-4215-98bd-59232bd4f613"],
Cell[373778, 7092, 328, 6, 70, "Output",ExpressionUUID->"a053b4f4-fd0d-4131-98b3-0a058ab62c5c"]
}, Open  ]],
Cell[374121, 7101, 359, 8, 70, "Text",ExpressionUUID->"b2f76a49-225a-4544-a668-560d086efb75"],
Cell[CellGroupData[{
Cell[374505, 7113, 474, 11, 70, "Input",ExpressionUUID->"b4da3dcb-6bef-4a25-95ad-cf1a9b49862c"],
Cell[374982, 7126, 385, 8, 70, "Output",ExpressionUUID->"0b922052-6688-4d6c-b93b-f6a24ecb9696"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375404, 7139, 478, 11, 70, "Input",ExpressionUUID->"f8b49826-f831-4029-884e-7bbc891e93ef"],
Cell[375885, 7152, 385, 8, 70, "Output",ExpressionUUID->"ecd12c10-e825-4cea-b5ce-6bac5ee84a0c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[376319, 7166, 277, 5, 70, "Subtitle",ExpressionUUID->"3683830f-a321-47f3-8e67-b7514d3b8994",
 CellTags->"Adding comments"],
Cell[376599, 7173, 2171, 40, 70, "Text",ExpressionUUID->"926f1a24-c000-4e21-a68c-83b4a56170a3"],
Cell[378773, 7215, 8428, 144, 70, "Text",ExpressionUUID->"730db95b-be93-4c31-9297-f00d2609513c"],
Cell[387204, 7361, 517, 11, 70, "Text",ExpressionUUID->"b15239d3-b00f-407b-831c-96e49142fed7"],
Cell[CellGroupData[{
Cell[387746, 7376, 877, 22, 70, "Input",ExpressionUUID->"e0196604-37ff-40db-88ec-e53240760047"],
Cell[388626, 7400, 261, 3, 70, "Output",ExpressionUUID->"2200313c-fa21-4eec-b92e-ffbd869b6f50"],
Cell[388890, 7405, 262, 3, 70, "Output",ExpressionUUID->"eec5b53a-8a19-4500-a70b-d05a61db4a69"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[389201, 7414, 473, 13, 70, "Subtitle",ExpressionUUID->"ef6d9f64-da0b-424a-830f-9fb9673fabf0",
 CellTags->"More about palettes"],
Cell[389677, 7429, 1405, 21, 70, "Text",ExpressionUUID->"ee5a7c3c-fa09-4a77-9ddd-94730107f57b"],
Cell[391085, 7452, 583, 13, 70, "Text",ExpressionUUID->"431c03ad-16aa-44d5-acee-61e937579599"],
Cell[CellGroupData[{
Cell[391693, 7469, 177, 4, 70, "Input",ExpressionUUID->"ea0455c2-e249-4836-a53e-ef16315572e4"],
Cell[391873, 7475, 245, 4, 70, "Output",ExpressionUUID->"47f6e1e5-062f-4118-a690-dfdabdb2284e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392155, 7484, 407, 10, 70, "Input",ExpressionUUID->"6270975c-af3a-46b6-b30b-7e0db8468d54"],
Cell[392565, 7496, 230, 4, 70, "Output",ExpressionUUID->"a9120bc8-a522-4e92-9296-f0c31cd36258"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392832, 7505, 509, 12, 70, "Input",ExpressionUUID->"e501879b-42c8-41ac-9e09-334af20ed9ff"],
Cell[393344, 7519, 258, 5, 70, "Output",ExpressionUUID->"6911a966-28cb-4a14-aa9e-6af81357cbbd"]
}, Open  ]],
Cell[393617, 7527, 6443, 181, 70, "Text",ExpressionUUID->"70b17c0f-343e-46d0-bf1a-036615812245"],
Cell[CellGroupData[{
Cell[400085, 7712, 223, 6, 70, "Input",ExpressionUUID->"402e09fe-88d5-49b0-880d-64ad03c472bb"],
Cell[400311, 7720, 248, 5, 70, "Output",ExpressionUUID->"0c0e5a26-1e5e-4f2a-a213-948255e0b7ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400596, 7730, 458, 12, 70, "Input",ExpressionUUID->"d23b41d8-a53b-4724-b5ee-e8d62e286eac"],
Cell[401057, 7744, 232, 5, 70, "Output",ExpressionUUID->"32a00f3f-136b-4b3c-a9fa-f54bcc8822ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401326, 7754, 414, 11, 70, "Input",ExpressionUUID->"85341642-1f8c-4698-9ba2-0be53be289a8"],
Cell[401743, 7767, 234, 5, 70, "Output",ExpressionUUID->"d6ee720f-6552-42e6-91a3-4e3e77fccf49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402014, 7777, 467, 12, 70, "Input",ExpressionUUID->"418e51a7-37b3-4d0b-b5d7-1e9dd8c00ead"],
Cell[402484, 7791, 234, 5, 70, "Output",ExpressionUUID->"b1a1db4c-8668-4fc3-8e4c-683c100849b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402755, 7801, 295, 7, 70, "Input",ExpressionUUID->"12fec788-e565-4427-a5c7-528425ff8d33"],
Cell[403053, 7810, 305, 7, 70, "Output",ExpressionUUID->"2682d34e-7ee4-4f37-b538-6f0dcd357bff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403395, 7822, 302, 8, 70, "Input",ExpressionUUID->"d80e5b6d-8387-4aee-ae1f-c48f0cc856f8"],
Cell[403700, 7832, 258, 5, 70, "Output",ExpressionUUID->"98bb9c7f-1eb5-4d62-9706-0bcb676d2132"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[404007, 7843, 334, 6, 70, "Subtitle",ExpressionUUID->"c2e3e2c0-2546-4316-bad9-cbf9e0ce598c",
 CellTags->"Symbolic computing"],
Cell[404344, 7851, 2929, 68, 70, "Text",ExpressionUUID->"73699d30-0ffa-4198-bb95-76ad1ce1901f"],
Cell[407276, 7921, 386, 9, 70, "Text",ExpressionUUID->"f1d3aadb-d908-4c89-baeb-519fa8a88198"],
Cell[407665, 7932, 731, 17, 70, "Text",ExpressionUUID->"b3303afc-b292-4108-a81e-3ab81b61134b"],
Cell[CellGroupData[{
Cell[408421, 7953, 230, 7, 70, "Input",ExpressionUUID->"31ccb1fa-3d81-48b0-bd34-4cc4092be839"],
Cell[408654, 7962, 391, 11, 70, "Output",ExpressionUUID->"ca640b23-81b1-4246-bfe8-71c843b6034e"]
}, Open  ]],
Cell[409060, 7976, 665, 19, 70, "Text",ExpressionUUID->"718f227c-a7ec-440c-8e03-66d4c387a0ce"],
Cell[CellGroupData[{
Cell[409750, 7999, 364, 10, 70, "Input",ExpressionUUID->"5aab7fec-5f5b-479a-89e0-7a5ce287f1f6"],
Cell[410117, 8011, 350, 8, 70, "Output",ExpressionUUID->"378a9b3d-1160-44af-993b-4d8dafae6905"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410504, 8024, 358, 10, 70, "Input",ExpressionUUID->"4eed787b-8d65-4410-a857-f91be1ba7f51"],
Cell[410865, 8036, 649, 18, 70, "Output",ExpressionUUID->"68b1d561-1e46-49ec-b40c-d1cc4f88c727"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411551, 8059, 627, 16, 70, "Input",ExpressionUUID->"1afbf42e-1d25-40e5-8dbb-7829c1753fab"],
Cell[412181, 8077, 1041, 32, 70, "Output",ExpressionUUID->"83b51c14-c122-48e4-9fac-adfa58dc235c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413259, 8114, 361, 9, 70, "Input",ExpressionUUID->"975d43a5-3c60-4269-82c0-841615c5c4f2"],
Cell[413623, 8125, 363, 10, 70, "Output",ExpressionUUID->"ceefb8b5-0e8a-4db4-8fd6-c458d92cf405"]
}, Open  ]],
Cell[414001, 8138, 377, 9, 70, "Text",ExpressionUUID->"0adc8d12-f48b-4744-8a76-ec1f743dda26"],
Cell[414381, 8149, 188, 3, 70, "Text",ExpressionUUID->"40a7353c-fdf1-4c6a-9eb3-5c46ac9f3989"],
Cell[CellGroupData[{
Cell[414594, 8156, 264, 7, 70, "Input",ExpressionUUID->"9eca10fe-e979-4b97-acdd-52957d96258b"],
Cell[414861, 8165, 389, 10, 70, "Output",ExpressionUUID->"466d2fb4-56f6-449e-8401-22ea19e4d58d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415287, 8180, 272, 7, 70, "Input",ExpressionUUID->"5d68646b-e9f5-4905-a88a-104e9093461c"],
Cell[415562, 8189, 441, 13, 70, "Output",ExpressionUUID->"16311aed-cc5d-49b3-8b66-925a3c88cd99"]
}, Open  ]],
Cell[416018, 8205, 384, 9, 70, "Text",ExpressionUUID->"8b763ed0-422b-4e3f-bb5c-8a1f58581608"],
Cell[416405, 8216, 432, 12, 39, "Text",ExpressionUUID->"538cc483-8b22-474a-a9d8-4e79a32df0a3"],
Cell[CellGroupData[{
Cell[416862, 8232, 303, 9, 31, "Input",ExpressionUUID->"b15abc51-994b-4d21-b85d-d01c2dd7d040"],
Cell[417168, 8243, 352, 9, 36, "Output",ExpressionUUID->"7a2efaa5-3f38-4366-8d95-c5275254f718"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417557, 8257, 192, 4, 31, "Input",ExpressionUUID->"506ee0d7-165a-487d-837d-916c3e44405b"],
Cell[417752, 8263, 340, 9, 35, "Output",ExpressionUUID->"121abf27-0318-4695-8055-3ee1558abffa"]
}, Open  ]],
Cell[418107, 8275, 376, 9, 39, "Text",ExpressionUUID->"656853fa-d404-476e-8c89-899c2166fe91"],
Cell[418486, 8286, 727, 16, 64, "Text",ExpressionUUID->"9cdf137f-3e18-45d1-976e-32b838f4326d"],
Cell[CellGroupData[{
Cell[419238, 8306, 483, 12, 50, "Input",ExpressionUUID->"39094b6e-c00f-4d7a-801f-3f1986ac757a"],
Cell[419724, 8320, 469, 15, 55, "Output",ExpressionUUID->"ada7e54e-3e9e-45eb-a2c6-0bea385f6e01"]
}, Open  ]],
Cell[420208, 8338, 384, 9, 39, "Text",ExpressionUUID->"c390d6a8-c19f-4d62-b929-b3da347f5987"],
Cell[420595, 8349, 523, 12, 39, "Text",ExpressionUUID->"62580a13-9012-446c-ae8d-f92a5368edcc"],
Cell[CellGroupData[{
Cell[421143, 8365, 437, 14, 52, "Input",ExpressionUUID->"b674e6b7-ba97-4ef3-abdf-00b2df38b452"],
Cell[421583, 8381, 445, 14, 54, "Output",ExpressionUUID->"1a169e4d-a7e5-40da-901a-6d7bc4390167"]
}, Open  ]],
Cell[422043, 8398, 331, 10, 6, "Text",ExpressionUUID->"abfe9c40-831c-428e-90e0-3b5982d3dd30"],
Cell[422377, 8410, 1061, 22, 89, "Text",ExpressionUUID->"338b7898-a670-4f09-9c34-9d6c2a208db8"],
Cell[423441, 8434, 71, 0, 38, "Text",ExpressionUUID->"c0324e3a-5277-4ad7-9f4a-6dffe1f98102"],
Cell[423515, 8436, 874, 12, 38, "Text",ExpressionUUID->"1451f27a-53a6-4116-8ff1-7f5a4dc864ac"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

